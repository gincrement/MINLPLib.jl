using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
@variable(m, x[x_Idx])
setlowerbound(x[16], 0.0)
setlowerbound(x[6], 0.0)
setlowerbound(x[14], 0.0)
setlowerbound(x[11], 0.0)
setlowerbound(x[12], 0.0)
setlowerbound(x[5], 0.0)
setlowerbound(x[9], 0.0)
setlowerbound(x[15], 0.0)
setlowerbound(x[8], 0.0)
setlowerbound(x[7], 0.0)
setlowerbound(x[13], 0.0)
setlowerbound(x[10], 0.0)
setlowerbound(x[1], 0.5)
setupperbound(x[1], 1.0)
setlowerbound(x[2], 0.5)
setupperbound(x[2], 1.0)
setlowerbound(x[3], 0.5)
setupperbound(x[3], 1.0)
setlowerbound(x[4], 0.5)
setupperbound(x[4], 1.0)
setupperbound(x[5], 1.0)
setupperbound(x[6], 1.0)
setupperbound(x[7], 1.0)
setupperbound(x[8], 1.0)
setupperbound(x[9], 1.0)
setupperbound(x[10], 1.0)
setupperbound(x[11], 1.0)
setupperbound(x[12], 1.0)
setupperbound(x[13], 1.0)
setupperbound(x[14], 1.0)
setupperbound(x[15], 1.0)
setupperbound(x[16], 1.0)


# ----- Constraints ----- #
@NLconstraint(m, e1, 2*x[1]*x[2]-x[1]*x[1]-x[2]*x[2]-x[9]*x[9]+2*x[9]*x[10]-x[10]*x[10]+objvar <= 0.0)
@NLconstraint(m, e2, 2*x[1]*x[3]-x[1]*x[1]-x[3]*x[3]-x[9]*x[9]+2*x[9]*x[11]-x[11]*x[11]+objvar <= 0.0)
@NLconstraint(m, e3, 2*x[1]*x[4]-x[1]*x[1]-x[4]*x[4]-x[9]*x[9]+2*x[9]*x[12]-x[12]*x[12]+objvar <= 0.0)
@NLconstraint(m, e4, 2*x[1]*x[5]-x[1]*x[1]-x[5]*x[5]-x[9]*x[9]+2*x[9]*x[13]-x[13]*x[13]+objvar <= 0.0)
@NLconstraint(m, e5, 2*x[1]*x[6]-x[1]*x[1]-x[6]*x[6]-x[9]*x[9]+2*x[9]*x[14]-x[14]*x[14]+objvar <= 0.0)
@NLconstraint(m, e6, 2*x[1]*x[7]-x[1]*x[1]-x[7]*x[7]-x[9]*x[9]+2*x[9]*x[15]-x[15]*x[15]+objvar <= 0.0)
@NLconstraint(m, e7, 2*x[1]*x[8]-x[1]*x[1]-x[8]*x[8]-x[9]*x[9]+2*x[9]*x[16]-x[16]*x[16]+objvar <= 0.0)
@NLconstraint(m, e8, 2*x[2]*x[3]-x[2]*x[2]-x[3]*x[3]-x[10]*x[10]+2*x[10]*x[11]-x[11]*x[11]+objvar <= 0.0)
@NLconstraint(m, e9, 2*x[2]*x[4]-x[2]*x[2]-x[4]*x[4]-x[10]*x[10]+2*x[10]*x[12]-x[12]*x[12]+objvar <= 0.0)
@NLconstraint(m, e10, 2*x[2]*x[5]-x[2]*x[2]-x[5]*x[5]-x[10]*x[10]+2*x[10]*x[13]-x[13]*x[13]+objvar <= 0.0)
@NLconstraint(m, e11, 2*x[2]*x[6]-x[2]*x[2]-x[6]*x[6]-x[10]*x[10]+2*x[10]*x[14]-x[14]*x[14]+objvar <= 0.0)
@NLconstraint(m, e12, 2*x[2]*x[7]-x[2]*x[2]-x[7]*x[7]-x[10]*x[10]+2*x[10]*x[15]-x[15]*x[15]+objvar <= 0.0)
@NLconstraint(m, e13, 2*x[2]*x[8]-x[2]*x[2]-x[8]*x[8]-x[10]*x[10]+2*x[10]*x[16]-x[16]*x[16]+objvar <= 0.0)
@NLconstraint(m, e14, 2*x[3]*x[4]-x[3]*x[3]-x[4]*x[4]-x[11]*x[11]+2*x[11]*x[12]-x[12]*x[12]+objvar <= 0.0)
@NLconstraint(m, e15, 2*x[3]*x[5]-x[3]*x[3]-x[5]*x[5]-x[11]*x[11]+2*x[11]*x[13]-x[13]*x[13]+objvar <= 0.0)
@NLconstraint(m, e16, 2*x[3]*x[6]-x[3]*x[3]-x[6]*x[6]-x[11]*x[11]+2*x[11]*x[14]-x[14]*x[14]+objvar <= 0.0)
@NLconstraint(m, e17, 2*x[3]*x[7]-x[3]*x[3]-x[7]*x[7]-x[11]*x[11]+2*x[11]*x[15]-x[15]*x[15]+objvar <= 0.0)
@NLconstraint(m, e18, 2*x[3]*x[8]-x[3]*x[3]-x[8]*x[8]-x[11]*x[11]+2*x[11]*x[16]-x[16]*x[16]+objvar <= 0.0)
@NLconstraint(m, e19, 2*x[4]*x[5]-x[4]*x[4]-x[5]*x[5]-x[12]*x[12]+2*x[12]*x[13]-x[13]*x[13]+objvar <= 0.0)
@NLconstraint(m, e20, 2*x[4]*x[6]-x[4]*x[4]-x[6]*x[6]-x[12]*x[12]+2*x[12]*x[14]-x[14]*x[14]+objvar <= 0.0)
@NLconstraint(m, e21, 2*x[4]*x[7]-x[4]*x[4]-x[7]*x[7]-x[12]*x[12]+2*x[12]*x[15]-x[15]*x[15]+objvar <= 0.0)
@NLconstraint(m, e22, 2*x[4]*x[8]-x[4]*x[4]-x[8]*x[8]-x[12]*x[12]+2*x[12]*x[16]-x[16]*x[16]+objvar <= 0.0)
@NLconstraint(m, e23, 2*x[5]*x[6]-x[5]*x[5]-x[6]*x[6]-x[13]*x[13]+2*x[13]*x[14]-x[14]*x[14]+objvar <= 0.0)
@NLconstraint(m, e24, 2*x[5]*x[7]-x[5]*x[5]-x[7]*x[7]-x[13]*x[13]+2*x[13]*x[15]-x[15]*x[15]+objvar <= 0.0)
@NLconstraint(m, e25, 2*x[5]*x[8]-x[5]*x[5]-x[8]*x[8]-x[13]*x[13]+2*x[13]*x[16]-x[16]*x[16]+objvar <= 0.0)
@NLconstraint(m, e26, 2*x[6]*x[7]-x[6]*x[6]-x[7]*x[7]-x[14]*x[14]+2*x[14]*x[15]-x[15]*x[15]+objvar <= 0.0)
@NLconstraint(m, e27, 2*x[6]*x[8]-x[6]*x[6]-x[8]*x[8]-x[14]*x[14]+2*x[14]*x[16]-x[16]*x[16]+objvar <= 0.0)
@NLconstraint(m, e28, 2*x[7]*x[8]-x[7]*x[7]-x[8]*x[8]-x[15]*x[15]+2*x[15]*x[16]-x[16]*x[16]+objvar <= 0.0)
@constraint(m, e29, -x[9]+x[10] <= 0.0)
@constraint(m, e30, -x[1]+x[2] <= 0.0)
@constraint(m, e31, -x[2]+x[3] <= 0.0)
@constraint(m, e32, -x[3]+x[4] <= 0.0)
@constraint(m, e33, -x[4]+x[5] <= 0.0)
@constraint(m, e34, -x[5]+x[6] <= 0.0)
@constraint(m, e35, -x[6]+x[7] <= 0.0)
@constraint(m, e36, -x[7]+x[8] <= 0.0)


# ----- Objective ----- #
@objective(m, Max, objvar)

m = m 		 # model get returned when including this script. 
