using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
@variable(m, x[x_Idx])
b_Idx = Any[11, 12, 13, 14, 15, 16, 17, 18, 19, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
@variable(m, b[b_Idx])
i_Idx = Any[20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46]
@variable(m, i[i_Idx])
set_integer(i[35])
set_lower_bound(i[35], 0.0)
set_upper_bound(i[35], 100.0)
set_integer(i[33])
set_lower_bound(i[33], 0.0)
set_upper_bound(i[33], 100.0)
set_binary(b[15])
set_binary(b[49])
set_binary(b[48])
set_integer(i[41])
set_lower_bound(i[41], 0.0)
set_upper_bound(i[41], 100.0)
set_integer(i[31])
set_lower_bound(i[31], 0.0)
set_upper_bound(i[31], 100.0)
set_integer(i[34])
set_lower_bound(i[34], 0.0)
set_upper_bound(i[34], 100.0)
set_lower_bound(x[2], 0.0)
set_integer(i[22])
set_lower_bound(i[22], 0.0)
set_upper_bound(i[22], 100.0)
set_integer(i[37])
set_lower_bound(i[37], 0.0)
set_upper_bound(i[37], 100.0)
set_integer(i[45])
set_lower_bound(i[45], 0.0)
set_upper_bound(i[45], 100.0)
set_lower_bound(x[9], 0.0)
set_lower_bound(x[8], 0.0)
set_binary(b[64])
set_binary(b[54])
set_integer(i[25])
set_lower_bound(i[25], 0.0)
set_upper_bound(i[25], 100.0)
set_integer(i[21])
set_lower_bound(i[21], 0.0)
set_upper_bound(i[21], 100.0)
set_lower_bound(x[4], 0.0)
set_lower_bound(x[3], 0.0)
set_binary(b[53])
set_binary(b[56])
set_integer(i[26])
set_lower_bound(i[26], 0.0)
set_upper_bound(i[26], 100.0)
set_lower_bound(x[5], 0.0)
set_binary(b[61])
set_binary(b[58])
set_binary(b[57])
set_binary(b[16])
set_lower_bound(x[7], 0.0)
set_binary(b[60])
set_lower_bound(x[10], 0.0)
set_binary(b[13])
set_binary(b[51])
set_binary(b[12])
set_binary(b[14])
set_integer(i[44])
set_lower_bound(i[44], 0.0)
set_upper_bound(i[44], 100.0)
set_integer(i[32])
set_lower_bound(i[32], 0.0)
set_upper_bound(i[32], 100.0)
set_binary(b[47])
set_binary(b[11])
set_binary(b[19])
set_integer(i[28])
set_lower_bound(i[28], 0.0)
set_upper_bound(i[28], 100.0)
set_integer(i[46])
set_lower_bound(i[46], 0.0)
set_upper_bound(i[46], 100.0)
set_integer(i[36])
set_lower_bound(i[36], 0.0)
set_upper_bound(i[36], 100.0)
set_integer(i[40])
set_lower_bound(i[40], 0.0)
set_upper_bound(i[40], 100.0)
set_binary(b[59])
set_binary(b[17])
set_integer(i[43])
set_lower_bound(i[43], 0.0)
set_upper_bound(i[43], 100.0)
set_integer(i[20])
set_lower_bound(i[20], 0.0)
set_upper_bound(i[20], 100.0)
set_integer(i[38])
set_lower_bound(i[38], 0.0)
set_upper_bound(i[38], 100.0)
set_integer(i[23])
set_lower_bound(i[23], 0.0)
set_upper_bound(i[23], 100.0)
set_binary(b[50])
set_integer(i[27])
set_lower_bound(i[27], 0.0)
set_upper_bound(i[27], 100.0)
set_lower_bound(x[6], 0.0)
set_binary(b[18])
set_integer(i[24])
set_lower_bound(i[24], 0.0)
set_upper_bound(i[24], 100.0)
set_integer(i[29])
set_lower_bound(i[29], 0.0)
set_upper_bound(i[29], 100.0)
set_binary(b[62])
set_binary(b[52])
set_binary(b[55])
set_binary(b[63])
set_integer(i[30])
set_lower_bound(i[30], 0.0)
set_upper_bound(i[30], 100.0)
set_integer(i[39])
set_lower_bound(i[39], 0.0)
set_upper_bound(i[39], 100.0)
set_integer(i[42])
set_lower_bound(i[42], 0.0)
set_upper_bound(i[42], 100.0)
set_upper_bound(i[20], 100.0)
set_upper_bound(i[21], 100.0)
set_upper_bound(i[22], 100.0)
set_upper_bound(i[23], 100.0)
set_upper_bound(i[24], 100.0)
set_upper_bound(i[25], 100.0)
set_upper_bound(i[26], 100.0)
set_upper_bound(i[27], 100.0)
set_upper_bound(i[28], 100.0)
set_upper_bound(i[29], 100.0)
set_upper_bound(i[30], 100.0)
set_upper_bound(i[31], 100.0)
set_upper_bound(i[32], 100.0)
set_upper_bound(i[33], 100.0)
set_upper_bound(i[34], 100.0)
set_upper_bound(i[35], 100.0)
set_upper_bound(i[36], 100.0)
set_upper_bound(i[37], 100.0)
set_upper_bound(i[38], 100.0)
set_upper_bound(i[39], 100.0)
set_upper_bound(i[40], 100.0)
set_upper_bound(i[41], 100.0)
set_upper_bound(i[42], 100.0)
set_upper_bound(i[43], 100.0)
set_upper_bound(i[44], 100.0)
set_upper_bound(i[45], 100.0)
set_upper_bound(i[46], 100.0)


# ----- Constraints ----- #
@constraint(m, e1, x[1]-x[2] == 0.0)
@constraint(m, e2, x[1]-x[3] == 0.0)
@constraint(m, e3, x[1]-x[4] == 0.0)
@constraint(m, e4, x[1]-x[5] == 0.0)
@constraint(m, e5, x[1]-x[6] == 0.0)
@constraint(m, e6, x[1]-x[7] == 0.0)
@constraint(m, e7, x[1]-x[8] == 0.0)
@constraint(m, e8, x[1]-x[9] == 0.0)
@constraint(m, e9, x[1]-x[10] == 0.0)
@constraint(m, e10, i[20]+i[23]+i[26] == 11.0)
@constraint(m, e11, i[21]+i[24]+i[27] == 11.0)
@constraint(m, e12, i[22]+i[25]+i[28] == 11.0)
@constraint(m, e13, i[29]+i[32]+i[35] == 7.0)
@constraint(m, e14, i[30]+i[33]+i[36] == 7.0)
@constraint(m, e15, i[31]+i[34]+i[37] == 7.0)
@constraint(m, e16, i[38]+i[41]+i[44] == 14.0)
@constraint(m, e17, i[39]+i[42]+i[45] == 14.0)
@constraint(m, e18, i[40]+i[43]+i[46] == 14.0)
@constraint(m, e19, i[20]+i[21]+i[22]+i[29]+i[30]+i[31]+i[38]+i[39]+i[40] <= 12.0)
@constraint(m, e20, i[23]+i[24]+i[25]+i[32]+i[33]+i[34]+i[41]+i[42]+i[43] <= 8.0)
@constraint(m, e21, i[26]+i[27]+i[28]+i[35]+i[36]+i[37]+i[44]+i[45]+i[46] <= 15.0)
@constraint(m, e22, b[11]+b[12]+b[13] >= 2.0)
@constraint(m, e23, b[14]+b[15]+b[16] >= 2.0)
@constraint(m, e24, b[17]+b[18]+b[19] >= 2.0)
@constraint(m, e25, b[11]+b[12]+b[13] <= 3.0)
@constraint(m, e26, b[14]+b[15]+b[16] <= 3.0)
@constraint(m, e27, b[17]+b[18]+b[19] <= 3.0)
@constraint(m, e28, b[47]+b[50]+b[53] == 1.0)
@constraint(m, e29, b[48]+b[51]+b[54] == 1.0)
@constraint(m, e30, b[49]+b[52]+b[55] == 1.0)
@constraint(m, e31, b[47]+b[48]+b[49] == 1.0)
@constraint(m, e32, b[50]+b[51]+b[52] == 1.0)
@constraint(m, e33, b[53]+b[54]+b[55] == 1.0)
@constraint(m, e34, -14.0001*b[11]+i[20]+i[21]+i[22] <= 0.9999)
@constraint(m, e35, -14.0001*b[12]+i[23]+i[24]+i[25] <= 0.9999)
@constraint(m, e36, -14.0001*b[13]+i[26]+i[27]+i[28] <= 0.9999)
@constraint(m, e37, -14.0001*b[14]+i[29]+i[30]+i[31] <= 0.9999)
@constraint(m, e38, -14.0001*b[15]+i[32]+i[33]+i[34] <= 0.9999)
@constraint(m, e39, -14.0001*b[16]+i[35]+i[36]+i[37] <= 0.9999)
@constraint(m, e40, -14.0001*b[17]+i[38]+i[39]+i[40] <= 0.9999)
@constraint(m, e41, -14.0001*b[18]+i[41]+i[42]+i[43] <= 0.9999)
@constraint(m, e42, -14.0001*b[19]+i[44]+i[45]+i[46] <= 0.9999)
@constraint(m, e43, i[20]+i[23]+i[26]-14.0001*b[47] <= 0.9999)
@constraint(m, e44, i[21]+i[24]+i[27]-14.0001*b[48] <= 0.9999)
@constraint(m, e45, i[22]+i[25]+i[28]-14.0001*b[49] <= 0.9999)
@constraint(m, e46, i[29]+i[32]+i[35]-14.0001*b[50] <= 0.9999)
@constraint(m, e47, i[30]+i[33]+i[36]-14.0001*b[51] <= 0.9999)
@constraint(m, e48, i[31]+i[34]+i[37]-14.0001*b[52] <= 0.9999)
@constraint(m, e49, i[38]+i[41]+i[44]-14.0001*b[53] <= 0.9999)
@constraint(m, e50, i[39]+i[42]+i[45]-14.0001*b[54] <= 0.9999)
@constraint(m, e51, i[40]+i[43]+i[46]-14.0001*b[55] <= 0.9999)
@constraint(m, e52, x[2]-26.6666666666667*i[20]-24*i[23]-10.6666666666667*i[26] >= 0.0)
@constraint(m, e53, x[3]-29*i[21]-26.1*i[24]-11.6*i[27] >= 0.0)
@constraint(m, e54, x[4]-38.3333333333333*i[22]-34.5*i[25]-15.3333333333333*i[28] >= 0.0)
@constraint(m, e55, x[5]-29.3333333333333*i[29]-18.6666666666667*i[32]-13.3333333333333*i[35] >= 0.0)
@constraint(m, e56, x[6]-31.9*i[30]-20.3*i[33]-14.5*i[36] >= 0.0)
@constraint(m, e57, x[7]-42.1666666666667*i[31]-26.8333333333333*i[34]-19.1666666666667*i[37] >= 0.0)
@constraint(m, e58, x[8]-32*i[38]-21.3333333333333*i[41]-16*i[44] >= 0.0)
@constraint(m, e59, x[9]-34.8*i[39]-23.2*i[42]-17.4*i[45] >= 0.0)
@constraint(m, e60, x[10]-46*i[40]-30.6666666666667*i[43]-23*i[46] >= 0.0)
@constraint(m, e61, i[20]+i[21]+i[22]-14.0001*b[56] <= -0.0001)
@constraint(m, e62, i[23]+i[24]+i[25]-14.0001*b[57] <= -0.0001)
@constraint(m, e63, i[26]+i[27]+i[28]-14.0001*b[58] <= -0.0001)
@constraint(m, e64, i[29]+i[30]+i[31]-14.0001*b[59] <= -0.0001)
@constraint(m, e65, i[32]+i[33]+i[34]-14.0001*b[60] <= -0.0001)
@constraint(m, e66, i[35]+i[36]+i[37]-14.0001*b[61] <= -0.0001)
@constraint(m, e67, i[38]+i[39]+i[40]-14.0001*b[62] <= -0.0001)
@constraint(m, e68, i[41]+i[42]+i[43]-14.0001*b[63] <= -0.0001)
@constraint(m, e69, i[44]+i[45]+i[46]-14.0001*b[64] <= -0.0001)
@constraint(m, e70, -0.0001*b[11]+i[20]+i[21]+i[22]+0.0001*b[56] >= 0.0001)
@constraint(m, e71, -0.0001*b[12]+i[23]+i[24]+i[25]+0.0001*b[57] >= 0.0001)
@constraint(m, e72, -0.0001*b[13]+i[26]+i[27]+i[28]+0.0001*b[58] >= 0.0001)
@constraint(m, e73, -0.0001*b[14]+i[29]+i[30]+i[31]+0.0001*b[59] >= 0.0001)
@constraint(m, e74, -0.0001*b[15]+i[32]+i[33]+i[34]+0.0001*b[60] >= 0.0001)
@constraint(m, e75, -0.0001*b[16]+i[35]+i[36]+i[37]+0.0001*b[61] >= 0.0001)
@constraint(m, e76, -0.0001*b[17]+i[38]+i[39]+i[40]+0.0001*b[62] >= 0.0001)
@constraint(m, e77, -0.0001*b[18]+i[41]+i[42]+i[43]+0.0001*b[63] >= 0.0001)
@constraint(m, e78, -0.0001*b[19]+i[44]+i[45]+i[46]+0.0001*b[64] >= 0.0001)


# ----- Objective ----- #
@objective(m, Min, x[1])

m = m 		 # model get returned when including this script.