using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
@variable(m, x[x_Idx])
b_Idx = Any[39, 40, 41, 42, 43, 44, 45, 46]
@variable(m, b[b_Idx])
set_lower_bound(x[36], 0.0)
set_binary(b[44])
set_lower_bound(x[16], 0.0)
set_lower_bound(x[32], 0.0)
set_lower_bound(x[27], 0.0)
set_lower_bound(x[14], 0.0)
set_lower_bound(x[17], 0.0)
set_lower_bound(x[25], 0.0)
set_lower_bound(x[38], 0.0)
set_lower_bound(x[30], 0.0)
set_lower_bound(x[26], 0.0)
set_binary(b[46])
set_lower_bound(x[23], 0.0)
set_lower_bound(x[34], 0.0)
set_lower_bound(x[11], 0.0)
set_binary(b[43])
set_lower_bound(x[29], 0.0)
set_lower_bound(x[22], 0.0)
set_binary(b[42])
set_lower_bound(x[12], 0.0)
set_binary(b[45])
set_binary(b[40])
set_lower_bound(x[37], 0.0)
set_lower_bound(x[19], 0.0)
set_binary(b[41])
set_lower_bound(x[20], 0.0)
set_lower_bound(x[24], 0.0)
set_lower_bound(x[31], 0.0)
set_lower_bound(x[18], 0.0)
set_lower_bound(x[15], 0.0)
set_lower_bound(x[33], 0.0)
set_binary(b[39])
set_lower_bound(x[13], 0.0)
set_lower_bound(x[21], 0.0)
set_lower_bound(x[28], 0.0)
set_lower_bound(x[35], 0.0)


# ----- Constraints ----- #
@constraint(m, e1, x[1]-10*x[3]-10*x[4]-10*x[12]-10*x[13]-10*x[15]-10*x[16]-4*x[17]-4*x[18]-10*x[19]-10*x[20]-10*x[21]-10*x[22]-10*x[23]-10*x[24]-10*x[25]-10*x[26]-10*x[27]-10*x[28]-10*x[29]-10*x[30]-10*x[31]-10*x[32]-10*x[33]-10*x[34]-10*x[35]-10*x[36]-10*x[37]-10*x[38]-99999999*b[39]-99999999*b[40]-99999999*b[41]-99999999*b[42]-99999999*b[43]-99999999*b[44]-99999999*b[45]-99999999*b[46] == 0.0)
@constraint(m, e2, x[2]-x[3]+x[17]-x[19]-x[21] == 0.0)
@constraint(m, e3, x[3]-x[4]+x[18]-x[20]-x[22] == 0.0)
@constraint(m, e4, x[2] == 0.0)
@constraint(m, e5, x[5] == 200.0)
@constraint(m, e6, x[6] == 200.0)
@constraint(m, e7, x[8] == 200.0)
@constraint(m, e8, x[9] == 200.0)
@constraint(m, e9, x[5] == 0.0)
@constraint(m, e10, x[8] == 0.0)
@constraint(m, e11, -x[6]-99999999*b[39] <= 0.0)
@constraint(m, e12, -x[7]-99999999*b[40] <= 0.0)
@constraint(m, e13, -x[9]-99999999*b[41] <= 0.0)
@constraint(m, e14, -x[10]-99999999*b[42] <= 0.0)
@NLconstraint(m, e15, b[39]*x[6]+x[23]+x[25] == 0.0)
@NLconstraint(m, e16, b[40]*x[7]+x[24]+x[26] == 0.0)
@NLconstraint(m, e17, b[41]*x[9]+x[27]+x[29] == 0.0)
@NLconstraint(m, e18, b[42]*x[10]+x[28]+x[30] == 0.0)
@constraint(m, e19, x[11]-x[12]+x[19]-x[31]-x[33] == 0.0)
@constraint(m, e20, x[12]-x[13]+x[20]-x[32]-x[34] == 0.0)
@constraint(m, e21, x[14]-x[15]+x[21]-x[35]-x[37] == 0.0)
@constraint(m, e22, x[15]-x[16]+x[22]-x[36]-x[38] == 0.0)
@constraint(m, e23, x[6]-99999999*b[43] <= 0.0)
@constraint(m, e24, x[7]-99999999*b[44] <= 0.0)
@constraint(m, e25, x[9]-99999999*b[45] <= 0.0)
@constraint(m, e26, x[10]-99999999*b[46] <= 0.0)
@NLconstraint(m, e27, -b[43]*x[6]+x[12] == 0.0)
@NLconstraint(m, e28, -b[44]*x[7]+x[13] == 0.0)
@NLconstraint(m, e29, -b[45]*x[9]+x[15] == 0.0)
@NLconstraint(m, e30, -b[46]*x[10]+x[16] == 0.0)
@constraint(m, e31, 0.01*x[31]+0.01*x[35] >= 0.6)
@constraint(m, e32, 0.01*x[33]+0.01*x[37] >= 0.6)
@constraint(m, e33, x[2] <= 0.0)
@constraint(m, e34, x[3] <= 10.0)
@constraint(m, e35, x[4] <= 10.0)
@constraint(m, e36, x[12] <= 10.0)
@constraint(m, e37, x[13] <= 10.0)
@constraint(m, e38, x[15] <= 10.0)
@constraint(m, e39, x[16] <= 10.0)
@constraint(m, e40, x[31]+x[33] <= 200.0)
@constraint(m, e41, x[32]+x[34] <= 200.0)
@constraint(m, e42, x[35]+x[37] <= 200.0)
@constraint(m, e43, x[36]+x[38] <= 200.0)
@constraint(m, e44, x[24] == 0.0)
@constraint(m, e45, x[26] == 0.0)
@constraint(m, e46, x[28] == 0.0)
@constraint(m, e47, x[30] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[1])

m = m 		 # model get returned when including this script.