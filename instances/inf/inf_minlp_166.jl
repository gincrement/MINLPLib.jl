using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1]
@variable(m, x[x_Idx])
b_Idx = Any[135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166]
@variable(m, b[b_Idx])
i_Idx = Any[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134]
@variable(m, i[i_Idx])
set_integer(i[68])
set_lower_bound(i[68], 0.0)
set_upper_bound(i[68], 100.0)
set_integer(i[133])
set_lower_bound(i[133], 0.0)
set_upper_bound(i[133], 100.0)
set_integer(i[35])
set_lower_bound(i[35], 0.0)
set_upper_bound(i[35], 100.0)
set_binary(b[161])
set_binary(b[158])
set_integer(i[91])
set_lower_bound(i[91], 0.0)
set_upper_bound(i[91], 100.0)
set_integer(i[33])
set_lower_bound(i[33], 0.0)
set_upper_bound(i[33], 100.0)
set_integer(i[5])
set_lower_bound(i[5], 0.0)
set_upper_bound(i[5], 100.0)
set_integer(i[108])
set_lower_bound(i[108], 0.0)
set_upper_bound(i[108], 100.0)
set_integer(i[3])
set_lower_bound(i[3], 0.0)
set_upper_bound(i[3], 100.0)
set_integer(i[84])
set_lower_bound(i[84], 0.0)
set_upper_bound(i[84], 100.0)
set_integer(i[100])
set_lower_bound(i[100], 0.0)
set_upper_bound(i[100], 100.0)
set_integer(i[86])
set_lower_bound(i[86], 0.0)
set_upper_bound(i[86], 100.0)
set_integer(i[74])
set_lower_bound(i[74], 0.0)
set_upper_bound(i[74], 100.0)
set_binary(b[160])
set_integer(i[119])
set_lower_bound(i[119], 0.0)
set_upper_bound(i[119], 100.0)
set_integer(i[127])
set_lower_bound(i[127], 0.0)
set_upper_bound(i[127], 100.0)
set_binary(b[163])
set_integer(i[58])
set_lower_bound(i[58], 0.0)
set_upper_bound(i[58], 100.0)
set_binary(b[137])
set_integer(i[41])
set_lower_bound(i[41], 0.0)
set_upper_bound(i[41], 100.0)
set_integer(i[31])
set_lower_bound(i[31], 0.0)
set_upper_bound(i[31], 100.0)
set_integer(i[34])
set_lower_bound(i[34], 0.0)
set_upper_bound(i[34], 100.0)
set_integer(i[61])
set_lower_bound(i[61], 0.0)
set_upper_bound(i[61], 100.0)
set_binary(b[164])
set_integer(i[14])
set_lower_bound(i[14], 0.0)
set_upper_bound(i[14], 100.0)
set_binary(b[141])
set_integer(i[22])
set_lower_bound(i[22], 0.0)
set_upper_bound(i[22], 100.0)
set_integer(i[37])
set_lower_bound(i[37], 0.0)
set_upper_bound(i[37], 100.0)
set_integer(i[45])
set_lower_bound(i[45], 0.0)
set_upper_bound(i[45], 100.0)
set_integer(i[15])
set_lower_bound(i[15], 0.0)
set_upper_bound(i[15], 100.0)
set_integer(i[75])
set_lower_bound(i[75], 0.0)
set_upper_bound(i[75], 100.0)
set_integer(i[93])
set_lower_bound(i[93], 0.0)
set_upper_bound(i[93], 100.0)
set_integer(i[76])
set_lower_bound(i[76], 0.0)
set_upper_bound(i[76], 100.0)
set_integer(i[77])
set_lower_bound(i[77], 0.0)
set_upper_bound(i[77], 100.0)
set_integer(i[106])
set_lower_bound(i[106], 0.0)
set_upper_bound(i[106], 100.0)
set_integer(i[109])
set_lower_bound(i[109], 0.0)
set_upper_bound(i[109], 100.0)
set_integer(i[110])
set_lower_bound(i[110], 0.0)
set_upper_bound(i[110], 100.0)
set_integer(i[130])
set_lower_bound(i[130], 0.0)
set_upper_bound(i[130], 100.0)
set_integer(i[25])
set_lower_bound(i[25], 0.0)
set_upper_bound(i[25], 100.0)
set_binary(b[136])
set_binary(b[143])
set_integer(i[53])
set_lower_bound(i[53], 0.0)
set_upper_bound(i[53], 100.0)
set_integer(i[60])
set_lower_bound(i[60], 0.0)
set_upper_bound(i[60], 100.0)
set_integer(i[104])
set_lower_bound(i[104], 0.0)
set_upper_bound(i[104], 100.0)
set_binary(b[150])
set_integer(i[21])
set_lower_bound(i[21], 0.0)
set_upper_bound(i[21], 100.0)
set_integer(i[124])
set_lower_bound(i[124], 0.0)
set_upper_bound(i[124], 100.0)
set_integer(i[73])
set_lower_bound(i[73], 0.0)
set_upper_bound(i[73], 100.0)
set_integer(i[63])
set_lower_bound(i[63], 0.0)
set_upper_bound(i[63], 100.0)
set_integer(i[128])
set_lower_bound(i[128], 0.0)
set_upper_bound(i[128], 100.0)
set_integer(i[56])
set_lower_bound(i[56], 0.0)
set_upper_bound(i[56], 100.0)
set_integer(i[64])
set_lower_bound(i[64], 0.0)
set_upper_bound(i[64], 100.0)
set_integer(i[72])
set_lower_bound(i[72], 0.0)
set_upper_bound(i[72], 100.0)
set_integer(i[49])
set_lower_bound(i[49], 0.0)
set_upper_bound(i[49], 100.0)
set_integer(i[94])
set_lower_bound(i[94], 0.0)
set_upper_bound(i[94], 100.0)
set_integer(i[95])
set_lower_bound(i[95], 0.0)
set_upper_bound(i[95], 100.0)
set_integer(i[2])
set_lower_bound(i[2], 0.0)
set_upper_bound(i[2], 100.0)
set_integer(i[13])
set_lower_bound(i[13], 0.0)
set_upper_bound(i[13], 100.0)
set_integer(i[6])
set_lower_bound(i[6], 0.0)
set_upper_bound(i[6], 100.0)
set_integer(i[26])
set_lower_bound(i[26], 0.0)
set_upper_bound(i[26], 100.0)
set_integer(i[78])
set_lower_bound(i[78], 0.0)
set_upper_bound(i[78], 100.0)
set_integer(i[82])
set_lower_bound(i[82], 0.0)
set_upper_bound(i[82], 100.0)
set_integer(i[89])
set_lower_bound(i[89], 0.0)
set_upper_bound(i[89], 100.0)
set_binary(b[145])
set_integer(i[52])
set_lower_bound(i[52], 0.0)
set_upper_bound(i[52], 100.0)
set_integer(i[80])
set_lower_bound(i[80], 0.0)
set_upper_bound(i[80], 100.0)
set_integer(i[92])
set_lower_bound(i[92], 0.0)
set_upper_bound(i[92], 100.0)
set_integer(i[66])
set_lower_bound(i[66], 0.0)
set_upper_bound(i[66], 100.0)
set_integer(i[123])
set_lower_bound(i[123], 0.0)
set_upper_bound(i[123], 100.0)
set_integer(i[116])
set_lower_bound(i[116], 0.0)
set_upper_bound(i[116], 100.0)
set_integer(i[11])
set_lower_bound(i[11], 0.0)
set_upper_bound(i[11], 100.0)
set_integer(i[62])
set_lower_bound(i[62], 0.0)
set_upper_bound(i[62], 100.0)
set_binary(b[153])
set_binary(b[159])
set_integer(i[18])
set_lower_bound(i[18], 0.0)
set_upper_bound(i[18], 100.0)
set_integer(i[8])
set_lower_bound(i[8], 0.0)
set_upper_bound(i[8], 100.0)
set_integer(i[97])
set_lower_bound(i[97], 0.0)
set_upper_bound(i[97], 100.0)
set_integer(i[85])
set_lower_bound(i[85], 0.0)
set_upper_bound(i[85], 100.0)
set_integer(i[51])
set_lower_bound(i[51], 0.0)
set_upper_bound(i[51], 100.0)
set_binary(b[144])
set_integer(i[50])
set_lower_bound(i[50], 0.0)
set_upper_bound(i[50], 100.0)
set_integer(i[90])
set_lower_bound(i[90], 0.0)
set_upper_bound(i[90], 100.0)
set_binary(b[142])
set_integer(i[19])
set_lower_bound(i[19], 0.0)
set_upper_bound(i[19], 100.0)
set_integer(i[101])
set_lower_bound(i[101], 0.0)
set_upper_bound(i[101], 100.0)
set_binary(b[166])
set_integer(i[44])
set_lower_bound(i[44], 0.0)
set_upper_bound(i[44], 100.0)
set_integer(i[83])
set_lower_bound(i[83], 0.0)
set_upper_bound(i[83], 100.0)
set_integer(i[32])
set_lower_bound(i[32], 0.0)
set_upper_bound(i[32], 100.0)
set_integer(i[79])
set_lower_bound(i[79], 0.0)
set_upper_bound(i[79], 100.0)
set_integer(i[46])
set_lower_bound(i[46], 0.0)
set_upper_bound(i[46], 100.0)
set_integer(i[55])
set_lower_bound(i[55], 0.0)
set_upper_bound(i[55], 100.0)
set_integer(i[125])
set_lower_bound(i[125], 0.0)
set_upper_bound(i[125], 100.0)
set_integer(i[28])
set_lower_bound(i[28], 0.0)
set_upper_bound(i[28], 100.0)
set_integer(i[81])
set_lower_bound(i[81], 0.0)
set_upper_bound(i[81], 100.0)
set_integer(i[36])
set_lower_bound(i[36], 0.0)
set_upper_bound(i[36], 100.0)
set_integer(i[48])
set_lower_bound(i[48], 0.0)
set_upper_bound(i[48], 100.0)
set_binary(b[138])
set_integer(i[4])
set_lower_bound(i[4], 0.0)
set_upper_bound(i[4], 100.0)
set_binary(b[165])
set_integer(i[40])
set_lower_bound(i[40], 0.0)
set_upper_bound(i[40], 100.0)
set_binary(b[151])
set_binary(b[135])
set_integer(i[9])
set_lower_bound(i[9], 0.0)
set_upper_bound(i[9], 100.0)
set_integer(i[65])
set_lower_bound(i[65], 0.0)
set_upper_bound(i[65], 100.0)
set_integer(i[96])
set_lower_bound(i[96], 0.0)
set_upper_bound(i[96], 100.0)
set_integer(i[121])
set_lower_bound(i[121], 0.0)
set_upper_bound(i[121], 100.0)
set_integer(i[126])
set_lower_bound(i[126], 0.0)
set_upper_bound(i[126], 100.0)
set_integer(i[17])
set_lower_bound(i[17], 0.0)
set_upper_bound(i[17], 100.0)
set_integer(i[132])
set_lower_bound(i[132], 0.0)
set_upper_bound(i[132], 100.0)
set_integer(i[59])
set_lower_bound(i[59], 0.0)
set_upper_bound(i[59], 100.0)
set_integer(i[115])
set_lower_bound(i[115], 0.0)
set_upper_bound(i[115], 100.0)
set_binary(b[154])
set_integer(i[7])
set_lower_bound(i[7], 0.0)
set_upper_bound(i[7], 100.0)
set_integer(i[20])
set_lower_bound(i[20], 0.0)
set_upper_bound(i[20], 100.0)
set_integer(i[43])
set_lower_bound(i[43], 0.0)
set_upper_bound(i[43], 100.0)
set_integer(i[113])
set_lower_bound(i[113], 0.0)
set_upper_bound(i[113], 100.0)
set_integer(i[118])
set_lower_bound(i[118], 0.0)
set_upper_bound(i[118], 100.0)
set_integer(i[111])
set_lower_bound(i[111], 0.0)
set_upper_bound(i[111], 100.0)
set_integer(i[88])
set_lower_bound(i[88], 0.0)
set_upper_bound(i[88], 100.0)
set_integer(i[38])
set_lower_bound(i[38], 0.0)
set_upper_bound(i[38], 100.0)
set_integer(i[47])
set_lower_bound(i[47], 0.0)
set_upper_bound(i[47], 100.0)
set_integer(i[23])
set_lower_bound(i[23], 0.0)
set_upper_bound(i[23], 100.0)
set_integer(i[57])
set_lower_bound(i[57], 0.0)
set_upper_bound(i[57], 100.0)
set_integer(i[12])
set_lower_bound(i[12], 0.0)
set_upper_bound(i[12], 100.0)
set_integer(i[114])
set_lower_bound(i[114], 0.0)
set_upper_bound(i[114], 100.0)
set_integer(i[122])
set_lower_bound(i[122], 0.0)
set_upper_bound(i[122], 100.0)
set_integer(i[27])
set_lower_bound(i[27], 0.0)
set_upper_bound(i[27], 100.0)
set_integer(i[71])
set_lower_bound(i[71], 0.0)
set_upper_bound(i[71], 100.0)
set_integer(i[105])
set_lower_bound(i[105], 0.0)
set_upper_bound(i[105], 100.0)
set_integer(i[24])
set_lower_bound(i[24], 0.0)
set_upper_bound(i[24], 100.0)
set_integer(i[29])
set_lower_bound(i[29], 0.0)
set_upper_bound(i[29], 100.0)
set_binary(b[140])
set_binary(b[155])
set_integer(i[120])
set_lower_bound(i[120], 0.0)
set_upper_bound(i[120], 100.0)
set_binary(b[149])
set_binary(b[146])
set_integer(i[69])
set_lower_bound(i[69], 0.0)
set_upper_bound(i[69], 100.0)
set_integer(i[67])
set_lower_bound(i[67], 0.0)
set_upper_bound(i[67], 100.0)
set_integer(i[99])
set_lower_bound(i[99], 0.0)
set_upper_bound(i[99], 100.0)
set_integer(i[112])
set_lower_bound(i[112], 0.0)
set_upper_bound(i[112], 100.0)
set_integer(i[129])
set_lower_bound(i[129], 0.0)
set_upper_bound(i[129], 100.0)
set_integer(i[54])
set_lower_bound(i[54], 0.0)
set_upper_bound(i[54], 100.0)
set_binary(b[152])
set_integer(i[102])
set_lower_bound(i[102], 0.0)
set_upper_bound(i[102], 100.0)
set_integer(i[131])
set_lower_bound(i[131], 0.0)
set_upper_bound(i[131], 100.0)
set_integer(i[134])
set_lower_bound(i[134], 0.0)
set_upper_bound(i[134], 100.0)
set_integer(i[70])
set_lower_bound(i[70], 0.0)
set_upper_bound(i[70], 100.0)
set_integer(i[107])
set_lower_bound(i[107], 0.0)
set_upper_bound(i[107], 100.0)
set_binary(b[139])
set_integer(i[16])
set_lower_bound(i[16], 0.0)
set_upper_bound(i[16], 100.0)
set_integer(i[10])
set_lower_bound(i[10], 0.0)
set_upper_bound(i[10], 100.0)
set_binary(b[157])
set_integer(i[87])
set_lower_bound(i[87], 0.0)
set_upper_bound(i[87], 100.0)
set_integer(i[117])
set_lower_bound(i[117], 0.0)
set_upper_bound(i[117], 100.0)
set_binary(b[147])
set_binary(b[148])
set_integer(i[103])
set_lower_bound(i[103], 0.0)
set_upper_bound(i[103], 100.0)
set_binary(b[156])
set_integer(i[30])
set_lower_bound(i[30], 0.0)
set_upper_bound(i[30], 100.0)
set_integer(i[39])
set_lower_bound(i[39], 0.0)
set_upper_bound(i[39], 100.0)
set_binary(b[162])
set_integer(i[42])
set_lower_bound(i[42], 0.0)
set_upper_bound(i[42], 100.0)
set_integer(i[98])
set_lower_bound(i[98], 0.0)
set_upper_bound(i[98], 100.0)
set_upper_bound(i[2], 100.0)
set_upper_bound(i[3], 100.0)
set_upper_bound(i[4], 100.0)
set_upper_bound(i[5], 100.0)
set_upper_bound(i[6], 100.0)
set_upper_bound(i[7], 100.0)
set_upper_bound(i[8], 100.0)
set_upper_bound(i[9], 100.0)
set_upper_bound(i[10], 100.0)
set_upper_bound(i[11], 100.0)
set_upper_bound(i[12], 100.0)
set_upper_bound(i[13], 100.0)
set_upper_bound(i[14], 100.0)
set_upper_bound(i[15], 100.0)
set_upper_bound(i[16], 100.0)
set_upper_bound(i[17], 100.0)
set_upper_bound(i[18], 100.0)
set_upper_bound(i[19], 100.0)
set_upper_bound(i[20], 100.0)
set_upper_bound(i[21], 100.0)
set_upper_bound(i[22], 100.0)
set_upper_bound(i[23], 100.0)
set_upper_bound(i[24], 100.0)
set_upper_bound(i[25], 100.0)
set_upper_bound(i[26], 100.0)
set_upper_bound(i[27], 100.0)
set_upper_bound(i[28], 100.0)
set_upper_bound(i[29], 100.0)
set_upper_bound(i[30], 100.0)
set_upper_bound(i[31], 100.0)
set_upper_bound(i[32], 100.0)
set_upper_bound(i[33], 100.0)
set_upper_bound(i[34], 100.0)
set_upper_bound(i[35], 100.0)
set_upper_bound(i[36], 100.0)
set_upper_bound(i[37], 100.0)
set_upper_bound(i[38], 100.0)
set_upper_bound(i[39], 100.0)
set_upper_bound(i[40], 100.0)
set_upper_bound(i[41], 100.0)
set_upper_bound(i[42], 100.0)
set_upper_bound(i[43], 100.0)
set_upper_bound(i[44], 100.0)
set_upper_bound(i[45], 100.0)
set_upper_bound(i[46], 100.0)
set_upper_bound(i[47], 100.0)
set_upper_bound(i[48], 100.0)
set_upper_bound(i[49], 100.0)
set_upper_bound(i[50], 100.0)
set_upper_bound(i[51], 100.0)
set_upper_bound(i[52], 100.0)
set_upper_bound(i[53], 100.0)
set_upper_bound(i[54], 100.0)
set_upper_bound(i[55], 100.0)
set_upper_bound(i[56], 100.0)
set_upper_bound(i[57], 100.0)
set_upper_bound(i[58], 100.0)
set_upper_bound(i[59], 100.0)
set_upper_bound(i[60], 100.0)
set_upper_bound(i[61], 100.0)
set_upper_bound(i[62], 100.0)
set_upper_bound(i[63], 100.0)
set_upper_bound(i[64], 100.0)
set_upper_bound(i[65], 100.0)
set_upper_bound(i[66], 100.0)
set_upper_bound(i[67], 100.0)
set_upper_bound(i[68], 100.0)
set_upper_bound(i[69], 100.0)
set_upper_bound(i[70], 100.0)
set_upper_bound(i[71], 100.0)
set_upper_bound(i[72], 100.0)
set_upper_bound(i[73], 100.0)
set_upper_bound(i[74], 100.0)
set_upper_bound(i[75], 100.0)
set_upper_bound(i[76], 100.0)
set_upper_bound(i[77], 100.0)
set_upper_bound(i[78], 100.0)
set_upper_bound(i[79], 100.0)
set_upper_bound(i[80], 100.0)
set_upper_bound(i[81], 100.0)
set_upper_bound(i[82], 100.0)
set_upper_bound(i[83], 100.0)
set_upper_bound(i[84], 100.0)
set_upper_bound(i[85], 100.0)
set_upper_bound(i[86], 100.0)
set_upper_bound(i[87], 100.0)
set_upper_bound(i[88], 100.0)
set_upper_bound(i[89], 100.0)
set_upper_bound(i[90], 100.0)
set_upper_bound(i[91], 100.0)
set_upper_bound(i[92], 100.0)
set_upper_bound(i[93], 100.0)
set_upper_bound(i[94], 100.0)
set_upper_bound(i[95], 100.0)
set_upper_bound(i[96], 100.0)
set_upper_bound(i[97], 100.0)
set_upper_bound(i[98], 100.0)
set_upper_bound(i[99], 100.0)
set_upper_bound(i[100], 100.0)
set_upper_bound(i[101], 100.0)
set_upper_bound(i[102], 100.0)
set_upper_bound(i[103], 100.0)
set_upper_bound(i[104], 100.0)
set_upper_bound(i[105], 100.0)
set_upper_bound(i[106], 100.0)
set_upper_bound(i[107], 100.0)
set_upper_bound(i[108], 100.0)
set_upper_bound(i[109], 100.0)
set_upper_bound(i[110], 100.0)
set_upper_bound(i[111], 100.0)
set_upper_bound(i[112], 100.0)
set_upper_bound(i[113], 100.0)
set_upper_bound(i[114], 100.0)
set_upper_bound(i[115], 100.0)
set_upper_bound(i[116], 100.0)
set_upper_bound(i[117], 100.0)
set_upper_bound(i[118], 100.0)
set_upper_bound(i[119], 100.0)
set_upper_bound(i[120], 100.0)
set_upper_bound(i[121], 100.0)
set_upper_bound(i[122], 100.0)
set_upper_bound(i[123], 100.0)
set_upper_bound(i[124], 100.0)
set_upper_bound(i[125], 100.0)
set_upper_bound(i[126], 100.0)
set_upper_bound(i[127], 100.0)
set_upper_bound(i[128], 100.0)
set_upper_bound(i[129], 100.0)
set_upper_bound(i[130], 100.0)
set_upper_bound(i[131], 100.0)
set_upper_bound(i[132], 100.0)
set_upper_bound(i[133], 100.0)
set_upper_bound(i[134], 100.0)


# ----- Constraints ----- #
@constraint(m, e1, x[1]-0.37*i[2]-0.37*i[3]-0.37*i[4]-0.37*i[5]-0.37*i[6]-0.37*i[7]-0.37*i[8]-0.37*i[9]-0.37*i[10]-0.3*i[30]-0.3*i[31]-0.3*i[32]-0.3*i[33]-0.3*i[34]-0.3*i[35]-0.3*i[36]-0.3*i[37]-0.37*i[39]-0.37*i[40]-0.37*i[41]-0.37*i[42]-0.37*i[43]-0.37*i[44]-0.37*i[45]-0.37*i[46]-9.81*i[47]-9.81*i[48]-9.81*i[49]-9.81*i[50]-9.81*i[51]-9.81*i[52]-9.81*i[53]-9.81*i[54]-0.13*i[55]-0.13*i[56]-0.13*i[57]-0.13*i[58]-0.13*i[59]-0.13*i[60]-0.13*i[61]-0.13*i[62]-0.13*i[63]-0.13*i[64]-0.13*i[65]-0.13*i[66]-0.13*i[67]-0.13*i[68]-0.13*i[69]-0.13*i[70]-11.5*i[72]-25.92*i[73]-54.37*i[74]-113.84*i[75]-66.32*i[76]-34.26*i[77]-7.51*i[78]-4.07*i[80]-9.17*i[81]-19.24*i[82]-40.28*i[83]-23.46*i[84]-12.12*i[85]-2.66*i[86]-11.5*i[88]-25.92*i[89]-54.37*i[90]-113.84*i[91]-66.32*i[92]-34.26*i[93]-7.51*i[94]-4.07*i[96]-9.17*i[97]-19.24*i[98]-40.28*i[99]-23.46*i[100]-12.12*i[101]-2.66*i[102]-22.7*i[103]-22.7*i[104]-22.7*i[105]-22.7*i[106]-22.7*i[107]-22.7*i[108]-22.7*i[109]-22.7*i[110]-15.2*i[111]-15.2*i[112]-15.2*i[113]-15.2*i[114]-15.2*i[115]-15.2*i[116]-15.2*i[117]-15.2*i[118]-22.7*i[119]-22.7*i[120]-22.7*i[121]-22.7*i[122]-22.7*i[123]-22.7*i[124]-22.7*i[125]-22.7*i[126]-15.2*i[127]-15.2*i[128]-15.2*i[129]-15.2*i[130]-15.2*i[131]-15.2*i[132]-15.2*i[133]-15.2*i[134] == 0.0)
@constraint(m, e2, i[2]-i[3]+i[47]-i[55]-i[63] == 0.0)
@constraint(m, e3, i[3]-i[4]+i[48]-i[56]-i[64] == 0.0)
@constraint(m, e4, i[4]-i[5]+i[49]-i[57]-i[65] == 0.0)
@constraint(m, e5, i[5]-i[6]+i[50]-i[58]-i[66] == 0.0)
@constraint(m, e6, i[6]-i[7]+i[51]-i[59]-i[67] == 0.0)
@constraint(m, e7, i[7]-i[8]+i[52]-i[60]-i[68] == 0.0)
@constraint(m, e8, i[8]-i[9]+i[53]-i[61]-i[69] == 0.0)
@constraint(m, e9, i[9]-i[10]+i[54]-i[62]-i[70] == 0.0)
@constraint(m, e10, i[2] == 0.0)
@constraint(m, e11, i[11]-i[12]+i[55] == 852.0)
@constraint(m, e12, i[12]-i[13]+i[56] == 5771.0)
@constraint(m, e13, i[13]-i[14]+i[57] == 4703.0)
@constraint(m, e14, i[14]-i[15]+i[58] == 1068.0)
@constraint(m, e15, i[15]-i[16]+i[59] == 253.0)
@constraint(m, e16, i[16]-i[17]+i[60] == 50.0)
@constraint(m, e17, i[17]-i[18]+i[61] == 12.0)
@constraint(m, e18, i[18]-i[19]+i[62] == 2.0)
@constraint(m, e19, i[20]-i[21]+i[63] == 5234.0)
@constraint(m, e20, i[21]-i[22]+i[64] == 35471.0)
@constraint(m, e21, i[22]-i[23]+i[65] == 28908.0)
@constraint(m, e22, i[23]-i[24]+i[66] == 6563.0)
@constraint(m, e23, i[24]-i[25]+i[67] == 1555.0)
@constraint(m, e24, i[25]-i[26]+i[68] == 312.0)
@constraint(m, e25, i[26]-i[27]+i[69] == 79.0)
@constraint(m, e26, i[27]-i[28]+i[70] == 8.0)
@constraint(m, e27, i[11] == 0.0)
@constraint(m, e28, i[20] == 0.0)
@constraint(m, e29, -i[12]-99999*b[135] <= 0.0)
@constraint(m, e30, -i[13]-99999*b[136] <= 0.0)
@constraint(m, e31, -i[14]-99999*b[137] <= 0.0)
@constraint(m, e32, -i[15]-99999*b[138] <= 0.0)
@constraint(m, e33, -i[16]-99999*b[139] <= 0.0)
@constraint(m, e34, -i[17]-99999*b[140] <= 0.0)
@constraint(m, e35, -i[18]-99999*b[141] <= 0.0)
@constraint(m, e36, -i[19]-99999*b[142] <= 0.0)
@constraint(m, e37, -i[21]-99999*b[143] <= 0.0)
@constraint(m, e38, -i[22]-99999*b[144] <= 0.0)
@constraint(m, e39, -i[23]-99999*b[145] <= 0.0)
@constraint(m, e40, -i[24]-99999*b[146] <= 0.0)
@constraint(m, e41, -i[25]-99999*b[147] <= 0.0)
@constraint(m, e42, -i[26]-99999*b[148] <= 0.0)
@constraint(m, e43, -i[27]-99999*b[149] <= 0.0)
@constraint(m, e44, -i[28]-99999*b[150] <= 0.0)
@NLconstraint(m, e45, b[135]*i[12]+i[71]+i[79] == 0.0)
@NLconstraint(m, e46, b[136]*i[13]+i[72]+i[80] == 0.0)
@NLconstraint(m, e47, b[137]*i[14]+i[73]+i[81] == 0.0)
@NLconstraint(m, e48, b[138]*i[15]+i[74]+i[82] == 0.0)
@NLconstraint(m, e49, b[139]*i[16]+i[75]+i[83] == 0.0)
@NLconstraint(m, e50, b[140]*i[17]+i[76]+i[84] == 0.0)
@NLconstraint(m, e51, b[141]*i[18]+i[77]+i[85] == 0.0)
@NLconstraint(m, e52, b[142]*i[19]+i[78]+i[86] == 0.0)
@NLconstraint(m, e53, b[143]*i[21]+i[87]+i[95] == 0.0)
@NLconstraint(m, e54, b[144]*i[22]+i[88]+i[96] == 0.0)
@NLconstraint(m, e55, b[145]*i[23]+i[89]+i[97] == 0.0)
@NLconstraint(m, e56, b[146]*i[24]+i[90]+i[98] == 0.0)
@NLconstraint(m, e57, b[147]*i[25]+i[91]+i[99] == 0.0)
@NLconstraint(m, e58, b[148]*i[26]+i[92]+i[100] == 0.0)
@NLconstraint(m, e59, b[149]*i[27]+i[93]+i[101] == 0.0)
@NLconstraint(m, e60, b[150]*i[28]+i[94]+i[102] == 0.0)
@constraint(m, e61, i[29]-i[30]+i[55]-i[103]-i[111] == 0.0)
@constraint(m, e62, i[30]-i[31]+i[56]-i[104]-i[112] == 0.0)
@constraint(m, e63, i[31]-i[32]+i[57]-i[105]-i[113] == 0.0)
@constraint(m, e64, i[32]-i[33]+i[58]-i[106]-i[114] == 0.0)
@constraint(m, e65, i[33]-i[34]+i[59]-i[107]-i[115] == 0.0)
@constraint(m, e66, i[34]-i[35]+i[60]-i[108]-i[116] == 0.0)
@constraint(m, e67, i[35]-i[36]+i[61]-i[109]-i[117] == 0.0)
@constraint(m, e68, i[36]-i[37]+i[62]-i[110]-i[118] == 0.0)
@constraint(m, e69, i[38]-i[39]+i[63]-i[119]-i[127] == 0.0)
@constraint(m, e70, i[39]-i[40]+i[64]-i[120]-i[128] == 0.0)
@constraint(m, e71, i[40]-i[41]+i[65]-i[121]-i[129] == 0.0)
@constraint(m, e72, i[41]-i[42]+i[66]-i[122]-i[130] == 0.0)
@constraint(m, e73, i[42]-i[43]+i[67]-i[123]-i[131] == 0.0)
@constraint(m, e74, i[43]-i[44]+i[68]-i[124]-i[132] == 0.0)
@constraint(m, e75, i[44]-i[45]+i[69]-i[125]-i[133] == 0.0)
@constraint(m, e76, i[45]-i[46]+i[70]-i[126]-i[134] == 0.0)
@constraint(m, e77, i[12]-99999*b[151] <= 0.0)
@constraint(m, e78, i[13]-99999*b[152] <= 0.0)
@constraint(m, e79, i[14]-99999*b[153] <= 0.0)
@constraint(m, e80, i[15]-99999*b[154] <= 0.0)
@constraint(m, e81, i[16]-99999*b[155] <= 0.0)
@constraint(m, e82, i[17]-99999*b[156] <= 0.0)
@constraint(m, e83, i[18]-99999*b[157] <= 0.0)
@constraint(m, e84, i[19]-99999*b[158] <= 0.0)
@constraint(m, e85, i[21]-99999*b[159] <= 0.0)
@constraint(m, e86, i[22]-99999*b[160] <= 0.0)
@constraint(m, e87, i[23]-99999*b[161] <= 0.0)
@constraint(m, e88, i[24]-99999*b[162] <= 0.0)
@constraint(m, e89, i[25]-99999*b[163] <= 0.0)
@constraint(m, e90, i[26]-99999*b[164] <= 0.0)
@constraint(m, e91, i[27]-99999*b[165] <= 0.0)
@constraint(m, e92, i[28]-99999*b[166] <= 0.0)
@NLconstraint(m, e93, -b[151]*i[12]+i[30] == 0.0)
@NLconstraint(m, e94, -b[152]*i[13]+i[31] == 0.0)
@NLconstraint(m, e95, -b[153]*i[14]+i[32] == 0.0)
@NLconstraint(m, e96, -b[154]*i[15]+i[33] == 0.0)
@NLconstraint(m, e97, -b[155]*i[16]+i[34] == 0.0)
@NLconstraint(m, e98, -b[156]*i[17]+i[35] == 0.0)
@NLconstraint(m, e99, -b[157]*i[18]+i[36] == 0.0)
@NLconstraint(m, e100, -b[158]*i[19]+i[37] == 0.0)
@NLconstraint(m, e101, -b[159]*i[21]+i[39] == 0.0)
@NLconstraint(m, e102, -b[160]*i[22]+i[40] == 0.0)
@NLconstraint(m, e103, -b[161]*i[23]+i[41] == 0.0)
@NLconstraint(m, e104, -b[162]*i[24]+i[42] == 0.0)
@NLconstraint(m, e105, -b[163]*i[25]+i[43] == 0.0)
@NLconstraint(m, e106, -b[164]*i[26]+i[44] == 0.0)
@NLconstraint(m, e107, -b[165]*i[27]+i[45] == 0.0)
@NLconstraint(m, e108, -b[166]*i[28]+i[46] == 0.0)
@constraint(m, e109, 0.000362976406533575*i[103]+0.000362976406533575*i[119] >= 0.95)
@constraint(m, e110, 5.35647329798061E-5*i[104]+5.35647329798061E-5*i[120] >= 0.95)
@constraint(m, e111, 6.57246138678935E-5*i[105]+6.57246138678935E-5*i[121] >= 0.95)
@constraint(m, e112, 0.000289519397799653*i[106]+0.000289519397799653*i[122] >= 0.95)
@constraint(m, e113, 0.00122100122100122*i[107]+0.00122100122100122*i[123] >= 0.95)
@constraint(m, e114, 0.00609756097560976*i[108]+0.00609756097560976*i[124] >= 0.95)
@constraint(m, e115, 0.024390243902439*i[109]+0.024390243902439*i[125] >= 0.95)
@constraint(m, e116, 0.000300210147102972*i[111]+0.000300210147102972*i[127] >= 0.8)
@constraint(m, e117, 4.43007132414832E-5*i[112]+4.43007132414832E-5*i[128] >= 0.8)
@constraint(m, e118, 5.43596434007393E-5*i[113]+5.43596434007393E-5*i[129] >= 0.8)
@constraint(m, e119, 0.000239406272444338*i[114]+0.000239406272444338*i[130] >= 0.8)
@constraint(m, e120, 0.00101112234580384*i[115]+0.00101112234580384*i[131] >= 0.8)
@constraint(m, e121, 0.00505050505050505*i[116]+0.00505050505050505*i[132] >= 0.8)
@constraint(m, e122, 0.02*i[117]+0.02*i[133] >= 0.8)
@constraint(m, e123, i[2] <= 300000.0)
@constraint(m, e124, i[3] <= 300000.0)
@constraint(m, e125, i[4] <= 300000.0)
@constraint(m, e126, i[5] <= 300000.0)
@constraint(m, e127, i[6] <= 300000.0)
@constraint(m, e128, i[7] <= 300000.0)
@constraint(m, e129, i[8] <= 300000.0)
@constraint(m, e130, i[9] <= 300000.0)
@constraint(m, e131, i[10] <= 300000.0)
@constraint(m, e132, i[30] <= 2500.0)
@constraint(m, e133, i[31] <= 2500.0)
@constraint(m, e134, i[32] <= 2500.0)
@constraint(m, e135, i[33] <= 2500.0)
@constraint(m, e136, i[34] <= 2500.0)
@constraint(m, e137, i[35] <= 2500.0)
@constraint(m, e138, i[36] <= 2500.0)
@constraint(m, e139, i[37] <= 2500.0)
@constraint(m, e140, i[39] <= 1000.0)
@constraint(m, e141, i[40] <= 1000.0)
@constraint(m, e142, i[41] <= 1000.0)
@constraint(m, e143, i[42] <= 1000.0)
@constraint(m, e144, i[43] <= 1000.0)
@constraint(m, e145, i[44] <= 1000.0)
@constraint(m, e146, i[45] <= 1000.0)
@constraint(m, e147, i[46] <= 1000.0)
@constraint(m, e148, i[103]+i[111] <= 2100.0)
@constraint(m, e149, i[104]+i[112] <= 2100.0)
@constraint(m, e150, i[105]+i[113] <= 2100.0)
@constraint(m, e151, i[106]+i[114] <= 2100.0)
@constraint(m, e152, i[107]+i[115] <= 2100.0)
@constraint(m, e153, i[108]+i[116] <= 2100.0)
@constraint(m, e154, i[109]+i[117] <= 2100.0)
@constraint(m, e155, i[110]+i[118] <= 2100.0)
@constraint(m, e156, i[119]+i[127] <= 840.0)
@constraint(m, e157, i[120]+i[128] <= 840.0)
@constraint(m, e158, i[121]+i[129] <= 840.0)
@constraint(m, e159, i[122]+i[130] <= 840.0)
@constraint(m, e160, i[123]+i[131] <= 840.0)
@constraint(m, e161, i[124]+i[132] <= 840.0)
@constraint(m, e162, i[125]+i[133] <= 840.0)
@constraint(m, e163, i[126]+i[134] <= 840.0)
@constraint(m, e164, i[78] == 0.0)
@constraint(m, e165, i[86] == 0.0)
@constraint(m, e166, i[94] == 0.0)
@constraint(m, e167, i[102] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[1])

m = m 		 # model get returned when including this script.