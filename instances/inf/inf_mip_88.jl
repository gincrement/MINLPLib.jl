using JuMP

m = Model()

# ----- Variables ----- #
b_Idx = Any[29, 30, 31, 32]
@variable(m, b[b_Idx])
x_Idx = Any[33]
@variable(m, x[x_Idx])
i_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
@variable(m, i[i_Idx])
set_integer(i[8])
set_lower_bound(i[8], 0.0)
set_upper_bound(i[8], 100.0)
set_integer(i[23])
set_lower_bound(i[23], 0.0)
set_upper_bound(i[23], 100.0)
set_integer(i[21])
set_lower_bound(i[21], 0.0)
set_upper_bound(i[21], 100.0)
set_integer(i[12])
set_lower_bound(i[12], 0.0)
set_upper_bound(i[12], 100.0)
set_integer(i[27])
set_lower_bound(i[27], 0.0)
set_upper_bound(i[27], 100.0)
set_integer(i[24])
set_lower_bound(i[24], 0.0)
set_upper_bound(i[24], 100.0)
set_integer(i[19])
set_lower_bound(i[19], 0.0)
set_upper_bound(i[19], 100.0)
set_integer(i[5])
set_lower_bound(i[5], 0.0)
set_upper_bound(i[5], 100.0)
set_integer(i[3])
set_lower_bound(i[3], 0.0)
set_upper_bound(i[3], 100.0)
set_binary(b[30])
set_binary(b[31])
set_binary(b[29])
set_integer(i[2])
set_lower_bound(i[2], 0.0)
set_upper_bound(i[2], 100.0)
set_integer(i[13])
set_lower_bound(i[13], 0.0)
set_upper_bound(i[13], 100.0)
set_integer(i[6])
set_lower_bound(i[6], 0.0)
set_upper_bound(i[6], 100.0)
set_integer(i[26])
set_lower_bound(i[26], 0.0)
set_upper_bound(i[26], 100.0)
set_integer(i[28])
set_lower_bound(i[28], 0.0)
set_upper_bound(i[28], 100.0)
set_integer(i[4])
set_lower_bound(i[4], 0.0)
set_upper_bound(i[4], 100.0)
set_binary(b[32])
set_integer(i[9])
set_lower_bound(i[9], 0.0)
set_upper_bound(i[9], 100.0)
set_integer(i[22])
set_lower_bound(i[22], 0.0)
set_upper_bound(i[22], 100.0)
set_integer(i[14])
set_lower_bound(i[14], 0.0)
set_upper_bound(i[14], 100.0)
set_integer(i[16])
set_lower_bound(i[16], 0.0)
set_upper_bound(i[16], 100.0)
set_integer(i[10])
set_lower_bound(i[10], 0.0)
set_upper_bound(i[10], 100.0)
set_integer(i[15])
set_lower_bound(i[15], 0.0)
set_upper_bound(i[15], 100.0)
set_integer(i[17])
set_lower_bound(i[17], 0.0)
set_upper_bound(i[17], 100.0)
set_integer(i[7])
set_lower_bound(i[7], 0.0)
set_upper_bound(i[7], 100.0)
set_integer(i[20])
set_lower_bound(i[20], 0.0)
set_upper_bound(i[20], 100.0)
set_integer(i[11])
set_lower_bound(i[11], 0.0)
set_upper_bound(i[11], 100.0)
set_integer(i[1])
set_lower_bound(i[1], 0.0)
set_upper_bound(i[1], 100.0)
set_integer(i[25])
set_lower_bound(i[25], 0.0)
set_upper_bound(i[25], 100.0)
set_integer(i[18])
set_lower_bound(i[18], 0.0)
set_upper_bound(i[18], 100.0)
set_upper_bound(i[1], 100.0)
set_upper_bound(i[2], 100.0)
set_upper_bound(i[3], 100.0)
set_upper_bound(i[4], 100.0)
set_upper_bound(i[5], 100.0)
set_upper_bound(i[6], 100.0)
set_upper_bound(i[7], 100.0)
set_upper_bound(i[8], 100.0)
set_upper_bound(i[9], 100.0)
set_upper_bound(i[10], 100.0)
set_upper_bound(i[11], 100.0)
set_upper_bound(i[12], 100.0)
set_upper_bound(i[13], 100.0)
set_upper_bound(i[14], 100.0)
set_upper_bound(i[15], 100.0)
set_upper_bound(i[16], 100.0)
set_upper_bound(i[17], 100.0)
set_upper_bound(i[18], 100.0)
set_upper_bound(i[19], 100.0)
set_upper_bound(i[20], 100.0)
set_upper_bound(i[21], 100.0)
set_upper_bound(i[22], 100.0)
set_upper_bound(i[23], 100.0)
set_upper_bound(i[24], 100.0)
set_upper_bound(i[25], 100.0)
set_upper_bound(i[26], 100.0)
set_upper_bound(i[27], 100.0)
set_upper_bound(i[28], 100.0)


# ----- Constraints ----- #
@constraint(m, e1, -576*i[1]-584.4*i[2]-369.4*i[3]-548.6*i[4]-629.5*i[5]-587.6*i[6]-572.6*i[7]-579*i[8]-478*i[9]-590.9*i[10]-638.6*i[11]-631.4*i[12]-404.1*i[13]-469.1*i[14]-436.5*i[15]-393.5*i[16]-532.8*i[17]-618.3*i[18]-595.2*i[19]-471.3*i[20]-401.6*i[21]-544.5*i[22]-619.6*i[23]-556.1*i[24]-492.1*i[25]-546.3*i[26]-503.3*i[27]-516*i[28]-10000*b[29]-35000*b[30]-23000*b[31]-45000*b[32]+x[33] == 0.0)
@constraint(m, e2, i[1]+i[8]+i[15]+i[22] >= 320.0)
@constraint(m, e3, i[2]+i[9]+i[16]+i[23] >= 550.0)
@constraint(m, e4, i[3]+i[10]+i[17]+i[24] >= 829.0)
@constraint(m, e5, i[4]+i[11]+i[18]+i[25] >= 253.0)
@constraint(m, e6, i[5]+i[12]+i[19]+i[26] >= 938.0)
@constraint(m, e7, i[6]+i[13]+i[20]+i[27] >= 284.0)
@constraint(m, e8, i[7]+i[14]+i[21]+i[28] >= 192.0)
@constraint(m, e9, i[1]+i[2]+i[3]+i[4]+i[5]+i[6]+i[7]-45*b[29] <= 0.0)
@constraint(m, e10, i[8]+i[9]+i[10]+i[11]+i[12]+i[13]+i[14]-234*b[30] <= 0.0)
@constraint(m, e11, i[15]+i[16]+i[17]+i[18]+i[19]+i[20]+i[21]-12*b[31] <= 0.0)
@constraint(m, e12, i[22]+i[23]+i[24]+i[25]+i[26]+i[27]+i[28]-98*b[32] <= 0.0)


# ----- Objective ----- #
@objective(m, Min, x[33])

m = m 		 # model get returned when including this script.