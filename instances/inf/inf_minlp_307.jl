using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250]
@variable(m, x[x_Idx])
b_Idx = Any[45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237]
@variable(m, b[b_Idx])
i_Idx = Any[41, 42, 43, 44]
@variable(m, i[i_Idx])
set_binary(b[216])
set_binary(b[230])
set_binary(b[228])
set_binary(b[176])
set_binary(b[133])
set_binary(b[45])
set_binary(b[169])
set_binary(b[196])
set_binary(b[180])
set_integer(i[41])
set_lower_bound(i[41], 0.0)
set_upper_bound(i[41], 100.0)
set_binary(b[178])
set_binary(b[232])
set_binary(b[208])
set_binary(b[64])
set_binary(b[112])
set_binary(b[130])
set_binary(b[87])
set_binary(b[132])
set_lower_bound(x[3], 0.0)
set_binary(b[211])
set_binary(b[119])
set_binary(b[79])
set_binary(b[213])
set_binary(b[60])
set_binary(b[159])
set_binary(b[227])
set_binary(b[197])
set_binary(b[235])
set_binary(b[193])
set_binary(b[88])
set_binary(b[50])
set_lower_bound(x[6], 0.0)
set_binary(b[192])
set_binary(b[209])
set_binary(b[97])
set_binary(b[200])
set_lower_bound(x[23], 0.0)
set_lower_bound(x[34], 0.0)
set_binary(b[188])
set_binary(b[62])
set_binary(b[113])
set_binary(b[218])
set_binary(b[220])
set_binary(b[236])
set_binary(b[162])
set_binary(b[161])
set_binary(b[224])
set_binary(b[199])
set_lower_bound(x[38], 0.0)
set_binary(b[75])
set_binary(b[128])
set_binary(b[167])
set_binary(b[177])
set_binary(b[70])
set_binary(b[163])
set_binary(b[48])
set_lower_bound(x[9], 0.0)
set_binary(b[143])
set_binary(b[90])
set_binary(b[206])
set_binary(b[229])
set_binary(b[233])
set_lower_bound(x[27], 0.0)
set_binary(b[84])
set_lower_bound(x[30], 0.0)
set_binary(b[53])
set_binary(b[116])
set_lower_bound(x[5], 0.0)
set_binary(b[61])
set_binary(b[223])
set_binary(b[89])
set_binary(b[145])
set_lower_bound(x[24], 0.0)
set_binary(b[86])
set_lower_bound(x[7], 0.0)
set_lower_bound(x[13], 0.0)
set_binary(b[114])
set_binary(b[153])
set_binary(b[69])
set_binary(b[144])
set_binary(b[68])
set_lower_bound(x[26], 0.0)
set_binary(b[166])
set_binary(b[47])
set_lower_bound(x[12], 0.0)
set_binary(b[214])
set_binary(b[138])
set_binary(b[226])
set_binary(b[151])
set_binary(b[135])
set_binary(b[108])
set_binary(b[154])
set_binary(b[76])
set_binary(b[109])
set_binary(b[174])
set_lower_bound(x[28], 0.0)
set_binary(b[237])
set_binary(b[155])
set_binary(b[94])
set_binary(b[149])
set_binary(b[107])
set_lower_bound(x[19], 0.0)
set_binary(b[181])
set_binary(b[52])
set_binary(b[139])
set_lower_bound(x[39], 0.0)
set_lower_bound(x[15], 0.0)
set_integer(i[42])
set_lower_bound(i[42], 0.0)
set_upper_bound(i[42], 100.0)
set_binary(b[131])
set_binary(b[71])
set_lower_bound(x[16], 0.0)
set_binary(b[78])
set_lower_bound(x[14], 0.0)
set_binary(b[215])
set_binary(b[66])
set_binary(b[80])
set_binary(b[160])
set_binary(b[49])
set_lower_bound(x[22], 0.0)
set_binary(b[137])
set_binary(b[185])
set_binary(b[105])
set_binary(b[164])
set_binary(b[124])
set_lower_bound(x[8], 0.0)
set_binary(b[54])
set_binary(b[111])
set_binary(b[170])
set_lower_bound(x[36], 0.0)
set_binary(b[98])
set_lower_bound(x[4], 0.0)
set_binary(b[219])
set_binary(b[186])
set_binary(b[77])
set_lower_bound(x[25], 0.0)
set_binary(b[172])
set_binary(b[46])
set_binary(b[127])
set_binary(b[56])
set_binary(b[104])
set_lower_bound(x[29], 0.0)
set_binary(b[171])
set_lower_bound(x[37], 0.0)
set_binary(b[221])
set_binary(b[74])
set_binary(b[92])
set_binary(b[72])
set_binary(b[126])
set_lower_bound(x[18], 0.0)
set_binary(b[129])
set_lower_bound(x[1], 0.0)
set_binary(b[190])
set_binary(b[234])
set_binary(b[212])
set_binary(b[125])
set_binary(b[184])
set_binary(b[110])
set_binary(b[231])
set_binary(b[183])
set_binary(b[117])
set_binary(b[195])
set_binary(b[83])
set_binary(b[59])
set_lower_bound(x[33], 0.0)
set_binary(b[204])
set_lower_bound(x[35], 0.0)
set_binary(b[67])
set_binary(b[175])
set_binary(b[222])
set_binary(b[93])
set_binary(b[99])
set_binary(b[198])
set_binary(b[146])
set_binary(b[123])
set_binary(b[187])
set_binary(b[202])
set_binary(b[122])
set_lower_bound(x[20], 0.0)
set_binary(b[121])
set_binary(b[157])
set_binary(b[147])
set_binary(b[201])
set_binary(b[156])
set_binary(b[73])
set_binary(b[217])
set_binary(b[118])
set_binary(b[158])
set_binary(b[120])
set_binary(b[85])
set_binary(b[82])
set_binary(b[168])
set_binary(b[106])
set_binary(b[207])
set_binary(b[81])
set_binary(b[225])
set_lower_bound(x[2], 0.0)
set_binary(b[141])
set_binary(b[136])
set_binary(b[150])
set_binary(b[203])
set_lower_bound(x[32], 0.0)
set_binary(b[95])
set_binary(b[115])
set_binary(b[189])
set_lower_bound(x[11], 0.0)
set_binary(b[173])
set_binary(b[58])
set_binary(b[96])
set_binary(b[57])
set_binary(b[102])
set_lower_bound(x[21], 0.0)
set_lower_bound(x[10], 0.0)
set_binary(b[51])
set_binary(b[100])
set_binary(b[142])
set_integer(i[44])
set_lower_bound(i[44], 0.0)
set_upper_bound(i[44], 100.0)
set_lower_bound(x[40], 0.0)
set_binary(b[65])
set_binary(b[205])
set_binary(b[165])
set_binary(b[210])
set_binary(b[101])
set_lower_bound(x[31], 0.0)
set_integer(i[43])
set_lower_bound(i[43], 0.0)
set_upper_bound(i[43], 100.0)
set_binary(b[182])
set_binary(b[194])
set_binary(b[179])
set_binary(b[191])
set_binary(b[134])
set_lower_bound(x[17], 0.0)
set_binary(b[140])
set_binary(b[91])
set_binary(b[152])
set_binary(b[103])
set_binary(b[55])
set_binary(b[148])
set_binary(b[63])
set_upper_bound(i[41], 100.0)
set_upper_bound(i[42], 100.0)
set_upper_bound(i[43], 100.0)
set_upper_bound(i[44], 100.0)


# ----- Constraints ----- #
@constraint(m, e1, x[2] <= 150000.0)
@constraint(m, e2, x[2] <= 133278.6)
@constraint(m, e3, x[3] <= 21200.0)
@constraint(m, e4, x[2]-x[3] == 63438.0)
@constraint(m, e5, x[3] >= 6852.274)
@constraint(m, e6, i[41] <= 22.0)
@constraint(m, e7, i[42] <= 29.0)
@constraint(m, e8, i[43] <= 35.0)
@constraint(m, e9, i[44] <= 55.0)
@constraint(m, e10, i[41]-b[45]-b[46]-b[47]-b[48]-b[49]-b[50]-b[51]-b[52]-b[53]-b[54]-b[55]-b[56]-b[57]-b[58]-b[59]-b[60]-b[61]-b[62]-b[63]-b[64]-b[65]-b[66]-b[67]-b[68]-b[69]-b[70]-b[71]-b[72]-b[73]-b[74] == 0.0)
@constraint(m, e11, i[41] <= 25.0)
@constraint(m, e12, i[42]-b[75]-b[76]-b[77]-b[78]-b[79]-b[80]-b[81]-b[82]-b[83]-b[84]-b[85]-b[86]-b[87]-b[88]-b[89]-b[90]-b[91]-b[92]-b[93]-b[94]-b[95]-b[96]-b[97]-b[98]-b[99]-b[100]-b[101]-b[102]-b[103]-b[104] == 0.0)
@constraint(m, e13, i[42] <= 29.0)
@constraint(m, e14, i[43]-b[105]-b[106]-b[107]-b[108]-b[109]-b[110]-b[111]-b[112]-b[113]-b[114]-b[115]-b[116]-b[117]-b[118]-b[119]-b[120]-b[121]-b[122]-b[123]-b[124]-b[125]-b[126]-b[127]-b[128]-b[129]-b[130]-b[131]-b[132]-b[133]-b[134]-b[135]-b[136]-b[137]-b[138]-b[139] == 0.0)
@constraint(m, e15, i[43] <= 35.0)
@constraint(m, e16, i[44]-b[140]-b[141]-b[142]-b[143]-b[144]-b[145]-b[146]-b[147]-b[148]-b[149]-b[150]-b[151]-b[152]-b[153]-b[154]-b[155]-b[156]-b[157]-b[158]-b[159]-b[160]-b[161]-b[162]-b[163]-b[164]-b[165]-b[166]-b[167]-b[168]-b[169]-b[170]-b[171]-b[172]-b[173]-b[174]-b[175]-b[176]-b[177]-b[178]-b[179]-b[180]-b[181]-b[182]-b[183]-b[184]-b[185]-b[186]-b[187]-b[188]-b[189]-b[190]-b[191]-b[192]-b[193]-b[194]-b[195]-b[196]-b[197]-b[198]-b[199]-b[200]-b[201]-b[202]-b[203]-b[204] == 0.0)
@constraint(m, e17, i[44] <= 55.0)
@constraint(m, e18, x[38] <= 3157.0)
@constraint(m, e19, x[39] <= 3139.0)
@constraint(m, e20, x[40] <= 3014.0)
@constraint(m, e21, -x[38]-x[39]-x[40] == -600.0)
@constraint(m, e22, b[47]+b[48]+b[49]+b[52]+b[57]+b[62]+b[67]+b[72]+b[77]+b[170]+b[171]+b[175]+b[176]+b[180]+b[181]+b[185]+b[186]+b[200]+b[201] == 0.0)
@constraint(m, e23, b[45]+b[46]+b[47]+b[48]+b[49]+b[50]+b[51]+b[52]+b[53]+b[54]+b[55]+b[56]+b[57]+b[58]+b[59]+b[60]+b[61]+b[62]+b[63]+b[64]+b[65]+b[66]+b[67]+b[68]+b[69]+b[70]+b[71]+b[72]+b[73]+b[74]+b[75]+b[76]+b[77]+b[78]+b[79]+b[80]+b[81]+b[82]+b[83]+b[84]+b[85]+b[86]+b[87]+b[88]+b[89]+b[90]+b[91]+b[92]+b[93]+b[94]+b[95]+b[96]+b[97]+b[98]+b[99]+b[100]+b[101]+b[102]+b[103]+b[104]+b[105]+b[106]+b[107]+b[108]+b[109]+b[110]+b[111]+b[112]+b[113]+b[114]+b[115]+b[116]+b[117]+b[118]+b[119]+b[120]+b[121]+b[122]+b[123]+b[124]+b[125]+b[126]+b[127]+b[128]+b[129]+b[130]+b[131]+b[132]+b[133]+b[134]+b[135]+b[136]+b[137]+b[138]+b[139]+b[140]+b[141]+b[142]+b[143]+b[144]+b[145]+b[146]+b[147]+b[148]+b[149]+b[150]+b[151]+b[152]+b[153]+b[154]+b[155]+b[156]+b[157]+b[158]+b[159]+b[160]+b[161]+b[162]+b[163]+b[164]+b[165]+b[166]+b[167]+b[168]+b[169]+b[170]+b[171]+b[172]+b[173]+b[174]+b[175]+b[176]+b[177]+b[178]+b[179]+b[180]+b[181]+b[182]+b[183]+b[184]+b[185]+b[186]+b[187]+b[188]+b[189]+b[190]+b[191]+b[192]+b[193]+b[194]+b[195]+b[196]+b[197]+b[198]+b[199]+b[200]+b[201]+b[202]+b[203]+b[204] == 100.0)
@constraint(m, e24, b[45]+b[46]+b[47]+b[48]+b[49]-5*b[205] <= 0.0)
@constraint(m, e25, b[50]+b[51]+b[52]+b[53]+b[54]-5*b[206] <= 0.0)
@constraint(m, e26, b[55]+b[56]+b[57]+b[58]+b[59]-5*b[207] <= 0.0)
@constraint(m, e27, b[60]+b[61]+b[62]+b[63]+b[64]-5*b[208] <= 0.0)
@constraint(m, e28, b[65]+b[66]+b[67]+b[68]+b[69]-5*b[209] <= 0.0)
@constraint(m, e29, b[70]+b[71]+b[72]+b[73]+b[74]-5*b[210] <= 0.0)
@constraint(m, e30, b[75]+b[76]+b[77]+b[78]+b[79]-5*b[211] <= 0.0)
@constraint(m, e31, b[80]+b[81]+b[82]+b[83]+b[84]-5*b[212] <= 0.0)
@constraint(m, e32, b[85]+b[86]+b[87]+b[88]+b[89]-5*b[213] <= 0.0)
@constraint(m, e33, b[90]+b[91]+b[92]+b[93]+b[94]-5*b[214] <= 0.0)
@constraint(m, e34, b[95]+b[96]+b[97]+b[98]+b[99]-5*b[215] <= 0.0)
@constraint(m, e35, b[100]+b[101]+b[102]+b[103]+b[104]-5*b[216] <= 0.0)
@constraint(m, e36, b[105]+b[106]+b[107]+b[108]+b[109]-5*b[217] <= 0.0)
@constraint(m, e37, b[110]+b[111]+b[112]+b[113]+b[114]-5*b[218] <= 0.0)
@constraint(m, e38, b[115]+b[116]+b[117]+b[118]+b[119]-5*b[219] <= 0.0)
@constraint(m, e39, b[120]+b[121]+b[122]+b[123]+b[124]-5*b[220] <= 0.0)
@constraint(m, e40, b[125]+b[126]+b[127]+b[128]+b[129]-5*b[221] <= 0.0)
@constraint(m, e41, b[130]+b[131]+b[132]+b[133]+b[134]-5*b[222] <= 0.0)
@constraint(m, e42, b[135]+b[136]+b[137]+b[138]+b[139]-5*b[223] <= 0.0)
@constraint(m, e43, b[140]+b[141]+b[142]+b[143]+b[144]-5*b[224] <= 0.0)
@constraint(m, e44, b[145]+b[146]+b[147]+b[148]+b[149]-5*b[225] <= 0.0)
@constraint(m, e45, b[150]+b[151]+b[152]+b[153]+b[154]-5*b[226] <= 0.0)
@constraint(m, e46, b[155]+b[156]+b[157]+b[158]+b[159]-5*b[227] <= 0.0)
@constraint(m, e47, b[160]+b[161]+b[162]+b[163]+b[164]-5*b[228] <= 0.0)
@constraint(m, e48, b[165]+b[166]+b[167]+b[168]+b[169]-5*b[229] <= 0.0)
@constraint(m, e49, b[170]+b[171]+b[172]+b[173]+b[174]-5*b[230] <= 0.0)
@constraint(m, e50, b[175]+b[176]+b[177]+b[178]+b[179]-5*b[231] <= 0.0)
@constraint(m, e51, b[180]+b[181]+b[182]+b[183]+b[184]-5*b[232] <= 0.0)
@constraint(m, e52, b[185]+b[186]+b[187]+b[188]+b[189]-5*b[233] <= 0.0)
@constraint(m, e53, b[190]+b[191]+b[192]+b[193]+b[194]-5*b[234] <= 0.0)
@constraint(m, e54, b[195]+b[196]+b[197]+b[198]+b[199]-5*b[235] <= 0.0)
@constraint(m, e55, b[200]+b[201]+b[202]+b[203]+b[204]-5*b[236] <= 0.0)
@constraint(m, e56, 1.62074554294976*i[41]+x[242] == 0.00372771474878444)
@constraint(m, e57, 0.94921689606075*i[42]+x[243] == -0.244518272425249)
@constraint(m, e58, 0.349907274572238*i[43]+x[244] == -0.0445082053255887)
@constraint(m, e59, 0.5871645822324*i[44]+x[245] == -0.0038165697845106)
@NLconstraint(m, e60, -((-2.13117512451205+0.00168259523489029*x[3])*(1-b[237])+(22.8100580110211-0.00103776424071979*x[3])*b[237])+x[249] == 0.0)
@constraint(m, e61, x[3]-9000*b[237] >= 0.0)
@constraint(m, e62, 0.0210592818784879*x[38]+x[246] == 0.137519216594714)
@constraint(m, e63, 0.00997605746209098*x[39]+x[247] == 0.0575)
@constraint(m, e64, -0.00999100809271655*x[40]+x[248] == 0.00932460785293236)
@constraint(m, e65, -x[242]-x[243]-x[244]-x[245]-x[246]-x[247]-x[248]-x[249]+x[250] == 0.0)
@constraint(m, e66, x[1]-0.007969122*x[2]-0.307681209*x[250] == -6.143686166)
@constraint(m, e67, -i[41] <= -10.0)
@constraint(m, e68, x[1] <= 24.0)
@constraint(m, e69, -1319976000*x[4]-1319976000*x[5]+x[239] == 0.0)
@constraint(m, e70, -0.0161290322580645*x[6]-0.032258064516129*x[7]-0.032258064516129*x[8]-0.032258064516129*x[9]-0.032258064516129*x[10]-0.032258064516129*x[11]-0.032258064516129*x[12]-0.032258064516129*x[13]-0.032258064516129*x[14]-0.032258064516129*x[15]-0.032258064516129*x[16]-0.032258064516129*x[17]-0.032258064516129*x[18]-0.032258064516129*x[19]-0.032258064516129*x[20]-0.032258064516129*x[21]-0.032258064516129*x[22]-0.032258064516129*x[23]-0.032258064516129*x[24]-0.032258064516129*x[25]-0.032258064516129*x[26]-0.032258064516129*x[27]-0.032258064516129*x[28]-0.032258064516129*x[29]-0.032258064516129*x[30]-0.032258064516129*x[31]-0.032258064516129*x[32]-0.032258064516129*x[33]-0.032258064516129*x[34]-0.032258064516129*x[35]-0.032258064516129*x[36]-0.0161290322580645*x[37]+x[240] == 0.0)
@constraint(m, e71, -0.00189393939393939*b[205]-0.00378787878787879*b[206]-0.00568181818181818*b[207]-0.00757575757575758*b[208]-0.00946969696969697*b[209]-0.0113636363636364*b[210]-0.0132575757575758*b[211]-0.0151515151515152*b[212]-0.0170454545454545*b[213]-0.0189393939393939*b[214]-0.0208333333333333*b[215]-0.0227272727272727*b[216]-0.0246212121212121*b[217]-0.0265151515151515*b[218]-0.0284090909090909*b[219]-0.0303030303030303*b[220]-0.0321969696969697*b[221]-0.0340909090909091*b[222]-0.0359848484848485*b[223]-0.0378787878787879*b[224]-0.0397727272727273*b[225]-0.0416666666666667*b[226]-0.0435606060606061*b[227]-0.0454545454545455*b[228]-0.0473484848484848*b[229]-0.0492424242424242*b[230]-0.0511363636363636*b[231]-0.053030303030303*b[232]-0.0549242424242424*b[233]-0.0568181818181818*b[234]-0.0587121212121212*b[235]-0.0606060606060606*b[236]+x[241] == 0.0)
@constraint(m, e72, -x[1]+x[4]-x[5] == -12.0)
@constraint(m, e73, x[6]-x[7]-b[205]+b[206] == 0.0)
@constraint(m, e74, x[7]-x[8]-b[206]+b[207] == 0.0)
@constraint(m, e75, x[8]-x[9]-b[207]+b[208] == 0.0)
@constraint(m, e76, x[9]-x[10]-b[208]+b[209] == 0.0)
@constraint(m, e77, x[10]-x[11]-b[209]+b[210] == 0.0)
@constraint(m, e78, x[11]-x[12]-b[210]+b[211] == 0.0)
@constraint(m, e79, x[12]-x[13]-b[211]+b[212] == 0.0)
@constraint(m, e80, x[13]-x[14]-b[212]+b[213] == 0.0)
@constraint(m, e81, x[14]-x[15]-b[213]+b[214] == 0.0)
@constraint(m, e82, x[15]-x[16]-b[214]+b[215] == 0.0)
@constraint(m, e83, x[16]-x[17]-b[215]+b[216] == 0.0)
@constraint(m, e84, x[17]-x[18]-b[216]+b[217] == 0.0)
@constraint(m, e85, x[18]-x[19]-b[217]+b[218] == 0.0)
@constraint(m, e86, x[19]-x[20]-b[218]+b[219] == 0.0)
@constraint(m, e87, x[20]-x[21]-b[219]+b[220] == 0.0)
@constraint(m, e88, x[21]-x[22]-b[220]+b[221] == 0.0)
@constraint(m, e89, x[22]-x[23]-b[221]+b[222] == 0.0)
@constraint(m, e90, x[23]-x[24]-b[222]+b[223] == 0.0)
@constraint(m, e91, x[24]-x[25]-b[223]+b[224] == 0.0)
@constraint(m, e92, x[25]-x[26]-b[224]+b[225] == 0.0)
@constraint(m, e93, x[26]-x[27]-b[225]+b[226] == 0.0)
@constraint(m, e94, x[27]-x[28]-b[226]+b[227] == 0.0)
@constraint(m, e95, x[28]-x[29]-b[227]+b[228] == 0.0)
@constraint(m, e96, x[29]-x[30]-b[228]+b[229] == 0.0)
@constraint(m, e97, x[30]-x[31]-b[229]+b[230] == 0.0)
@constraint(m, e98, x[31]-x[32]-b[230]+b[231] == 0.0)
@constraint(m, e99, x[32]-x[33]-b[231]+b[232] == 0.0)
@constraint(m, e100, x[33]-x[34]-b[232]+b[233] == 0.0)
@constraint(m, e101, x[34]-x[35]-b[233]+b[234] == 0.0)
@constraint(m, e102, x[35]-x[36]-b[234]+b[235] == 0.0)
@constraint(m, e103, x[36]-x[37]-b[235]+b[236] == 0.0)
@constraint(m, e104, x[238]-x[239]-x[240]-x[241] == 0.0)


# ----- Objective ----- #
@objective(m, Min, x[238])

m = m 		 # model get returned when including this script.