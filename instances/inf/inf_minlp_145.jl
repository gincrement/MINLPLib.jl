using JuMP

m = Model()

# ----- Variables ----- #
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
@variable(m, x[x_Idx])
b_Idx = Any[15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[15])
set_binary(b[176])
set_binary(b[133])
set_binary(b[45])
set_binary(b[169])
set_binary(b[196])
set_binary(b[180])
set_binary(b[178])
set_binary(b[64])
set_binary(b[112])
set_binary(b[21])
set_binary(b[36])
set_binary(b[130])
set_binary(b[87])
set_binary(b[132])
set_binary(b[119])
set_binary(b[79])
set_binary(b[16])
set_binary(b[60])
set_binary(b[159])
set_binary(b[19])
set_binary(b[193])
set_binary(b[39])
set_binary(b[37])
set_binary(b[88])
set_binary(b[50])
set_binary(b[192])
set_binary(b[97])
set_binary(b[188])
set_binary(b[62])
set_binary(b[113])
set_binary(b[24])
set_binary(b[162])
set_binary(b[161])
set_binary(b[75])
set_binary(b[128])
set_binary(b[167])
set_binary(b[177])
set_binary(b[70])
set_binary(b[163])
set_binary(b[41])
set_binary(b[48])
set_binary(b[23])
set_binary(b[28])
set_binary(b[143])
set_binary(b[90])
set_binary(b[84])
set_binary(b[53])
set_binary(b[116])
set_binary(b[29])
set_binary(b[61])
set_binary(b[89])
set_binary(b[34])
set_binary(b[145])
set_binary(b[86])
set_binary(b[114])
set_binary(b[153])
set_binary(b[69])
set_binary(b[144])
set_binary(b[68])
set_binary(b[166])
set_binary(b[47])
set_binary(b[138])
set_binary(b[151])
set_binary(b[135])
set_binary(b[108])
set_binary(b[154])
set_binary(b[76])
set_binary(b[109])
set_binary(b[174])
set_binary(b[155])
set_binary(b[94])
set_binary(b[149])
set_binary(b[107])
set_binary(b[181])
set_binary(b[52])
set_binary(b[139])
set_binary(b[131])
set_binary(b[38])
set_binary(b[71])
set_binary(b[78])
set_binary(b[66])
set_binary(b[80])
set_binary(b[160])
set_binary(b[49])
set_binary(b[137])
set_binary(b[185])
set_binary(b[105])
set_binary(b[164])
set_binary(b[124])
set_binary(b[54])
set_binary(b[111])
set_binary(b[22])
set_binary(b[170])
set_binary(b[98])
set_binary(b[186])
set_binary(b[77])
set_binary(b[172])
set_binary(b[46])
set_binary(b[127])
set_binary(b[56])
set_binary(b[104])
set_binary(b[171])
set_binary(b[74])
set_binary(b[32])
set_binary(b[92])
set_binary(b[72])
set_binary(b[126])
set_binary(b[129])
set_binary(b[190])
set_binary(b[125])
set_binary(b[184])
set_binary(b[43])
set_binary(b[110])
set_binary(b[25])
set_binary(b[183])
set_binary(b[117])
set_binary(b[195])
set_binary(b[83])
set_binary(b[59])
set_binary(b[67])
set_binary(b[175])
set_binary(b[93])
set_binary(b[99])
set_binary(b[146])
set_binary(b[123])
set_binary(b[187])
set_binary(b[122])
set_binary(b[121])
set_binary(b[157])
set_binary(b[147])
set_binary(b[156])
set_binary(b[26])
set_binary(b[73])
set_binary(b[118])
set_binary(b[44])
set_binary(b[158])
set_binary(b[120])
set_binary(b[85])
set_binary(b[82])
set_binary(b[42])
set_binary(b[168])
set_binary(b[106])
set_binary(b[81])
set_binary(b[141])
set_binary(b[136])
set_binary(b[150])
set_binary(b[95])
set_binary(b[115])
set_binary(b[189])
set_binary(b[33])
set_binary(b[30])
set_binary(b[173])
set_binary(b[40])
set_binary(b[58])
set_binary(b[96])
set_binary(b[57])
set_binary(b[102])
set_binary(b[51])
set_binary(b[100])
set_binary(b[142])
set_binary(b[20])
set_binary(b[65])
set_binary(b[165])
set_binary(b[101])
set_binary(b[17])
set_binary(b[182])
set_binary(b[194])
set_binary(b[179])
set_binary(b[191])
set_binary(b[134])
set_binary(b[27])
set_binary(b[18])
set_binary(b[140])
set_binary(b[31])
set_binary(b[91])
set_binary(b[152])
set_binary(b[103])
set_binary(b[55])
set_binary(b[148])
set_binary(b[63])


# ----- Constraints ----- #
@constraint(m, e1, x[1] >= 3.0)
@constraint(m, e2, x[2] >= 4.0)
@constraint(m, e3, x[3] >= 9.0)
@constraint(m, e4, x[4] >= 11.0)
@constraint(m, e5, x[5] >= 14.0)
@constraint(m, e6, x[6] >= 18.0)
@constraint(m, e7, x[7] >= 22.0)
@constraint(m, e8, x[8] >= 28.0)
@constraint(m, e9, x[9] >= 32.0)
@constraint(m, e10, x[10] >= 37.0)
@constraint(m, e11, x[11] >= 40.0)
@constraint(m, e12, x[12] >= 48.0)
@constraint(m, e13, x[13] >= 52.0)
@constraint(m, e14, x[1] <= 10.0)
@constraint(m, e15, x[2] <= 7.0)
@constraint(m, e16, x[3] <= 15.0)
@constraint(m, e17, x[4] <= 20.0)
@constraint(m, e18, x[5] <= 16.0)
@constraint(m, e19, x[6] <= 23.0)
@constraint(m, e20, x[7] <= 30.0)
@constraint(m, e21, x[8] <= 40.0)
@constraint(m, e22, x[9] <= 35.0)
@constraint(m, e23, x[10] <= 45.0)
@constraint(m, e24, x[11] <= 50.0)
@constraint(m, e25, x[12] <= 55.0)
@constraint(m, e26, x[13] <= 60.0)
@constraint(m, e27, b[15]+b[16]+b[17]+b[18]+b[19]+b[20]+b[21]+b[22]+b[23]+b[24]+b[25]+b[26]+b[27] <= 1.0)
@constraint(m, e28, b[28]+b[29]+b[30]+b[31]+b[32]+b[33]+b[34]+b[35]+b[36]+b[37]+b[38]+b[39]+b[40] <= 1.0)
@constraint(m, e29, b[41]+b[42]+b[43]+b[44]+b[45]+b[46]+b[47]+b[48]+b[49]+b[50]+b[51]+b[52]+b[53] <= 1.0)
@constraint(m, e30, b[54]+b[55]+b[56]+b[57]+b[58]+b[59]+b[60]+b[61]+b[62]+b[63]+b[64]+b[65]+b[66] <= 1.0)
@constraint(m, e31, b[67]+b[68]+b[69]+b[70]+b[71]+b[72]+b[73]+b[74]+b[75]+b[76]+b[77]+b[78]+b[79] <= 1.0)
@constraint(m, e32, b[80]+b[81]+b[82]+b[83]+b[84]+b[85]+b[86]+b[87]+b[88]+b[89]+b[90]+b[91]+b[92] <= 1.0)
@constraint(m, e33, b[93]+b[94]+b[95]+b[96]+b[97]+b[98]+b[99]+b[100]+b[101]+b[102]+b[103]+b[104]+b[105] <= 1.0)
@constraint(m, e34, b[106]+b[107]+b[108]+b[109]+b[110]+b[111]+b[112]+b[113]+b[114]+b[115]+b[116]+b[117]+b[118] <= 1.0)
@constraint(m, e35, b[119]+b[120]+b[121]+b[122]+b[123]+b[124]+b[125]+b[126]+b[127]+b[128]+b[129]+b[130]+b[131] <= 1.0)
@constraint(m, e36, b[132]+b[133]+b[134]+b[135]+b[136]+b[137]+b[138]+b[139]+b[140]+b[141]+b[142]+b[143]+b[144] <= 1.0)
@constraint(m, e37, b[145]+b[146]+b[147]+b[148]+b[149]+b[150]+b[151]+b[152]+b[153]+b[154]+b[155]+b[156]+b[157] <= 1.0)
@constraint(m, e38, b[158]+b[159]+b[160]+b[161]+b[162]+b[163]+b[164]+b[165]+b[166]+b[167]+b[168]+b[169]+b[170] <= 1.0)
@constraint(m, e39, b[171]+b[172]+b[173]+b[174]+b[175]+b[176]+b[177]+b[178]+b[179]+b[180]+b[181]+b[182]+b[183] <= 1.0)
@constraint(m, e40, b[15]+b[28]+b[41]+b[54]+b[67]+b[80]+b[93]+b[106]+b[119]+b[132]+b[145]+b[158]+b[171] <= 1.0)
@constraint(m, e41, b[16]+b[29]+b[42]+b[55]+b[68]+b[81]+b[94]+b[107]+b[120]+b[133]+b[146]+b[159]+b[172] <= 1.0)
@constraint(m, e42, b[17]+b[30]+b[43]+b[56]+b[69]+b[82]+b[95]+b[108]+b[121]+b[134]+b[147]+b[160]+b[173] <= 1.0)
@constraint(m, e43, b[18]+b[31]+b[44]+b[57]+b[70]+b[83]+b[96]+b[109]+b[122]+b[135]+b[148]+b[161]+b[174] <= 1.0)
@constraint(m, e44, b[19]+b[32]+b[45]+b[58]+b[71]+b[84]+b[97]+b[110]+b[123]+b[136]+b[149]+b[162]+b[175] <= 1.0)
@constraint(m, e45, b[20]+b[33]+b[46]+b[59]+b[72]+b[85]+b[98]+b[111]+b[124]+b[137]+b[150]+b[163]+b[176] <= 1.0)
@constraint(m, e46, b[21]+b[34]+b[47]+b[60]+b[73]+b[86]+b[99]+b[112]+b[125]+b[138]+b[151]+b[164]+b[177] <= 1.0)
@constraint(m, e47, b[22]+b[35]+b[48]+b[61]+b[74]+b[87]+b[100]+b[113]+b[126]+b[139]+b[152]+b[165]+b[178] <= 1.0)
@constraint(m, e48, b[23]+b[36]+b[49]+b[62]+b[75]+b[88]+b[101]+b[114]+b[127]+b[140]+b[153]+b[166]+b[179] <= 1.0)
@constraint(m, e49, b[24]+b[37]+b[50]+b[63]+b[76]+b[89]+b[102]+b[115]+b[128]+b[141]+b[154]+b[167]+b[180] <= 1.0)
@constraint(m, e50, b[25]+b[38]+b[51]+b[64]+b[77]+b[90]+b[103]+b[116]+b[129]+b[142]+b[155]+b[168]+b[181] <= 1.0)
@constraint(m, e51, b[26]+b[39]+b[52]+b[65]+b[78]+b[91]+b[104]+b[117]+b[130]+b[143]+b[156]+b[169]+b[182] <= 1.0)
@constraint(m, e52, b[27]+b[40]+b[53]+b[66]+b[79]+b[92]+b[105]+b[118]+b[131]+b[144]+b[157]+b[170]+b[183] <= 1.0)
@NLconstraint(m, e53, (x[1]*b[28]+x[2]*b[29]+x[3]*b[30]+x[4]*b[31]+x[5]*b[32]+x[6]*b[33]+x[7]*b[34]+x[8]*b[35]+x[9]*b[36]+x[10]*b[37]+x[11]*b[38]+x[12]*b[39]+x[13]*b[40]-(x[1]*b[15]+x[2]*b[16]+x[3]*b[17]+x[4]*b[18]+x[5]*b[19]+x[6]*b[20]+x[7]*b[21]+x[8]*b[22]+x[9]*b[23]+x[10]*b[24]+x[11]*b[25]+x[12]*b[26]+x[13]*b[27]))*b[185] >= 6.0)
@NLconstraint(m, e54, (x[1]*b[41]+x[2]*b[42]+x[3]*b[43]+x[4]*b[44]+x[5]*b[45]+x[6]*b[46]+x[7]*b[47]+x[8]*b[48]+x[9]*b[49]+x[10]*b[50]+x[11]*b[51]+x[12]*b[52]+x[13]*b[53]-(x[1]*b[28]+x[2]*b[29]+x[3]*b[30]+x[4]*b[31]+x[5]*b[32]+x[6]*b[33]+x[7]*b[34]+x[8]*b[35]+x[9]*b[36]+x[10]*b[37]+x[11]*b[38]+x[12]*b[39]+x[13]*b[40]))*b[186] >= 6.0)
@NLconstraint(m, e55, (x[1]*b[54]+x[2]*b[55]+x[3]*b[56]+x[4]*b[57]+x[5]*b[58]+x[6]*b[59]+x[7]*b[60]+x[8]*b[61]+x[9]*b[62]+x[10]*b[63]+x[11]*b[64]+x[12]*b[65]+x[13]*b[66]-(x[1]*b[41]+x[2]*b[42]+x[3]*b[43]+x[4]*b[44]+x[5]*b[45]+x[6]*b[46]+x[7]*b[47]+x[8]*b[48]+x[9]*b[49]+x[10]*b[50]+x[11]*b[51]+x[12]*b[52]+x[13]*b[53]))*b[187] >= 6.0)
@NLconstraint(m, e56, (x[1]*b[67]+x[2]*b[68]+x[3]*b[69]+x[4]*b[70]+x[5]*b[71]+x[6]*b[72]+x[7]*b[73]+x[8]*b[74]+x[9]*b[75]+x[10]*b[76]+x[11]*b[77]+x[12]*b[78]+x[13]*b[79]-(x[1]*b[54]+x[2]*b[55]+x[3]*b[56]+x[4]*b[57]+x[5]*b[58]+x[6]*b[59]+x[7]*b[60]+x[8]*b[61]+x[9]*b[62]+x[10]*b[63]+x[11]*b[64]+x[12]*b[65]+x[13]*b[66]))*b[188] >= 6.0)
@NLconstraint(m, e57, (x[1]*b[80]+x[2]*b[81]+x[3]*b[82]+x[4]*b[83]+x[5]*b[84]+x[6]*b[85]+x[7]*b[86]+x[8]*b[87]+x[9]*b[88]+x[10]*b[89]+x[11]*b[90]+x[12]*b[91]+x[13]*b[92]-(x[1]*b[67]+x[2]*b[68]+x[3]*b[69]+x[4]*b[70]+x[5]*b[71]+x[6]*b[72]+x[7]*b[73]+x[8]*b[74]+x[9]*b[75]+x[10]*b[76]+x[11]*b[77]+x[12]*b[78]+x[13]*b[79]))*b[189] >= 6.0)
@NLconstraint(m, e58, (x[1]*b[93]+x[2]*b[94]+x[3]*b[95]+x[4]*b[96]+x[5]*b[97]+x[6]*b[98]+x[7]*b[99]+x[8]*b[100]+x[9]*b[101]+x[10]*b[102]+x[11]*b[103]+x[12]*b[104]+x[13]*b[105]-(x[1]*b[80]+x[2]*b[81]+x[3]*b[82]+x[4]*b[83]+x[5]*b[84]+x[6]*b[85]+x[7]*b[86]+x[8]*b[87]+x[9]*b[88]+x[10]*b[89]+x[11]*b[90]+x[12]*b[91]+x[13]*b[92]))*b[190] >= 6.0)
@NLconstraint(m, e59, (x[1]*b[106]+x[2]*b[107]+x[3]*b[108]+x[4]*b[109]+x[5]*b[110]+x[6]*b[111]+x[7]*b[112]+x[8]*b[113]+x[9]*b[114]+x[10]*b[115]+x[11]*b[116]+x[12]*b[117]+x[13]*b[118]-(x[1]*b[93]+x[2]*b[94]+x[3]*b[95]+x[4]*b[96]+x[5]*b[97]+x[6]*b[98]+x[7]*b[99]+x[8]*b[100]+x[9]*b[101]+x[10]*b[102]+x[11]*b[103]+x[12]*b[104]+x[13]*b[105]))*b[191] >= 6.0)
@NLconstraint(m, e60, (x[1]*b[119]+x[2]*b[120]+x[3]*b[121]+x[4]*b[122]+x[5]*b[123]+x[6]*b[124]+x[7]*b[125]+x[8]*b[126]+x[9]*b[127]+x[10]*b[128]+x[11]*b[129]+x[12]*b[130]+x[13]*b[131]-(x[1]*b[106]+x[2]*b[107]+x[3]*b[108]+x[4]*b[109]+x[5]*b[110]+x[6]*b[111]+x[7]*b[112]+x[8]*b[113]+x[9]*b[114]+x[10]*b[115]+x[11]*b[116]+x[12]*b[117]+x[13]*b[118]))*b[192] >= 6.0)
@NLconstraint(m, e61, (x[1]*b[132]+x[2]*b[133]+x[3]*b[134]+x[4]*b[135]+x[5]*b[136]+x[6]*b[137]+x[7]*b[138]+x[8]*b[139]+x[9]*b[140]+x[10]*b[141]+x[11]*b[142]+x[12]*b[143]+x[13]*b[144]-(x[1]*b[119]+x[2]*b[120]+x[3]*b[121]+x[4]*b[122]+x[5]*b[123]+x[6]*b[124]+x[7]*b[125]+x[8]*b[126]+x[9]*b[127]+x[10]*b[128]+x[11]*b[129]+x[12]*b[130]+x[13]*b[131]))*b[193] >= 6.0)
@NLconstraint(m, e62, (x[1]*b[145]+x[2]*b[146]+x[3]*b[147]+x[4]*b[148]+x[5]*b[149]+x[6]*b[150]+x[7]*b[151]+x[8]*b[152]+x[9]*b[153]+x[10]*b[154]+x[11]*b[155]+x[12]*b[156]+x[13]*b[157]-(x[1]*b[132]+x[2]*b[133]+x[3]*b[134]+x[4]*b[135]+x[5]*b[136]+x[6]*b[137]+x[7]*b[138]+x[8]*b[139]+x[9]*b[140]+x[10]*b[141]+x[11]*b[142]+x[12]*b[143]+x[13]*b[144]))*b[194] >= 6.0)
@NLconstraint(m, e63, (x[1]*b[158]+x[2]*b[159]+x[3]*b[160]+x[4]*b[161]+x[5]*b[162]+x[6]*b[163]+x[7]*b[164]+x[8]*b[165]+x[9]*b[166]+x[10]*b[167]+x[11]*b[168]+x[12]*b[169]+x[13]*b[170]-(x[1]*b[145]+x[2]*b[146]+x[3]*b[147]+x[4]*b[148]+x[5]*b[149]+x[6]*b[150]+x[7]*b[151]+x[8]*b[152]+x[9]*b[153]+x[10]*b[154]+x[11]*b[155]+x[12]*b[156]+x[13]*b[157]))*b[195] >= 6.0)
@NLconstraint(m, e64, (x[1]*b[171]+x[2]*b[172]+x[3]*b[173]+x[4]*b[174]+x[5]*b[175]+x[6]*b[176]+x[7]*b[177]+x[8]*b[178]+x[9]*b[179]+x[10]*b[180]+x[11]*b[181]+x[12]*b[182]+x[13]*b[183]-(x[1]*b[158]+x[2]*b[159]+x[3]*b[160]+x[4]*b[161]+x[5]*b[162]+x[6]*b[163]+x[7]*b[164]+x[8]*b[165]+x[9]*b[166]+x[10]*b[167]+x[11]*b[168]+x[12]*b[169]+x[13]*b[170]))*b[196] >= 6.0)
@constraint(m, e65, x[14]-b[184]-b[185]-b[186]-b[187]-b[188]-b[189]-b[190]-b[191]-b[192]-b[193]-b[194]-b[195]-b[196] == 0.0)


# ----- Objective ----- #
@objective(m, Max, x[14])

m = m 		 # model get returned when including this script.