using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]
@variable(m, x[x_Idx])
set_lower_bound(x[2], 0.0)
set_lower_bound(x[82], 0.0)
set_lower_bound(x[1], 10.0)


# ----- Constraints ----- #
@constraint(m, e1, -x[1]-0.2*x[2]+x[3] == 0.0)
@NLconstraint(m, e2, 0.01*x[2]*x[2]-x[2]+0.004*x[1]+x[4]-0.2*x[83] == 0.0)
@constraint(m, e3, -x[3]-0.2*x[4]+x[5] == 0.0)
@NLconstraint(m, e4, 0.01*x[4]*x[4]-x[4]+0.004*x[3]+x[6]-0.2*x[84] == 0.0)
@constraint(m, e5, -x[5]-0.2*x[6]+x[7] == 0.0)
@NLconstraint(m, e6, 0.01*x[6]*x[6]-x[6]+0.004*x[5]+x[8]-0.2*x[85] == 0.0)
@constraint(m, e7, -x[7]-0.2*x[8]+x[9] == 0.0)
@NLconstraint(m, e8, 0.01*x[8]*x[8]-x[8]+0.004*x[7]+x[10]-0.2*x[86] == 0.0)
@constraint(m, e9, -x[9]-0.2*x[10]+x[11] == 0.0)
@NLconstraint(m, e10, 0.01*x[10]*x[10]-x[10]+0.004*x[9]+x[12]-0.2*x[87] == 0.0)
@constraint(m, e11, -x[11]-0.2*x[12]+x[13] == 0.0)
@NLconstraint(m, e12, 0.01*x[12]*x[12]-x[12]+0.004*x[11]+x[14]-0.2*x[88] == 0.0)
@constraint(m, e13, -x[13]-0.2*x[14]+x[15] == 0.0)
@NLconstraint(m, e14, 0.01*x[14]*x[14]-x[14]+0.004*x[13]+x[16]-0.2*x[89] == 0.0)
@constraint(m, e15, -x[15]-0.2*x[16]+x[17] == 0.0)
@NLconstraint(m, e16, 0.01*x[16]*x[16]-x[16]+0.004*x[15]+x[18]-0.2*x[90] == 0.0)
@constraint(m, e17, -x[17]-0.2*x[18]+x[19] == 0.0)
@NLconstraint(m, e18, 0.01*x[18]*x[18]-x[18]+0.004*x[17]+x[20]-0.2*x[91] == 0.0)
@constraint(m, e19, -x[19]-0.2*x[20]+x[21] == 0.0)
@NLconstraint(m, e20, 0.01*x[20]*x[20]-x[20]+0.004*x[19]+x[22]-0.2*x[92] == 0.0)
@constraint(m, e21, -x[21]-0.2*x[22]+x[23] == 0.0)
@NLconstraint(m, e22, 0.01*x[22]*x[22]-x[22]+0.004*x[21]+x[24]-0.2*x[93] == 0.0)
@constraint(m, e23, -x[23]-0.2*x[24]+x[25] == 0.0)
@NLconstraint(m, e24, 0.01*x[24]*x[24]-x[24]+0.004*x[23]+x[26]-0.2*x[94] == 0.0)
@constraint(m, e25, -x[25]-0.2*x[26]+x[27] == 0.0)
@NLconstraint(m, e26, 0.01*x[26]*x[26]-x[26]+0.004*x[25]+x[28]-0.2*x[95] == 0.0)
@constraint(m, e27, -x[27]-0.2*x[28]+x[29] == 0.0)
@NLconstraint(m, e28, 0.01*x[28]*x[28]-x[28]+0.004*x[27]+x[30]-0.2*x[96] == 0.0)
@constraint(m, e29, -x[29]-0.2*x[30]+x[31] == 0.0)
@NLconstraint(m, e30, 0.01*x[30]*x[30]-x[30]+0.004*x[29]+x[32]-0.2*x[97] == 0.0)
@constraint(m, e31, -x[31]-0.2*x[32]+x[33] == 0.0)
@NLconstraint(m, e32, 0.01*x[32]*x[32]-x[32]+0.004*x[31]+x[34]-0.2*x[98] == 0.0)
@constraint(m, e33, -x[33]-0.2*x[34]+x[35] == 0.0)
@NLconstraint(m, e34, 0.01*x[34]*x[34]-x[34]+0.004*x[33]+x[36]-0.2*x[99] == 0.0)
@constraint(m, e35, -x[35]-0.2*x[36]+x[37] == 0.0)
@NLconstraint(m, e36, 0.01*x[36]*x[36]-x[36]+0.004*x[35]+x[38]-0.2*x[100] == 0.0)
@constraint(m, e37, -x[37]-0.2*x[38]+x[39] == 0.0)
@NLconstraint(m, e38, 0.01*x[38]*x[38]-x[38]+0.004*x[37]+x[40]-0.2*x[101] == 0.0)
@constraint(m, e39, -x[39]-0.2*x[40]+x[41] == 0.0)
@NLconstraint(m, e40, 0.01*x[40]*x[40]-x[40]+0.004*x[39]+x[42]-0.2*x[102] == 0.0)
@constraint(m, e41, -x[41]-0.2*x[42]+x[43] == 0.0)
@NLconstraint(m, e42, 0.01*x[42]*x[42]-x[42]+0.004*x[41]+x[44]-0.2*x[103] == 0.0)
@constraint(m, e43, -x[43]-0.2*x[44]+x[45] == 0.0)
@NLconstraint(m, e44, 0.01*x[44]*x[44]-x[44]+0.004*x[43]+x[46]-0.2*x[104] == 0.0)
@constraint(m, e45, -x[45]-0.2*x[46]+x[47] == 0.0)
@NLconstraint(m, e46, 0.01*x[46]*x[46]-x[46]+0.004*x[45]+x[48]-0.2*x[105] == 0.0)
@constraint(m, e47, -x[47]-0.2*x[48]+x[49] == 0.0)
@NLconstraint(m, e48, 0.01*x[48]*x[48]-x[48]+0.004*x[47]+x[50]-0.2*x[106] == 0.0)
@constraint(m, e49, -x[49]-0.2*x[50]+x[51] == 0.0)
@NLconstraint(m, e50, 0.01*x[50]*x[50]-x[50]+0.004*x[49]+x[52]-0.2*x[107] == 0.0)
@constraint(m, e51, -x[51]-0.2*x[52]+x[53] == 0.0)
@NLconstraint(m, e52, 0.01*x[52]*x[52]-x[52]+0.004*x[51]+x[54]-0.2*x[108] == 0.0)
@constraint(m, e53, -x[53]-0.2*x[54]+x[55] == 0.0)
@NLconstraint(m, e54, 0.01*x[54]*x[54]-x[54]+0.004*x[53]+x[56]-0.2*x[109] == 0.0)
@constraint(m, e55, -x[55]-0.2*x[56]+x[57] == 0.0)
@NLconstraint(m, e56, 0.01*x[56]*x[56]-x[56]+0.004*x[55]+x[58]-0.2*x[110] == 0.0)
@constraint(m, e57, -x[57]-0.2*x[58]+x[59] == 0.0)
@NLconstraint(m, e58, 0.01*x[58]*x[58]-x[58]+0.004*x[57]+x[60]-0.2*x[111] == 0.0)
@constraint(m, e59, -x[59]-0.2*x[60]+x[61] == 0.0)
@NLconstraint(m, e60, 0.01*x[60]*x[60]-x[60]+0.004*x[59]+x[62]-0.2*x[112] == 0.0)
@constraint(m, e61, -x[61]-0.2*x[62]+x[63] == 0.0)
@NLconstraint(m, e62, 0.01*x[62]*x[62]-x[62]+0.004*x[61]+x[64]-0.2*x[113] == 0.0)
@constraint(m, e63, -x[63]-0.2*x[64]+x[65] == 0.0)
@NLconstraint(m, e64, 0.01*x[64]*x[64]-x[64]+0.004*x[63]+x[66]-0.2*x[114] == 0.0)
@constraint(m, e65, -x[65]-0.2*x[66]+x[67] == 0.0)
@NLconstraint(m, e66, 0.01*x[66]*x[66]-x[66]+0.004*x[65]+x[68]-0.2*x[115] == 0.0)
@constraint(m, e67, -x[67]-0.2*x[68]+x[69] == 0.0)
@NLconstraint(m, e68, 0.01*x[68]*x[68]-x[68]+0.004*x[67]+x[70]-0.2*x[116] == 0.0)
@constraint(m, e69, -x[69]-0.2*x[70]+x[71] == 0.0)
@NLconstraint(m, e70, 0.01*x[70]*x[70]-x[70]+0.004*x[69]+x[72]-0.2*x[117] == 0.0)
@constraint(m, e71, -x[71]-0.2*x[72]+x[73] == 0.0)
@NLconstraint(m, e72, 0.01*x[72]*x[72]-x[72]+0.004*x[71]+x[74]-0.2*x[118] == 0.0)
@constraint(m, e73, -x[73]-0.2*x[74]+x[75] == 0.0)
@NLconstraint(m, e74, 0.01*x[74]*x[74]-x[74]+0.004*x[73]+x[76]-0.2*x[119] == 0.0)
@constraint(m, e75, -x[75]-0.2*x[76]+x[77] == 0.0)
@NLconstraint(m, e76, 0.01*x[76]*x[76]-x[76]+0.004*x[75]+x[78]-0.2*x[120] == 0.0)
@constraint(m, e77, -x[77]-0.2*x[78]+x[79] == 0.0)
@NLconstraint(m, e78, 0.01*x[78]*x[78]-x[78]+0.004*x[77]+x[80]-0.2*x[121] == 0.0)
@constraint(m, e79, -x[79]-0.2*x[80]+x[81] == 0.0)
@NLconstraint(m, e80, 0.01*x[80]*x[80]-x[80]+0.004*x[79]+x[82]-0.2*x[122] == 0.0)
@NLconstraint(m, e81, -(0.5*x[1]*x[1]+0.5*x[3]*x[3]+0.5*x[5]*x[5]+0.5*x[7]*x[7]+0.5*x[9]*x[9]+0.5*x[11]*x[11]+0.5*x[13]*x[13]+0.5*x[15]*x[15]+0.5*x[17]*x[17]+0.5*x[19]*x[19]+0.5*x[21]*x[21]+0.5*x[23]*x[23]+0.5*x[25]*x[25]+0.5*x[27]*x[27]+0.5*x[29]*x[29]+0.5*x[31]*x[31]+0.5*x[33]*x[33]+0.5*x[35]*x[35]+0.5*x[37]*x[37]+0.5*x[39]*x[39]+0.5*x[41]*x[41]+0.5*x[43]*x[43]+0.5*x[45]*x[45]+0.5*x[47]*x[47]+0.5*x[49]*x[49]+0.5*x[51]*x[51]+0.5*x[53]*x[53]+0.5*x[55]*x[55]+0.5*x[57]*x[57]+0.5*x[59]*x[59]+0.5*x[61]*x[61]+0.5*x[63]*x[63]+0.5*x[65]*x[65]+0.5*x[67]*x[67]+0.5*x[69]*x[69]+0.5*x[71]*x[71]+0.5*x[73]*x[73]+0.5*x[75]*x[75]+0.5*x[77]*x[77]+0.5*x[79]*x[79]+0.5*x[81]*x[81]+(-200000+1000000*x[84])*(-0.2+x[84])+(-200000+1000000*x[85])*(-0.2+x[85])+(-200000+1000000*x[86])*(-0.2+x[86])+(-200000+1000000*x[87])*(-0.2+x[87])+(-200000+1000000*x[88])*(-0.2+x[88])+(-200000+1000000*x[89])*(-0.2+x[89])+(-200000+1000000*x[90])*(-0.2+x[90])+(-200000+1000000*x[91])*(-0.2+x[91])+(-200000+1000000*x[92])*(-0.2+x[92])+(-200000+1000000*x[93])*(-0.2+x[93])+(-200000+1000000*x[94])*(-0.2+x[94])+(-200000+1000000*x[95])*(-0.2+x[95])+(-200000+1000000*x[96])*(-0.2+x[96])+(-200000+1000000*x[97])*(-0.2+x[97])+(-200000+1000000*x[98])*(-0.2+x[98])+(-200000+1000000*x[99])*(-0.2+x[99])+(-200000+1000000*x[100])*(-0.2+x[100])+(-200000+1000000*x[101])*(-0.2+x[101])+(-200000+1000000*x[102])*(-0.2+x[102])+(-200000+1000000*x[103])*(-0.2+x[103])+(-200000+1000000*x[104])*(-0.2+x[104])+(-200000+1000000*x[105])*(-0.2+x[105])+(-200000+1000000*x[106])*(-0.2+x[106])+(-200000+1000000*x[107])*(-0.2+x[107])+(-200000+1000000*x[108])*(-0.2+x[108])+(-200000+1000000*x[109])*(-0.2+x[109])+(-200000+1000000*x[110])*(-0.2+x[110])+(-200000+1000000*x[111])*(-0.2+x[111])+(-200000+1000000*x[112])*(-0.2+x[112])+(-200000+1000000*x[113])*(-0.2+x[113])+(-200000+1000000*x[114])*(-0.2+x[114])+(-200000+1000000*x[115])*(-0.2+x[115])+(-200000+1000000*x[116])*(-0.2+x[116])+(-200000+1000000*x[117])*(-0.2+x[117])+(-200000+1000000*x[118])*(-0.2+x[118])+(-200000+1000000*x[119])*(-0.2+x[119])+(-200000+1000000*x[120])*(-0.2+x[120])+(-200000+1000000*x[121])*(-0.2+x[121])+(-200000+1000000*x[122])*(-0.2+x[122])) <= 0.0)
@NLconstraint(m, e82, -(0.5*x[1]*x[1]+0.5*x[3]*x[3]+0.5*x[5]*x[5]+0.5*x[7]*x[7]+0.5*x[9]*x[9]+0.5*x[11]*x[11]+0.5*x[13]*x[13]+0.5*x[15]*x[15]+0.5*x[17]*x[17]+0.5*x[19]*x[19]+0.5*x[21]*x[21]+0.5*x[23]*x[23]+0.5*x[25]*x[25]+0.5*x[27]*x[27]+0.5*x[29]*x[29]+0.5*x[31]*x[31]+0.5*x[33]*x[33]+0.5*x[35]*x[35]+0.5*x[37]*x[37]+0.5*x[39]*x[39]+0.5*x[41]*x[41]+0.5*x[43]*x[43]+0.5*x[45]*x[45]+0.5*x[47]*x[47]+0.5*x[49]*x[49]+0.5*x[51]*x[51]+0.5*x[53]*x[53]+0.5*x[55]*x[55]+0.5*x[57]*x[57]+0.5*x[59]*x[59]+0.5*x[61]*x[61]+0.5*x[63]*x[63]+0.5*x[65]*x[65]+0.5*x[67]*x[67]+0.5*x[69]*x[69]+0.5*x[71]*x[71]+0.5*x[73]*x[73]+0.5*x[75]*x[75]+0.5*x[77]*x[77]+0.5*x[79]*x[79]+0.5*x[81]*x[81]+(-200000+1000000*x[84])*(-0.2+x[84])+(-200000+1000000*x[85])*(-0.2+x[85])+(-200000+1000000*x[86])*(-0.2+x[86])+(-200000+1000000*x[87])*(-0.2+x[87])+(-200000+1000000*x[88])*(-0.2+x[88])+(-200000+1000000*x[89])*(-0.2+x[89])+(-200000+1000000*x[90])*(-0.2+x[90])+(-200000+1000000*x[91])*(-0.2+x[91])+(-200000+1000000*x[92])*(-0.2+x[92])+(-200000+1000000*x[93])*(-0.2+x[93])+(-200000+1000000*x[94])*(-0.2+x[94])+(-200000+1000000*x[95])*(-0.2+x[95])+(-200000+1000000*x[96])*(-0.2+x[96])+(-200000+1000000*x[97])*(-0.2+x[97])+(-200000+1000000*x[98])*(-0.2+x[98])+(-200000+1000000*x[99])*(-0.2+x[99])+(-200000+1000000*x[100])*(-0.2+x[100])+(-200000+1000000*x[101])*(-0.2+x[101])+(-200000+1000000*x[102])*(-0.2+x[102])+(-200000+1000000*x[103])*(-0.2+x[103])+(-200000+1000000*x[104])*(-0.2+x[104])+(-200000+1000000*x[105])*(-0.2+x[105])+(-200000+1000000*x[106])*(-0.2+x[106])+(-200000+1000000*x[107])*(-0.2+x[107])+(-200000+1000000*x[108])*(-0.2+x[108])+(-200000+1000000*x[109])*(-0.2+x[109])+(-200000+1000000*x[110])*(-0.2+x[110])+(-200000+1000000*x[111])*(-0.2+x[111])+(-200000+1000000*x[112])*(-0.2+x[112])+(-200000+1000000*x[113])*(-0.2+x[113])+(-200000+1000000*x[114])*(-0.2+x[114])+(-200000+1000000*x[115])*(-0.2+x[115])+(-200000+1000000*x[116])*(-0.2+x[116])+(-200000+1000000*x[117])*(-0.2+x[117])+(-200000+1000000*x[118])*(-0.2+x[118])+(-200000+1000000*x[119])*(-0.2+x[119])+(-200000+1000000*x[120])*(-0.2+x[120])+(-200000+1000000*x[121])*(-0.2+x[121])+(-200000+1000000*x[122])*(-0.2+x[122]))+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.