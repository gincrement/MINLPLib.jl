using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6]
@variable(m, x[x_Idx])
set_lower_bound(x[5], 1.0e-5)
set_lower_bound(x[6], 1.0e-5)


# ----- Constraints ----- #
@NLconstraint(m, e1, -( (4.419446-x[5]/x[6]-x[1])^2+ (3.564931-x[5]/(0.019495419876+x[6])-x[1]-0.019495419876*x[2]-0.000380071396141536*x[3]-7.40965145063677e-6*x[4])^2+ (2.139067-x[5]/(0.068538716401+x[6])-x[1]-0.068538716401*x[2]-0.00469755564589671*x[3]-0.000321964434192031*x[4])^2+ (0.404686-x[5]/(0.190385614224+x[6])-x[1]-0.190385614224*x[2]-0.0362466821034498*x[3]-0.00690084683584735*x[4])^2+ ((-x[5]/(0.319501910025+x[6]))-x[1]-0.319501910025*x[2]-0.102081470509623*x[3]-0.0326152248059853*x[4])^2+ (0.035152-x[5]/(0.263109495364+x[6])-x[1]-0.263109495364*x[2]-0.0692266065506987*x[3]-0.0182141775153165*x[4])^2+ (0.146813-x[5]/(0.373156048225+x[6])-x[1]-0.373156048225*x[2]-0.139245436326899*x[3]-0.0519602767531113*x[4])^2+ (2.718058-x[5]/(0.616850018404+x[6])-x[1]-0.616850018404*x[2]-0.380503945205015*x[3]-0.234713865602508*x[4])^2+ (9.474417-x[5]/(0.921467524761+x[6])-x[1]-0.921467524761*x[2]-0.849102399189164*x[3]-0.782420286049465*x[4])^2+ (26.132221-x[5]/(1.287008567296+x[6])-x[1]-1.287008567296*x[2]-1.6563910522933*x[3]-2.13178947509392*x[4])^2+ (41.451561-x[5]/(1.713473146009+x[6])-x[1]-1.713473146009*x[2]-2.93599022209398*x[3]-5.03074040250303*x[4])^2+ (72.283164-x[5]/(2.2008612609+x[6])-x[1]-2.2008612609*x[2]-4.84379028973034*x[3]-10.6605104045911*x[4])^2+ (117.630959-x[5]/(2.749172911969+x[6])-x[1]-2.749172911969*x[2]-7.55795169990411*x[3]-20.7781160833464*x[4])^2)+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.