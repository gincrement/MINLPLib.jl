using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65]
@variable(m, x[x_Idx])
set_upper_bound(x[36], 0.0)
set_lower_bound(x[54], 0.0)
set_upper_bound(x[32], 0.0)
set_lower_bound(x[27], 0.0)
set_lower_bound(x[62], 0.0)
set_lower_bound(x[30], 0.0)
set_lower_bound(x[26], 0.0)
set_lower_bound(x[58], 0.0)
set_upper_bound(x[34], 0.0)
set_lower_bound(x[11], 0.0)
set_lower_bound(x[46], 0.0)
set_lower_bound(x[29], 0.0)
set_lower_bound(x[22], 0.0)
set_lower_bound(x[56], 0.0)
set_lower_bound(x[59], 0.0)
set_lower_bound(x[63], 0.0)
set_lower_bound(x[50], 0.0)
set_upper_bound(x[31], 0.0)
set_upper_bound(x[33], 0.0)
set_lower_bound(x[47], 0.0)
set_lower_bound(x[49], 0.0)
set_upper_bound(x[35], 0.0)
set_lower_bound(x[10], 0.0)
set_lower_bound(x[1], -220.12)
set_upper_bound(x[1], 220.12)
set_lower_bound(x[2], -220.12)
set_upper_bound(x[2], 220.12)
set_lower_bound(x[3], -220.12)
set_upper_bound(x[3], 220.12)
set_lower_bound(x[4], -220.12)
set_upper_bound(x[4], 220.12)
set_lower_bound(x[5], -220.12)
set_upper_bound(x[5], 220.12)
set_lower_bound(x[6], -220.12)
set_upper_bound(x[6], 220.12)
set_lower_bound(x[7], -220.12)
set_upper_bound(x[7], 220.12)
set_lower_bound(x[8], -220.12)
set_upper_bound(x[8], 220.12)
set_lower_bound(x[9], -220.12)
set_upper_bound(x[9], 220.12)
set_upper_bound(x[10], 220.12)
set_upper_bound(x[11], 220.12)
set_lower_bound(x[12], -220.12)
set_upper_bound(x[12], 220.12)
set_lower_bound(x[13], -220.12)
set_upper_bound(x[13], 220.12)
set_lower_bound(x[14], -220.12)
set_upper_bound(x[14], 220.12)
set_lower_bound(x[15], -220.12)
set_upper_bound(x[15], 220.12)
set_lower_bound(x[16], -220.12)
set_upper_bound(x[16], 220.12)
set_lower_bound(x[17], -220.12)
set_upper_bound(x[17], 220.12)
set_lower_bound(x[18], -220.12)
set_upper_bound(x[18], 220.12)
set_lower_bound(x[19], -220.12)
set_upper_bound(x[19], 220.12)
set_lower_bound(x[20], -220.12)
set_upper_bound(x[20], 220.12)
set_lower_bound(x[21], -220.12)
set_upper_bound(x[21], 220.12)
set_upper_bound(x[22], 220.12)
set_lower_bound(x[23], -220.12)
set_upper_bound(x[23], 220.12)
set_lower_bound(x[24], -220.12)
set_upper_bound(x[24], 220.12)
set_lower_bound(x[25], 8.87)
set_upper_bound(x[25], 11.594)
set_upper_bound(x[26], 8.4)
set_upper_bound(x[27], 4.8)
set_lower_bound(x[28], 20.344)
set_upper_bound(x[28], 22.012)
set_upper_bound(x[29], 1.2)
set_upper_bound(x[30], 0.96)
set_upper_bound(x[31], 11.594)
set_upper_bound(x[32], 8.4)
set_upper_bound(x[33], 4.8)
set_upper_bound(x[34], 22.012)
set_upper_bound(x[35], 1.2)
set_upper_bound(x[36], 0.96)
set_upper_bound(x[46], 5929.0)
set_upper_bound(x[47], 5929.0)
set_lower_bound(x[48], 900.0)
set_upper_bound(x[48], 6400.0)
set_upper_bound(x[49], 6400.0)
set_upper_bound(x[50], 5929.0)
set_lower_bound(x[51], 900.0)
set_upper_bound(x[51], 6400.0)
set_lower_bound(x[52], 900.0)
set_upper_bound(x[52], 6400.0)
set_lower_bound(x[53], 2500.0)
set_upper_bound(x[53], 4382.44)
set_upper_bound(x[54], 4382.44)
set_lower_bound(x[55], 900.0)
set_upper_bound(x[55], 4382.44)
set_upper_bound(x[56], 4382.44)
set_lower_bound(x[57], 900.0)
set_upper_bound(x[57], 4382.44)
set_upper_bound(x[58], 4382.44)
set_upper_bound(x[59], 4382.44)
set_lower_bound(x[60], 900.0)
set_upper_bound(x[60], 4382.44)
set_lower_bound(x[61], 2500.0)
set_upper_bound(x[61], 4382.44)
set_upper_bound(x[62], 4382.44)
set_upper_bound(x[63], 3969.0)
set_lower_bound(x[64], 625.0)
set_upper_bound(x[64], 4382.44)
set_lower_bound(x[65], 625.0)
set_upper_bound(x[65], 4382.44)


# ----- Constraints ----- #
@constraint(m, e1, x[1]+x[2]-x[31] == 0.0)
@constraint(m, e2, -x[1]-x[2]+x[3]+x[4]-x[32] == 0.0)
@constraint(m, e3, -x[3]-x[4]+x[5]+x[37] == 0.0)
@constraint(m, e4, -x[5]-x[8]+x[9] == 0.0)
@constraint(m, e5, x[6]-x[33] == 0.0)
@constraint(m, e6, -x[6]+x[7]+x[38] == 0.0)
@constraint(m, e7, -x[7]+x[8]+x[39] == 0.0)
@constraint(m, e8, x[10]+x[11]-x[34] == 0.0)
@constraint(m, e9, -x[10]-x[11]+x[12]+x[13] == 0.0)
@constraint(m, e10, -x[12]-x[13]+x[14]+x[15]+x[40] == 0.0)
@constraint(m, e11, -x[14]-x[15]+x[16]+x[21] == 0.0)
@constraint(m, e12, -x[16]+x[17]+x[41] == 0.0)
@constraint(m, e13, -x[17]+x[18]-x[35] == 0.0)
@constraint(m, e14, -x[9]-x[18]+x[19]-x[36] == 0.0)
@constraint(m, e15, -x[19]+x[20]+x[42] == 0.0)
@constraint(m, e16, -x[20]+x[43] == 0.0)
@constraint(m, e17, -x[21]+x[22] == 0.0)
@constraint(m, e18, -x[22]+x[23] == 0.0)
@constraint(m, e19, -x[23]+x[24]+x[44] == 0.0)
@constraint(m, e20, -x[24]+x[45] == 0.0)
@constraint(m, e21, -x[37] <= -3.918)
@constraint(m, e22, -x[38] <= -4.034)
@constraint(m, e23, -x[39] <= -5.256)
@constraint(m, e24, -x[40] <= -6.365)
@constraint(m, e25, -x[41] <= -2.12)
@constraint(m, e26, -x[42] <= -6.848)
@constraint(m, e27, -x[43] <= -15.616)
@constraint(m, e28, -x[44] <= -0.222)
@constraint(m, e29, -x[45] <= -1.919)
@constraint(m, e30, -x[25]+x[31] <= 0.0)
@constraint(m, e31, -x[26]+x[32] <= 0.0)
@constraint(m, e32, -x[27]+x[33] <= 0.0)
@constraint(m, e33, -x[28]+x[34] <= 0.0)
@constraint(m, e34, -x[29]+x[35] <= 0.0)
@constraint(m, e35, -x[30]+x[36] <= 0.0)
@NLconstraint(m, e36,  (x[1])^2-9.07027*x[46]+9.07027*x[47] == 0.0)
@NLconstraint(m, e37,  (x[2])^2-9.07027*x[46]+9.07027*x[47] == 0.0)
@NLconstraint(m, e38,  (x[3])^2-6.04685*x[47]+6.04685*x[48] == 0.0)
@NLconstraint(m, e39,  (x[4])^2-6.04685*x[47]+6.04685*x[48] == 0.0)
@NLconstraint(m, e40,  (x[5])^2-1.39543*x[48]+1.39543*x[49] == 0.0)
@NLconstraint(m, e41,  (x[6])^2-0.100256*x[50]+0.100256*x[51] == 0.0)
@NLconstraint(m, e42,  (x[7])^2-0.148655*x[51]+0.148655*x[52] == 0.0)
@NLconstraint(m, e43,  (x[8])^2+0.226895*x[49]-0.226895*x[52] == 0.0)
@NLconstraint(m, e44,  (x[9])^2-0.659656*x[49]+0.659656*x[59] == 0.0)
@NLconstraint(m, e45,  (x[10])^2-7.25622*x[53]+7.25622*x[54] >= 0.0)
@NLconstraint(m, e46,  (x[11])^2-0.10803*x[53]+0.10803*x[54] >= 0.0)
@NLconstraint(m, e47,  (x[12])^2-1.81405*x[54]+1.81405*x[55] == 0.0)
@NLconstraint(m, e48,  (x[13])^2-0.0270084*x[54]+0.0270084*x[55] == 0.0)
@NLconstraint(m, e49,  (x[14])^2-1.45124*x[55]+1.45124*x[56] == 0.0)
@NLconstraint(m, e50,  (x[15])^2-0.0216067*x[55]+0.0216067*x[56] == 0.0)
@NLconstraint(m, e51,  (x[16])^2-0.863836*x[56]+0.863836*x[57] == 0.0)
@NLconstraint(m, e52,  (x[17])^2-0.907027*x[57]+0.907027*x[58] == 0.0)
@NLconstraint(m, e53,  (x[18])^2-7.25622*x[58]+7.25622*x[59] == 0.0)
@NLconstraint(m, e54,  (x[19])^2-3.62811*x[59]+3.62811*x[60] == 0.0)
@NLconstraint(m, e55,  (x[20])^2-1.45124*x[60]+1.45124*x[61] == 0.0)
@NLconstraint(m, e56,  (x[21])^2-0.0514445*x[56]+0.0514445*x[62] == 0.0)
@NLconstraint(m, e57,  (x[22])^2-0.00641977*x[62]+0.00641977*x[63] >= 0.0)
@NLconstraint(m, e58,  (x[23])^2-0.0017032*x[63]+0.0017032*x[64] == 0.0)
@NLconstraint(m, e59,  (x[24])^2-0.027819*x[64]+0.027819*x[65] == 0.0)
@constraint(m, e60, -2.28*x[25]-2.28*x[26]-2.28*x[27]-1.68*x[28]-1.68*x[29]-1.68*x[30]+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.