using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
@variable(m, x[x_Idx])


# ----- Constraints ----- #
@NLconstraint(m, e1, x[7]*x[6]+x[12]*x[11]+x[17]*x[16]+x[22]*x[21]+x[27]*x[26] == 0.0)
@NLconstraint(m, e2, x[8]*x[6]+x[13]*x[11]+x[18]*x[16]+x[23]*x[21]+x[28]*x[26] == 0.0)
@NLconstraint(m, e3, x[8]*x[7]+x[13]*x[12]+x[18]*x[17]+x[23]*x[22]+x[28]*x[27] == 0.0)
@NLconstraint(m, e4, x[9]*x[6]+x[14]*x[11]+x[19]*x[16]+x[24]*x[21]+x[29]*x[26] == 0.0)
@NLconstraint(m, e5, x[9]*x[7]+x[14]*x[12]+x[19]*x[17]+x[24]*x[22]+x[29]*x[27] == 0.0)
@NLconstraint(m, e6, x[9]*x[8]+x[14]*x[13]+x[19]*x[18]+x[24]*x[23]+x[29]*x[28] == 0.0)
@NLconstraint(m, e7, x[10]*x[6]+x[15]*x[11]+x[20]*x[16]+x[25]*x[21]+x[30]*x[26] == 0.0)
@NLconstraint(m, e8, x[10]*x[7]+x[15]*x[12]+x[20]*x[17]+x[25]*x[22]+x[30]*x[27] == 0.0)
@NLconstraint(m, e9, x[10]*x[8]+x[15]*x[13]+x[20]*x[18]+x[25]*x[23]+x[30]*x[28] == 0.0)
@NLconstraint(m, e10, x[10]*x[9]+x[15]*x[14]+x[20]*x[19]+x[25]*x[24]+x[30]*x[29] == 0.0)
@NLconstraint(m, e11, x[6]*x[6]+x[11]*x[11]+x[16]*x[16]+x[21]*x[21]+x[26]*x[26] == 1.0)
@NLconstraint(m, e12, x[7]*x[7]+x[12]*x[12]+x[17]*x[17]+x[22]*x[22]+x[27]*x[27] == 1.0)
@NLconstraint(m, e13, x[8]*x[8]+x[13]*x[13]+x[18]*x[18]+x[23]*x[23]+x[28]*x[28] == 1.0)
@NLconstraint(m, e14, x[9]*x[9]+x[14]*x[14]+x[19]*x[19]+x[24]*x[24]+x[29]*x[29] == 1.0)
@NLconstraint(m, e15, x[10]*x[10]+x[15]*x[15]+x[20]*x[20]+x[25]*x[25]+x[30]*x[30] == 1.0)
@NLconstraint(m, e16, -( ((-2)+x[6]*x[6]*x[1]+x[11]*x[11]*x[2]+x[16]*x[16]*x[3]+x[21]*x[21]*x[4]+x[26]*x[26]*x[5])^2+ ((-1)+x[7]*x[6]*x[1]+x[12]*x[11]*x[2]+x[17]*x[16]*x[3]+x[22]*x[21]*x[4]+x[27]*x[26]*x[5])^2+ ((-1)+x[7]*x[7]*x[1]+x[12]*x[12]*x[2]+x[17]*x[17]*x[3]+x[22]*x[22]*x[4]+x[27]*x[27]*x[5])^2+ (x[8]*x[6]*x[1]+x[13]*x[11]*x[2]+x[18]*x[16]*x[3]+x[23]*x[21]*x[4]+x[28]*x[26]*x[5])^2+ ((-1)+x[8]*x[7]*x[1]+x[13]*x[12]*x[2]+x[18]*x[17]*x[3]+x[23]*x[22]*x[4]+x[28]*x[27]*x[5])^2+ (x[9]*x[6]*x[1]+x[14]*x[11]*x[2]+x[19]*x[16]*x[3]+x[24]*x[21]*x[4]+x[29]*x[26]*x[5])^2+ (x[9]*x[7]*x[1]+x[14]*x[12]*x[2]+x[19]*x[17]*x[3]+x[24]*x[22]*x[4]+x[29]*x[27]*x[5])^2+ (x[10]*x[6]*x[1]+x[15]*x[11]*x[2]+x[20]*x[16]*x[3]+x[25]*x[21]*x[4]+x[30]*x[26]*x[5])^2+ (x[10]*x[7]*x[1]+x[15]*x[12]*x[2]+x[20]*x[17]*x[3]+x[25]*x[22]*x[4]+x[30]*x[27]*x[5])^2)+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.