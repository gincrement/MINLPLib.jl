using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]
@variable(m, x[x_Idx])
set_lower_bound(x[26], 1.0e-6)
set_lower_bound(x[27], 1.0e-6)
set_lower_bound(x[28], 1.0e-6)
set_lower_bound(x[29], 1.0e-6)
set_lower_bound(x[30], 1.0e-6)
set_lower_bound(x[31], 1.0e-6)
set_lower_bound(x[32], 1.0e-6)
set_lower_bound(x[33], 1.0e-6)
set_lower_bound(x[34], 1.0e-6)
set_lower_bound(x[35], 1.0e-6)
set_lower_bound(x[36], 1.0e-6)
set_lower_bound(x[37], 1.0e-6)
set_lower_bound(x[38], 1.0e-6)
set_lower_bound(x[39], 1.0e-6)
set_lower_bound(x[40], 1.0e-6)
set_lower_bound(x[41], 1.0e-7)
set_lower_bound(x[42], 1.0e-7)
set_lower_bound(x[43], 1.0e-7)
set_lower_bound(x[44], 1.0e-7)
set_lower_bound(x[45], 1.0e-7)
set_lower_bound(x[46], 1.0e-7)
set_lower_bound(x[47], 1.0e-7)
set_lower_bound(x[48], 1.0e-7)
set_lower_bound(x[49], 1.0e-7)
set_lower_bound(x[50], 1.0e-7)


# ----- Constraints ----- #
@constraint(m, e1, x[1]+2*x[2]+2*x[3]+2*x[4]+2*x[5]+x[7]+2*x[8]+2*x[9]+2*x[10]+x[13]+2*x[14]+2*x[15]+x[19]+2*x[20]+x[25] == 0.25)
@constraint(m, e2, x[1]+2*x[2]+2*x[3]+2*x[4]+2*x[5]+x[7]+2*x[8]+2*x[9]+2*x[10]+x[13]+2*x[14]+2*x[15]+x[19]+2*x[20]+x[25] == 0.25)
@constraint(m, e3, x[1]+2*x[2]+2*x[3]+2*x[4]+2*x[5]+x[7]+2*x[8]+2*x[9]+2*x[10]+x[13]+2*x[14]+2*x[15]+x[19]+2*x[20]+x[25] == 0.25)
@constraint(m, e4, x[1]+2*x[2]+2*x[3]+2*x[4]+2*x[5]+x[7]+2*x[8]+2*x[9]+2*x[10]+x[13]+2*x[14]+2*x[15]+x[19]+2*x[20]+x[25] == 0.25)
@constraint(m, e5, x[1]+2*x[2]+2*x[3]+2*x[4]+2*x[5]+x[7]+2*x[8]+2*x[9]+2*x[10]+x[13]+2*x[14]+2*x[15]+x[19]+2*x[20]+x[25] == 0.25)
@constraint(m, e6, -x[1]+x[26] == 0.0)
@constraint(m, e7, -x[6]+x[27] == 0.0)
@NLconstraint(m, e8, x[27]*x[41]-x[7]+x[28] == 0.0)
@constraint(m, e9, -x[11]+x[29] == 0.0)
@NLconstraint(m, e10, x[29]*x[41]-x[12]+x[30] == 0.0)
@NLconstraint(m, e11, x[29]*x[42]+x[30]*x[45]-x[13]+x[31] == 0.0)
@constraint(m, e12, -x[16]+x[32] == 0.0)
@NLconstraint(m, e13, x[32]*x[41]-x[17]+x[33] == 0.0)
@NLconstraint(m, e14, x[32]*x[42]+x[33]*x[45]-x[18]+x[34] == 0.0)
@NLconstraint(m, e15, x[32]*x[43]+x[33]*x[46]+x[34]*x[48]-x[19]+x[35] == 0.0)
@constraint(m, e16, -x[21]+x[36] == 0.0)
@NLconstraint(m, e17, x[36]*x[41]-x[22]+x[37] == 0.0)
@NLconstraint(m, e18, x[36]*x[42]+x[37]*x[45]-x[23]+x[38] == 0.0)
@NLconstraint(m, e19, x[36]*x[43]+x[37]*x[46]+x[38]*x[48]-x[24]+x[39] == 0.0)
@NLconstraint(m, e20, x[36]*x[44]+x[37]*x[47]+x[38]*x[49]+x[39]*x[50]-x[25]+x[40] == 0.0)
@NLconstraint(m, e21, x[26]*x[41]-x[2] == 0.0)
@NLconstraint(m, e22, x[26]*x[42]-x[3] == 0.0)
@NLconstraint(m, e23, x[26]*x[43]-x[4] == 0.0)
@NLconstraint(m, e24, x[26]*x[44]-x[5] == 0.0)
@NLconstraint(m, e25, x[28]*x[45]-x[8] == 0.0)
@NLconstraint(m, e26, x[28]*x[46]-x[9] == 0.0)
@NLconstraint(m, e27, x[28]*x[47]-x[10] == 0.0)
@NLconstraint(m, e28, x[31]*x[48]+x[29]*x[43]-x[14] == 0.0)
@NLconstraint(m, e29, x[31]*x[49]+x[29]*x[44]-x[15] == 0.0)
@NLconstraint(m, e30, x[35]*x[50]+x[32]*x[44]+x[33]*x[47]-x[20] == 0.0)
@constraint(m, e31, 2*x[1]-2*x[2]-2*x[3]+3*x[7]-2*x[8]-2*x[10]+3*x[13]-2*x[14]+x[19]+x[25]+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.