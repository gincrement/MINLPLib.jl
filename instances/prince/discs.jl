using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
@variable(m, x[x_Idx])
set_lower_bound(x[1], 0.0)
set_lower_bound(x[13], 0.0)
set_lower_bound(x[14], 0.0)
set_lower_bound(x[1], 0.0)
set_upper_bound(x[1], 0.0)
set_lower_bound(x[13], 0.0)
set_upper_bound(x[13], 0.0)
set_lower_bound(x[14], 0.0)
set_upper_bound(x[14], 0.0)
set_lower_bound(x[25], 1.0)
set_lower_bound(x[26], 1.0)
set_lower_bound(x[27], 1.0)
set_lower_bound(x[28], 1.0)
set_lower_bound(x[29], 1.0)
set_lower_bound(x[30], 1.0)
set_lower_bound(x[31], 1.0)
set_lower_bound(x[32], 1.0)
set_lower_bound(x[33], 1.0)
set_lower_bound(x[34], 1.0)
set_lower_bound(x[35], 1.0)
set_lower_bound(x[36], 1.0)


# ----- Constraints ----- #
@NLconstraint(m, e1,  (x[25]+x[26])^2- (x[2]-x[1])^2- (x[14]-x[13])^2 <= -0.0001)
@NLconstraint(m, e2,  (x[25]+x[27])^2- (x[3]-x[1])^2- (x[15]-x[13])^2 <= -0.0001)
@NLconstraint(m, e3,  (x[26]+x[27])^2- (x[3]-x[2])^2- (x[15]-x[14])^2 <= -0.0001)
@NLconstraint(m, e4,  (x[25]+x[28])^2- (x[4]-x[1])^2- (x[16]-x[13])^2 <= -0.0001)
@NLconstraint(m, e5,  (x[26]+x[28])^2- (x[4]-x[2])^2- (x[16]-x[14])^2 <= -0.0001)
@NLconstraint(m, e6,  (x[27]+x[28])^2- (x[4]-x[3])^2- (x[16]-x[15])^2 <= -0.0001)
@NLconstraint(m, e7,  (x[25]+x[29])^2- (x[5]-x[1])^2- (x[17]-x[13])^2 <= -0.0001)
@NLconstraint(m, e8,  (x[26]+x[29])^2- (x[5]-x[2])^2- (x[17]-x[14])^2 <= -0.0001)
@NLconstraint(m, e9,  (x[27]+x[29])^2- (x[5]-x[3])^2- (x[17]-x[15])^2 <= -0.0001)
@NLconstraint(m, e10,  (x[28]+x[29])^2- (x[5]-x[4])^2- (x[17]-x[16])^2 <= -0.0001)
@NLconstraint(m, e11,  (x[25]+x[30])^2- (x[6]-x[1])^2- (x[18]-x[13])^2 <= -0.0001)
@NLconstraint(m, e12,  (x[26]+x[30])^2- (x[6]-x[2])^2- (x[18]-x[14])^2 <= -0.0001)
@NLconstraint(m, e13,  (x[27]+x[30])^2- (x[6]-x[3])^2- (x[18]-x[15])^2 <= -0.0001)
@NLconstraint(m, e14,  (x[28]+x[30])^2- (x[6]-x[4])^2- (x[18]-x[16])^2 <= -0.0001)
@NLconstraint(m, e15,  (x[29]+x[30])^2- (x[6]-x[5])^2- (x[18]-x[17])^2 <= -0.0001)
@NLconstraint(m, e16,  (x[25]+x[31])^2- (x[7]-x[1])^2- (x[19]-x[13])^2 <= -0.0001)
@NLconstraint(m, e17,  (x[26]+x[31])^2- (x[7]-x[2])^2- (x[19]-x[14])^2 <= -0.0001)
@NLconstraint(m, e18,  (x[27]+x[31])^2- (x[7]-x[3])^2- (x[19]-x[15])^2 <= -0.0001)
@NLconstraint(m, e19,  (x[28]+x[31])^2- (x[7]-x[4])^2- (x[19]-x[16])^2 <= -0.0001)
@NLconstraint(m, e20,  (x[29]+x[31])^2- (x[7]-x[5])^2- (x[19]-x[17])^2 <= -0.0001)
@NLconstraint(m, e21,  (x[30]+x[31])^2- (x[7]-x[6])^2- (x[19]-x[18])^2 <= -0.0001)
@NLconstraint(m, e22,  (x[25]+x[32])^2- (x[8]-x[1])^2- (x[20]-x[13])^2 <= -0.0001)
@NLconstraint(m, e23,  (x[26]+x[32])^2- (x[8]-x[2])^2- (x[20]-x[14])^2 <= -0.0001)
@NLconstraint(m, e24,  (x[27]+x[32])^2- (x[8]-x[3])^2- (x[20]-x[15])^2 <= -0.0001)
@NLconstraint(m, e25,  (x[28]+x[32])^2- (x[8]-x[4])^2- (x[20]-x[16])^2 <= -0.0001)
@NLconstraint(m, e26,  (x[29]+x[32])^2- (x[8]-x[5])^2- (x[20]-x[17])^2 <= -0.0001)
@NLconstraint(m, e27,  (x[30]+x[32])^2- (x[8]-x[6])^2- (x[20]-x[18])^2 <= -0.0001)
@NLconstraint(m, e28,  (x[31]+x[32])^2- (x[8]-x[7])^2- (x[20]-x[19])^2 <= -0.0001)
@NLconstraint(m, e29,  (x[25]+x[33])^2- (x[9]-x[1])^2- (x[21]-x[13])^2 <= -0.0001)
@NLconstraint(m, e30,  (x[26]+x[33])^2- (x[9]-x[2])^2- (x[21]-x[14])^2 <= -0.0001)
@NLconstraint(m, e31,  (x[27]+x[33])^2- (x[9]-x[3])^2- (x[21]-x[15])^2 <= -0.0001)
@NLconstraint(m, e32,  (x[28]+x[33])^2- (x[9]-x[4])^2- (x[21]-x[16])^2 <= -0.0001)
@NLconstraint(m, e33,  (x[29]+x[33])^2- (x[9]-x[5])^2- (x[21]-x[17])^2 <= -0.0001)
@NLconstraint(m, e34,  (x[30]+x[33])^2- (x[9]-x[6])^2- (x[21]-x[18])^2 <= -0.0001)
@NLconstraint(m, e35,  (x[31]+x[33])^2- (x[9]-x[7])^2- (x[21]-x[19])^2 <= -0.0001)
@NLconstraint(m, e36,  (x[32]+x[33])^2- (x[9]-x[8])^2- (x[21]-x[20])^2 <= -0.0001)
@NLconstraint(m, e37,  (x[25]+x[34])^2- (x[10]-x[1])^2- (x[22]-x[13])^2 <= -0.0001)
@NLconstraint(m, e38,  (x[26]+x[34])^2- (x[10]-x[2])^2- (x[22]-x[14])^2 <= -0.0001)
@NLconstraint(m, e39,  (x[27]+x[34])^2- (x[10]-x[3])^2- (x[22]-x[15])^2 <= -0.0001)
@NLconstraint(m, e40,  (x[28]+x[34])^2- (x[10]-x[4])^2- (x[22]-x[16])^2 <= -0.0001)
@NLconstraint(m, e41,  (x[29]+x[34])^2- (x[10]-x[5])^2- (x[22]-x[17])^2 <= -0.0001)
@NLconstraint(m, e42,  (x[30]+x[34])^2- (x[10]-x[6])^2- (x[22]-x[18])^2 <= -0.0001)
@NLconstraint(m, e43,  (x[31]+x[34])^2- (x[10]-x[7])^2- (x[22]-x[19])^2 <= -0.0001)
@NLconstraint(m, e44,  (x[32]+x[34])^2- (x[10]-x[8])^2- (x[22]-x[20])^2 <= -0.0001)
@NLconstraint(m, e45,  (x[33]+x[34])^2- (x[10]-x[9])^2- (x[22]-x[21])^2 <= -0.0001)
@NLconstraint(m, e46,  (x[25]+x[35])^2- (x[11]-x[1])^2- (x[23]-x[13])^2 <= -0.0001)
@NLconstraint(m, e47,  (x[26]+x[35])^2- (x[11]-x[2])^2- (x[23]-x[14])^2 <= -0.0001)
@NLconstraint(m, e48,  (x[27]+x[35])^2- (x[11]-x[3])^2- (x[23]-x[15])^2 <= -0.0001)
@NLconstraint(m, e49,  (x[28]+x[35])^2- (x[11]-x[4])^2- (x[23]-x[16])^2 <= -0.0001)
@NLconstraint(m, e50,  (x[29]+x[35])^2- (x[11]-x[5])^2- (x[23]-x[17])^2 <= -0.0001)
@NLconstraint(m, e51,  (x[30]+x[35])^2- (x[11]-x[6])^2- (x[23]-x[18])^2 <= -0.0001)
@NLconstraint(m, e52,  (x[31]+x[35])^2- (x[11]-x[7])^2- (x[23]-x[19])^2 <= -0.0001)
@NLconstraint(m, e53,  (x[32]+x[35])^2- (x[11]-x[8])^2- (x[23]-x[20])^2 <= -0.0001)
@NLconstraint(m, e54,  (x[33]+x[35])^2- (x[11]-x[9])^2- (x[23]-x[21])^2 <= -0.0001)
@NLconstraint(m, e55,  (x[34]+x[35])^2- (x[11]-x[10])^2- (x[23]-x[22])^2 <= -0.0001)
@NLconstraint(m, e56,  (x[25]+x[36])^2- (x[12]-x[1])^2- (x[24]-x[13])^2 <= -0.0001)
@NLconstraint(m, e57,  (x[26]+x[36])^2- (x[12]-x[2])^2- (x[24]-x[14])^2 <= -0.0001)
@NLconstraint(m, e58,  (x[27]+x[36])^2- (x[12]-x[3])^2- (x[24]-x[15])^2 <= -0.0001)
@NLconstraint(m, e59,  (x[28]+x[36])^2- (x[12]-x[4])^2- (x[24]-x[16])^2 <= -0.0001)
@NLconstraint(m, e60,  (x[29]+x[36])^2- (x[12]-x[5])^2- (x[24]-x[17])^2 <= -0.0001)
@NLconstraint(m, e61,  (x[30]+x[36])^2- (x[12]-x[6])^2- (x[24]-x[18])^2 <= -0.0001)
@NLconstraint(m, e62,  (x[31]+x[36])^2- (x[12]-x[7])^2- (x[24]-x[19])^2 <= -0.0001)
@NLconstraint(m, e63,  (x[32]+x[36])^2- (x[12]-x[8])^2- (x[24]-x[20])^2 <= -0.0001)
@NLconstraint(m, e64,  (x[33]+x[36])^2- (x[12]-x[9])^2- (x[24]-x[21])^2 <= -0.0001)
@NLconstraint(m, e65,  (x[34]+x[36])^2- (x[12]-x[10])^2- (x[24]-x[22])^2 <= -0.0001)
@NLconstraint(m, e66,  (x[35]+x[36])^2- (x[12]-x[11])^2- (x[24]-x[23])^2 <= -0.0001)
@constraint(m, e67, -x[25]-x[26]-x[27]-x[28]-x[29]-x[30]-x[31]-x[32]-x[33]-x[34]-x[35]-x[36]+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.