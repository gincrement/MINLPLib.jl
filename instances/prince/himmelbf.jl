using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4]
@variable(m, x[x_Idx])


# ----- Constraints ----- #
@NLconstraint(m, e1, -10000*( ((-1)+0.135299688810716* (x[1])^2)^2+ ((-1)+( (x[1])^2+0.000428* (x[2])^2+1.83184e-7* (x[3])^2)/(11.18+0.00478504* (x[4])^2))^2+ ((-1)+( (x[1])^2+0.001* (x[2])^2+1e-6* (x[3])^2)/(16.44+0.01644* (x[4])^2))^2+ ((-1)+( (x[1])^2+0.00161* (x[2])^2+2.5921e-6* (x[3])^2)/(16.2+0.026082* (x[4])^2))^2+ ((-1)+( (x[1])^2+0.00209* (x[2])^2+4.3681e-6* (x[3])^2)/(22.2+0.046398* (x[4])^2))^2+ ((-1)+( (x[1])^2+0.00348* (x[2])^2+1.21104e-5* (x[3])^2)/(24.02+0.0835896* (x[4])^2))^2+ ((-1)+( (x[1])^2+0.00525* (x[2])^2+2.75625e-5* (x[3])^2)/(31.32+0.16443* (x[4])^2))^2)+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.