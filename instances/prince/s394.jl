using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
@variable(m, x[x_Idx])


# ----- Constraints ----- #
@NLconstraint(m, e1,  (x[1])^2+ (x[2])^2+ (x[3])^2+ (x[4])^2+ (x[5])^2+ (x[6])^2+ (x[7])^2+ (x[8])^2+ (x[9])^2+ (x[10])^2+ (x[11])^2+ (x[12])^2+ (x[13])^2+ (x[14])^2+ (x[15])^2+ (x[16])^2+ (x[17])^2+ (x[18])^2+ (x[19])^2+ (x[20])^2 == 1.0)
@NLconstraint(m, e2, -( (x[1])^2+ (x[1])^4+2*( (x[2])^2+ (x[2])^4)+3*( (x[3])^2+ (x[3])^4)+4*( (x[4])^2+ (x[4])^4)+5*( (x[5])^2+ (x[5])^4)+6*( (x[6])^2+ (x[6])^4)+7*( (x[7])^2+ (x[7])^4)+8*( (x[8])^2+ (x[8])^4)+9*( (x[9])^2+ (x[9])^4)+10*( (x[10])^2+ (x[10])^4)+11*( (x[11])^2+ (x[11])^4)+12*( (x[12])^2+ (x[12])^4)+13*( (x[13])^2+ (x[13])^4)+14*( (x[14])^2+ (x[14])^4)+15*( (x[15])^2+ (x[15])^4)+16*( (x[16])^2+ (x[16])^4)+17*( (x[17])^2+ (x[17])^4)+18*( (x[18])^2+ (x[18])^4)+19*( (x[19])^2+ (x[19])^4)+20*( (x[20])^2+ (x[20])^4))+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.