using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_binary(b[71])
set_binary(b[75])
set_binary(b[66])
set_binary(b[15])
set_binary(b[70])
set_binary(b[42])
set_binary(b[49])
set_binary(b[45])
set_binary(b[41])
set_binary(b[48])
set_binary(b[23])
set_binary(b[64])
set_binary(b[54])
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_binary(b[22])
set_binary(b[46])
set_binary(b[53])
set_binary(b[8])
set_binary(b[33])
set_binary(b[56])
set_binary(b[30])
set_binary(b[29])
set_binary(b[40])
set_binary(b[61])
set_binary(b[58])
set_binary(b[74])
set_binary(b[32])
set_binary(b[34])
set_binary(b[57])
set_binary(b[72])
set_binary(b[5])
set_binary(b[16])
set_binary(b[60])
set_binary(b[13])
set_binary(b[51])
set_binary(b[69])
set_binary(b[12])
set_binary(b[2])
set_binary(b[68])
set_binary(b[14])
set_binary(b[20])
set_binary(b[43])
set_binary(b[11])
set_binary(b[19])
set_binary(b[47])
set_binary(b[25])
set_binary(b[7])
set_binary(b[9])
set_binary(b[65])
set_binary(b[3])
set_binary(b[59])
set_binary(b[17])
set_binary(b[39])
set_binary(b[4])
set_binary(b[6])
set_binary(b[67])
set_binary(b[1])
set_binary(b[37])
set_binary(b[50])
set_binary(b[27])
set_binary(b[18])
set_binary(b[31])
set_binary(b[62])
set_binary(b[52])
set_binary(b[24])
set_binary(b[55])
set_binary(b[10])
set_binary(b[63])
set_binary(b[26])
set_binary(b[73])


# ----- Constraints ----- #
@constraint(m, e1, b[1]+b[2]+b[3] == 1.0)
@constraint(m, e2, b[4]+b[5]+b[6] == 1.0)
@constraint(m, e3, b[7]+b[8]+b[9] == 1.0)
@constraint(m, e4, b[10]+b[11]+b[12] == 1.0)
@constraint(m, e5, b[13]+b[14]+b[15] == 1.0)
@constraint(m, e6, b[16]+b[17]+b[18] == 1.0)
@constraint(m, e7, b[19]+b[20]+b[21] == 1.0)
@constraint(m, e8, b[22]+b[23]+b[24] == 1.0)
@constraint(m, e9, b[25]+b[26]+b[27] == 1.0)
@constraint(m, e10, b[28]+b[29]+b[30] == 1.0)
@constraint(m, e11, b[31]+b[32]+b[33] == 1.0)
@constraint(m, e12, b[34]+b[35]+b[36] == 1.0)
@constraint(m, e13, b[37]+b[38]+b[39] == 1.0)
@constraint(m, e14, b[40]+b[41]+b[42] == 1.0)
@constraint(m, e15, b[43]+b[44]+b[45] == 1.0)
@constraint(m, e16, b[46]+b[47]+b[48] == 1.0)
@constraint(m, e17, b[49]+b[50]+b[51] == 1.0)
@constraint(m, e18, b[52]+b[53]+b[54] == 1.0)
@constraint(m, e19, b[55]+b[56]+b[57] == 1.0)
@constraint(m, e20, b[58]+b[59]+b[60] == 1.0)
@constraint(m, e21, b[61]+b[62]+b[63] == 1.0)
@constraint(m, e22, b[64]+b[65]+b[66] == 1.0)
@constraint(m, e23, b[67]+b[68]+b[69] == 1.0)
@constraint(m, e24, b[70]+b[71]+b[72] == 1.0)
@constraint(m, e25, b[73]+b[74]+b[75] == 1.0)
@NLconstraint(m, e26, (-11669*b[1]*b[4])-144456*b[1]*b[13]+30835*b[1]*b[16]-33555*b[1]*b[61]-11669*b[2]*b[5]-144456*b[2]*b[14]+30835*b[2]*b[17]-33555*b[2]*b[62]-11669*b[3]*b[6]-144456*b[3]*b[15]+30835*b[3]*b[18]-33555*b[3]*b[63]+52284*b[4]*b[7]+145893*b[4]*b[19]-140641*b[4]*b[64]+52284*b[5]*b[8]+145893*b[5]*b[20]-140641*b[5]*b[65]+52284*b[6]*b[9]+145893*b[6]*b[21]-140641*b[6]*b[66]+127397*b[7]*b[10]-12640*b[7]*b[22]+217400*b[7]*b[67]+127397*b[8]*b[11]-12640*b[8]*b[23]+217400*b[8]*b[68]+127397*b[9]*b[12]-12640*b[9]*b[24]+217400*b[9]*b[69]+50562*b[10]*b[13]-78959*b[10]*b[25]-36333*b[10]*b[70]+50562*b[11]*b[14]-78959*b[11]*b[26]-36333*b[11]*b[71]+50562*b[12]*b[15]-78959*b[12]*b[27]-36333*b[12]*b[72]+98784*b[13]*b[28]-31218*b[13]*b[73]+98784*b[14]*b[29]-31218*b[14]*b[74]+98784*b[15]*b[30]-31218*b[15]*b[75]+6320*b[16]*b[19]+171989*b[16]*b[28]-39163*b[16]*b[31]+6320*b[17]*b[20]+171989*b[17]*b[29]-39163*b[17]*b[32]+6320*b[18]*b[21]+171989*b[18]*b[30]-39163*b[18]*b[33]-183413*b[19]*b[22]+60462*b[19]*b[34]-183413*b[20]*b[23]+60462*b[20]*b[35]-183413*b[21]*b[24]+60462*b[21]*b[36]+45778*b[22]*b[25]+192287*b[22]*b[37]+45778*b[23]*b[26]+192287*b[23]*b[38]+45778*b[24]*b[27]+192287*b[24]*b[39]+125824*b[25]*b[28]+41371*b[25]*b[40]+125824*b[26]*b[29]+41371*b[26]*b[41]+125824*b[27]*b[30]+41371*b[27]*b[42]+17724*b[28]*b[43]+17724*b[29]*b[44]+17724*b[30]*b[45]+12200*b[31]*b[34]+106251*b[31]*b[43]-88012*b[31]*b[46]+12200*b[32]*b[35]+106251*b[32]*b[44]-88012*b[32]*b[47]+12200*b[33]*b[36]+106251*b[33]*b[45]-88012*b[33]*b[48]-17583*b[34]*b[37]+118167*b[34]*b[49]-17583*b[35]*b[38]+118167*b[35]*b[50]-17583*b[36]*b[39]+118167*b[36]*b[51]-5402*b[37]*b[40]-27062*b[37]*b[52]-5402*b[38]*b[41]-27062*b[38]*b[53]-5402*b[39]*b[42]-27062*b[39]*b[54]-117425*b[40]*b[43]-125320*b[40]*b[55]-117425*b[41]*b[44]-125320*b[41]*b[56]-117425*b[42]*b[45]-125320*b[42]*b[57]+29332*b[43]*b[58]+29332*b[44]*b[59]+29332*b[45]*b[60]+69937*b[46]*b[49]+65415*b[46]*b[58]-197304*b[46]*b[61]+69937*b[47]*b[50]+65415*b[47]*b[59]-197304*b[47]*b[62]+69937*b[48]*b[51]+65415*b[48]*b[60]-197304*b[48]*b[63]+66551*b[49]*b[52]+92080*b[49]*b[64]+66551*b[50]*b[53]+92080*b[50]*b[65]+66551*b[51]*b[54]+92080*b[51]*b[66]+47821*b[52]*b[55]+68105*b[52]*b[67]+47821*b[53]*b[56]+68105*b[53]*b[68]+47821*b[54]*b[57]+68105*b[54]*b[69]-116706*b[55]*b[58]-6426*b[55]*b[70]-116706*b[56]*b[59]-6426*b[56]*b[71]-116706*b[57]*b[60]-6426*b[57]*b[72]-154797*b[58]*b[73]-154797*b[59]*b[74]-154797*b[60]*b[75]-14848*b[61]*b[64]-2103*b[61]*b[73]-14848*b[62]*b[65]-2103*b[62]*b[74]-14848*b[63]*b[66]-2103*b[63]*b[75]+17019*b[64]*b[67]+17019*b[65]*b[68]+17019*b[66]*b[69]+83365*b[67]*b[70]+83365*b[68]*b[71]+83365*b[69]*b[72]-20293*b[70]*b[73]-20293*b[71]*b[74]-20293*b[72]*b[75]-objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.