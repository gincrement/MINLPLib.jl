using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]
@variable(m, b[b_Idx])
x_Idx = Any[45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]
@variable(m, x[x_Idx])
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_binary(b[15])
set_lower_bound(x[56], 0.0)
set_binary(b[42])
set_lower_bound(x[59], 0.0)
set_binary(b[41])
set_binary(b[23])
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_binary(b[22])
set_lower_bound(x[54], 0.0)
set_lower_bound(x[58], 0.0)
set_binary(b[8])
set_binary(b[33])
set_binary(b[30])
set_lower_bound(x[53], 0.0)
set_binary(b[29])
set_binary(b[40])
set_lower_bound(x[57], 0.0)
set_lower_bound(x[55], 0.0)
set_binary(b[32])
set_binary(b[34])
set_binary(b[5])
set_binary(b[16])
set_lower_bound(x[52], 0.0)
set_lower_bound(x[49], 0.0)
set_binary(b[13])
set_binary(b[12])
set_binary(b[2])
set_binary(b[14])
set_lower_bound(x[45], 0.0)
set_binary(b[20])
set_binary(b[43])
set_binary(b[11])
set_binary(b[19])
set_binary(b[25])
set_binary(b[7])
set_binary(b[9])
set_binary(b[3])
set_lower_bound(x[50], 0.0)
set_lower_bound(x[47], 0.0)
set_binary(b[17])
set_binary(b[39])
set_binary(b[4])
set_binary(b[6])
set_binary(b[1])
set_binary(b[37])
set_binary(b[27])
set_binary(b[18])
set_lower_bound(x[60], 0.0)
set_lower_bound(x[51], 0.0)
set_lower_bound(x[46], 0.0)
set_binary(b[31])
set_lower_bound(x[48], 0.0)
set_binary(b[24])
set_binary(b[10])
set_binary(b[26])


# ----- Constraints ----- #
@constraint(m, e1, -222.395350591392*b[1]-582.786400468795*b[2]-119.753843399653*b[3]-338.549698035479*b[4]-119.783636606301*b[5]-409.374679229076*b[6]-278.20529021903*b[7]-306.426594992684*b[8]-441.233650379831*b[9]-153.049293317818*b[10]-439.090557840933*b[11]-175.155823424664*b[12]-612.328425893001*b[13]-146.717315955674*b[14]-676.916374379371*b[15]-425.643803755754*b[16]-476.000407399777*b[17]-218.667102585295*b[18]-429.494068158725*b[19]-260.065761415496*b[20]-228.081133173702*b[21]-290.916261365409*b[22]-358.983740312016*b[23]-303.078553779965*b[24]-224.102176788463*b[25]-372.279886491354*b[26]-217.090150838618*b[27]-84.469492807076*b[28]-274.179320847966*b[29]-209.61866336051*b[30]-205.445642503502*b[31]-144.701484010017*b[32]-270.520699*b[33]-100.444790162654*b[34]-64.9166596734302*b[35]-330.80933975*b[36]-110.205022516595*b[37]-67.4648851252699*b[38]-297.23545225*b[39]-96.7703053435877*b[40]-58.5635369942729*b[41]-252.028512*b[42]-91.7540307917193*b[43]-58.7189192724058*b[44]-67691.6374379371*x[45]-67691.6374379371*x[46]-67691.6374379371*x[47]-67691.6374379371*x[48]+objvar == 0.0)
@constraint(m, e2, 0.990828132*b[1]+0.7867768*b[5]+1.1494727*b[9]+1.090185213*b[13]+0.861308711*b[17]+0.646379815*b[21]+1.205697202*b[25]+0.554843463*b[29]-1.730889404*x[49]-3.461778808*x[50]-5.192668212*x[51] == 0.0)
@constraint(m, e3, 0.990828132*b[2]+0.7867768*b[6]+1.1494727*b[10]+1.090185213*b[14]+0.861308711*b[18]+0.646379815*b[22]+1.205697202*b[26]+0.554843463*b[30]-1.528745876*x[52]-3.057491752*x[53]-4.586237628*x[54] == 0.0)
@constraint(m, e4, 0.990828132*b[3]+0.7867768*b[7]+1.1494727*b[11]+1.090185213*b[15]+0.861308711*b[19]+0.646379815*b[23]+1.205697202*b[27]+0.554843463*b[31]-1.282069237*x[55]-2.564138474*x[56]-3.846207711*x[57] == 0.0)
@constraint(m, e5, 0.990828132*b[4]+0.7867768*b[8]+1.1494727*b[12]+1.090185213*b[16]+0.861308711*b[20]+0.646379815*b[24]+1.205697202*b[28]+0.554843463*b[32]-1.520071172*x[58]-3.040142344*x[59]-4.560213516*x[60] == 0.0)
@constraint(m, e6, b[1]+b[2]+b[3]+b[4] == 1.0)
@constraint(m, e7, b[5]+b[6]+b[7]+b[8] == 1.0)
@constraint(m, e8, b[9]+b[10]+b[11]+b[12] == 1.0)
@constraint(m, e9, b[13]+b[14]+b[15]+b[16] == 1.0)
@constraint(m, e10, b[17]+b[18]+b[19]+b[20] == 1.0)
@constraint(m, e11, b[21]+b[22]+b[23]+b[24] == 1.0)
@constraint(m, e12, b[25]+b[26]+b[27]+b[28] == 1.0)
@constraint(m, e13, b[29]+b[30]+b[31]+b[32] == 1.0)
@constraint(m, e14, b[33]+b[34]+b[35] <= 1.0)
@constraint(m, e15, b[36]+b[37]+b[38] <= 1.0)
@constraint(m, e16, b[39]+b[40]+b[41] <= 1.0)
@constraint(m, e17, b[42]+b[43]+b[44] <= 1.0)
@constraint(m, e18, -b[33]+x[49] <= 0.0)
@constraint(m, e19, -b[34]+x[50] <= 0.0)
@constraint(m, e20, -b[35]+x[51] <= 0.0)
@constraint(m, e21, -b[36]+x[52] <= 0.0)
@constraint(m, e22, -b[37]+x[53] <= 0.0)
@constraint(m, e23, -b[38]+x[54] <= 0.0)
@constraint(m, e24, -b[39]+x[55] <= 0.0)
@constraint(m, e25, -b[40]+x[56] <= 0.0)
@constraint(m, e26, -b[41]+x[57] <= 0.0)
@constraint(m, e27, -b[42]+x[58] <= 0.0)
@constraint(m, e28, -b[43]+x[59] <= 0.0)
@constraint(m, e29, -b[44]+x[60] <= 0.0)
@NLconstraint(m, e30, -x[45]/(1+x[45])+x[49] <= 0.0)
@NLconstraint(m, e31, -x[45]/(1+x[45])+x[50] <= 0.0)
@NLconstraint(m, e32, -x[45]/(1+x[45])+x[51] <= 0.0)
@NLconstraint(m, e33, -x[46]/(1+x[46])+x[52] <= 0.0)
@NLconstraint(m, e34, -x[46]/(1+x[46])+x[53] <= 0.0)
@NLconstraint(m, e35, -x[46]/(1+x[46])+x[54] <= 0.0)
@NLconstraint(m, e36, -x[47]/(1+x[47])+x[55] <= 0.0)
@NLconstraint(m, e37, -x[47]/(1+x[47])+x[56] <= 0.0)
@NLconstraint(m, e38, -x[47]/(1+x[47])+x[57] <= 0.0)
@NLconstraint(m, e39, -x[48]/(1+x[48])+x[58] <= 0.0)
@NLconstraint(m, e40, -x[48]/(1+x[48])+x[59] <= 0.0)
@NLconstraint(m, e41, -x[48]/(1+x[48])+x[60] <= 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.