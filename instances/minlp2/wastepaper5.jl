using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
@variable(m, x[x_Idx])
b_Idx = Any[41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105]
@variable(m, b[b_Idx])
set_binary(b[44])
set_binary(b[71])
set_lower_bound(x[16], 0.0)
set_binary(b[78])
set_lower_bound(x[14], 0.0)
set_lower_bound(x[38], 0.0)
set_binary(b[75])
set_binary(b[66])
set_binary(b[85])
set_binary(b[80])
set_binary(b[82])
set_binary(b[70])
set_binary(b[42])
set_lower_bound(x[22], 0.0)
set_binary(b[49])
set_binary(b[45])
set_binary(b[81])
set_binary(b[41])
set_binary(b[48])
set_binary(b[105])
set_lower_bound(x[9], 0.0)
set_lower_bound(x[8], 0.0)
set_binary(b[64])
set_binary(b[54])
set_binary(b[90])
set_lower_bound(x[36], 0.0)
set_binary(b[87])
set_binary(b[98])
set_lower_bound(x[32], 0.0)
set_lower_bound(x[27], 0.0)
set_binary(b[95])
set_binary(b[77])
set_lower_bound(x[25], 0.0)
set_binary(b[84])
set_lower_bound(x[30], 0.0)
set_binary(b[46])
set_binary(b[53])
set_binary(b[56])
set_lower_bound(x[11], 0.0)
set_binary(b[79])
set_lower_bound(x[29], 0.0)
set_binary(b[104])
set_lower_bound(x[37], 0.0)
set_binary(b[61])
set_binary(b[58])
set_binary(b[74])
set_binary(b[89])
set_binary(b[57])
set_binary(b[96])
set_lower_bound(x[24], 0.0)
set_binary(b[92])
set_binary(b[72])
set_lower_bound(x[18], 0.0)
set_binary(b[86])
set_lower_bound(x[7], 0.0)
set_lower_bound(x[13], 0.0)
set_binary(b[60])
set_binary(b[102])
set_lower_bound(x[21], 0.0)
set_lower_bound(x[10], 0.0)
set_binary(b[51])
set_binary(b[69])
set_binary(b[68])
set_binary(b[100])
set_lower_bound(x[26], 0.0)
set_binary(b[43])
set_binary(b[47])
set_lower_bound(x[12], 0.0)
set_lower_bound(x[40], 0.0)
set_binary(b[65])
set_binary(b[83])
set_binary(b[59])
set_lower_bound(x[31], 0.0)
set_lower_bound(x[33], 0.0)
set_binary(b[101])
set_binary(b[76])
set_lower_bound(x[28], 0.0)
set_lower_bound(x[35], 0.0)
set_binary(b[67])
set_binary(b[88])
set_binary(b[50])
set_binary(b[97])
set_lower_bound(x[17], 0.0)
set_binary(b[93])
set_binary(b[99])
set_lower_bound(x[23], 0.0)
set_binary(b[94])
set_lower_bound(x[34], 0.0)
set_binary(b[62])
set_binary(b[91])
set_lower_bound(x[19], 0.0)
set_binary(b[52])
set_binary(b[103])
set_lower_bound(x[20], 0.0)
set_lower_bound(x[39], 0.0)
set_binary(b[55])
set_lower_bound(x[15], 0.0)
set_binary(b[63])
set_binary(b[73])
set_lower_bound(x[2], 0.1)
set_upper_bound(x[2], 0.9)
set_lower_bound(x[3], 0.1)
set_upper_bound(x[3], 0.9)
set_lower_bound(x[4], 0.1)
set_upper_bound(x[4], 0.9)
set_lower_bound(x[5], 0.1)
set_upper_bound(x[5], 0.9)
set_lower_bound(x[6], 0.1)
set_upper_bound(x[6], 0.9)
set_upper_bound(x[7], 10.0)
set_upper_bound(x[8], 10.0)
set_upper_bound(x[9], 10.0)
set_upper_bound(x[10], 10.0)
set_upper_bound(x[11], 10.0)
set_upper_bound(x[12], 10.0)
set_upper_bound(x[13], 10.0)
set_upper_bound(x[14], 10.0)
set_upper_bound(x[15], 10.0)
set_upper_bound(x[16], 10.0)
set_upper_bound(x[17], 10.0)
set_upper_bound(x[18], 10.0)
set_upper_bound(x[19], 10.0)
set_upper_bound(x[20], 10.0)
set_upper_bound(x[21], 10.0)
set_upper_bound(x[22], 10.0)
set_upper_bound(x[23], 10.0)
set_upper_bound(x[24], 10.0)
set_upper_bound(x[25], 10.0)
set_upper_bound(x[26], 10.0)
set_upper_bound(x[27], 10.0)
set_upper_bound(x[28], 10.0)
set_upper_bound(x[29], 10.0)
set_upper_bound(x[30], 10.0)
set_upper_bound(x[31], 10.0)
set_upper_bound(x[32], 10.0)
set_upper_bound(x[33], 10.0)
set_upper_bound(x[34], 10.0)
set_upper_bound(x[35], 10.0)
set_upper_bound(x[36], 10.0)
set_upper_bound(x[37], 10.0)
set_upper_bound(x[38], 10.0)
set_upper_bound(x[39], 10.0)
set_upper_bound(x[40], 10.0)


# ----- Constraints ----- #
@constraint(m, e1, objvar-x[25] == 0.0)
@constraint(m, e2, x[7] <= 0.0675)
@constraint(m, e3, x[9]-x[10]+x[11] == 0.0)
@constraint(m, e4, x[12]-x[13]+x[14] == 0.0)
@constraint(m, e5, x[15]-x[16]+x[17] == 0.0)
@constraint(m, e6, x[18]-x[19]+x[20] == 0.0)
@constraint(m, e7, x[21]-x[22]+x[23] == 0.0)
@constraint(m, e8, x[26]-x[27]+x[28] == 0.0)
@constraint(m, e9, x[29]-x[30]+x[31] == 0.0)
@constraint(m, e10, x[32]-x[33]+x[34] == 0.0)
@constraint(m, e11, x[35]-x[36]+x[37] == 0.0)
@constraint(m, e12, x[38]-x[39]+x[40] == 0.0)
@NLconstraint(m, e13, x[2]^0.29*x[10]-x[11] == 0.0)
@NLconstraint(m, e14, x[3]^0.13*x[13]-x[14] == 0.0)
@NLconstraint(m, e15, x[4]^0.06*x[16]-x[17] == 0.0)
@NLconstraint(m, e16, x[5]^0.15*x[19]-x[20] == 0.0)
@NLconstraint(m, e17, x[6]^0.2*x[22]-x[23] == 0.0)
@NLconstraint(m, e18, x[2]^0.74*x[27]-x[28] == 0.0)
@NLconstraint(m, e19, x[3]^0.79*x[30]-x[31] == 0.0)
@NLconstraint(m, e20, x[4]^0.71*x[33]-x[34] == 0.0)
@NLconstraint(m, e21, x[5]^0.8*x[36]-x[37] == 0.0)
@NLconstraint(m, e22, x[6]^0.7*x[39]-x[40] == 0.0)
@NLconstraint(m, e23, b[41]*x[9]+b[46]*x[11]+b[51]*x[12]+b[56]*x[14]+b[61]*x[15]+b[66]*x[17]+b[71]*x[18]+b[76]*x[20]+b[81]*x[21]+b[86]*x[23]-x[10]+0.675*b[91] == 0.0)
@NLconstraint(m, e24, b[42]*x[9]+b[47]*x[11]+b[52]*x[12]+b[57]*x[14]+b[62]*x[15]+b[67]*x[17]+b[72]*x[18]+b[77]*x[20]+b[82]*x[21]+b[87]*x[23]-x[13]+0.675*b[92] == 0.0)
@NLconstraint(m, e25, b[43]*x[9]+b[48]*x[11]+b[53]*x[12]+b[58]*x[14]+b[63]*x[15]+b[68]*x[17]+b[73]*x[18]+b[78]*x[20]+b[83]*x[21]+b[88]*x[23]-x[16]+0.675*b[93] == 0.0)
@NLconstraint(m, e26, b[44]*x[9]+b[49]*x[11]+b[54]*x[12]+b[59]*x[14]+b[64]*x[15]+b[69]*x[17]+b[74]*x[18]+b[79]*x[20]+b[84]*x[21]+b[89]*x[23]-x[19]+0.675*b[94] == 0.0)
@NLconstraint(m, e27, b[45]*x[9]+b[50]*x[11]+b[55]*x[12]+b[60]*x[14]+b[65]*x[15]+b[70]*x[17]+b[75]*x[18]+b[80]*x[20]+b[85]*x[21]+b[90]*x[23]-x[22]+0.675*b[95] == 0.0)
@NLconstraint(m, e28, b[41]*x[26]+b[46]*x[28]+b[51]*x[29]+b[56]*x[31]+b[61]*x[32]+b[66]*x[34]+b[71]*x[35]+b[76]*x[37]+b[81]*x[38]+b[86]*x[40]-x[27]+0.649*b[91] == 0.0)
@NLconstraint(m, e29, b[42]*x[26]+b[47]*x[28]+b[52]*x[29]+b[57]*x[31]+b[62]*x[32]+b[67]*x[34]+b[72]*x[35]+b[77]*x[37]+b[82]*x[38]+b[87]*x[40]-x[30]+0.649*b[92] == 0.0)
@NLconstraint(m, e30, b[43]*x[26]+b[48]*x[28]+b[53]*x[29]+b[58]*x[31]+b[63]*x[32]+b[68]*x[34]+b[73]*x[35]+b[78]*x[37]+b[83]*x[38]+b[88]*x[40]-x[33]+0.649*b[93] == 0.0)
@NLconstraint(m, e31, b[44]*x[26]+b[49]*x[28]+b[54]*x[29]+b[59]*x[31]+b[64]*x[32]+b[69]*x[34]+b[74]*x[35]+b[79]*x[37]+b[84]*x[38]+b[89]*x[40]-x[36]+0.649*b[94] == 0.0)
@NLconstraint(m, e32, b[45]*x[26]+b[50]*x[28]+b[55]*x[29]+b[60]*x[31]+b[65]*x[32]+b[70]*x[34]+b[75]*x[35]+b[80]*x[37]+b[85]*x[38]+b[90]*x[40]-x[39]+0.649*b[95] == 0.0)
@NLconstraint(m, e33, b[96]*x[9]+b[97]*x[12]+b[98]*x[15]+b[99]*x[18]+b[100]*x[21]-x[7] == 0.0)
@NLconstraint(m, e34, b[96]*x[26]+b[97]*x[29]+b[98]*x[32]+b[99]*x[35]+b[100]*x[38]-x[24] == 0.0)
@NLconstraint(m, e35, b[101]*x[11]+b[102]*x[14]+b[103]*x[17]+b[104]*x[20]+b[105]*x[23]-x[8] == 0.0)
@NLconstraint(m, e36, b[101]*x[28]+b[102]*x[31]+b[103]*x[34]+b[104]*x[37]+b[105]*x[40]-x[25] == 0.0)
@constraint(m, e37, b[41]+b[42]+b[43]+b[44]+b[45]+b[96] == 1.0)
@constraint(m, e38, b[51]+b[52]+b[53]+b[54]+b[55]+b[97] == 1.0)
@constraint(m, e39, b[61]+b[62]+b[63]+b[64]+b[65]+b[98] == 1.0)
@constraint(m, e40, b[71]+b[72]+b[73]+b[74]+b[75]+b[99] == 1.0)
@constraint(m, e41, b[81]+b[82]+b[83]+b[84]+b[85]+b[100] == 1.0)
@constraint(m, e42, b[46]+b[47]+b[48]+b[49]+b[50]+b[101] == 1.0)
@constraint(m, e43, b[56]+b[57]+b[58]+b[59]+b[60]+b[102] == 1.0)
@constraint(m, e44, b[66]+b[67]+b[68]+b[69]+b[70]+b[103] == 1.0)
@constraint(m, e45, b[76]+b[77]+b[78]+b[79]+b[80]+b[104] == 1.0)
@constraint(m, e46, b[86]+b[87]+b[88]+b[89]+b[90]+b[105] == 1.0)
@constraint(m, e47, b[91]+b[92]+b[93]+b[94]+b[95] == 1.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.