using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126]
@variable(m, b[b_Idx])
x_Idx = Any[127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150]
@variable(m, x[x_Idx])
set_binary(b[35])
set_lower_bound(x[146], 0.0)
set_lower_bound(x[132], 0.0)
set_lower_bound(x[143], 0.0)
set_binary(b[15])
set_binary(b[45])
set_binary(b[64])
set_binary(b[112])
set_binary(b[21])
set_binary(b[36])
set_binary(b[87])
set_lower_bound(x[141], 0.0)
set_binary(b[79])
set_binary(b[119])
set_lower_bound(x[144], 0.0)
set_lower_bound(x[145], 0.0)
set_binary(b[16])
set_binary(b[60])
set_binary(b[12])
set_binary(b[11])
set_binary(b[19])
set_binary(b[3])
set_binary(b[39])
set_binary(b[4])
set_binary(b[37])
set_binary(b[88])
set_binary(b[50])
set_binary(b[97])
set_lower_bound(x[148], 0.0)
set_lower_bound(x[150], 0.0)
set_binary(b[62])
set_binary(b[113])
set_binary(b[24])
set_binary(b[10])
set_lower_bound(x[136], 0.0)
set_binary(b[75])
set_lower_bound(x[147], 0.0)
set_binary(b[70])
set_lower_bound(x[138], 0.0)
set_binary(b[41])
set_binary(b[48])
set_binary(b[23])
set_binary(b[28])
set_binary(b[90])
set_lower_bound(x[137], 0.0)
set_binary(b[84])
set_binary(b[53])
set_binary(b[116])
set_lower_bound(x[142], 0.0)
set_binary(b[29])
set_lower_bound(x[128], 0.0)
set_binary(b[61])
set_binary(b[89])
set_binary(b[34])
set_binary(b[86])
set_binary(b[114])
set_binary(b[13])
set_binary(b[69])
set_binary(b[68])
set_binary(b[47])
set_binary(b[108])
set_binary(b[76])
set_binary(b[109])
set_binary(b[94])
set_binary(b[107])
set_binary(b[52])
set_lower_bound(x[133], 0.0)
set_binary(b[38])
set_binary(b[71])
set_binary(b[78])
set_lower_bound(x[140], 0.0)
set_binary(b[66])
set_binary(b[80])
set_binary(b[49])
set_binary(b[105])
set_lower_bound(x[130], 0.0)
set_binary(b[124])
set_binary(b[54])
set_binary(b[111])
set_binary(b[22])
set_lower_bound(x[131], 0.0)
set_binary(b[98])
set_binary(b[77])
set_binary(b[46])
set_binary(b[56])
set_binary(b[104])
set_binary(b[74])
set_binary(b[32])
set_binary(b[92])
set_binary(b[72])
set_binary(b[126])
set_binary(b[5])
set_binary(b[125])
set_binary(b[14])
set_binary(b[43])
set_binary(b[110])
set_binary(b[25])
set_binary(b[9])
set_binary(b[117])
set_binary(b[83])
set_binary(b[59])
set_binary(b[67])
set_lower_bound(x[149], 0.0)
set_binary(b[93])
set_binary(b[99])
set_binary(b[123])
set_binary(b[122])
set_binary(b[121])
set_binary(b[26])
set_binary(b[73])
set_binary(b[118])
set_binary(b[44])
set_binary(b[120])
set_binary(b[85])
set_binary(b[82])
set_binary(b[42])
set_binary(b[106])
set_binary(b[81])
set_binary(b[95])
set_binary(b[115])
set_binary(b[8])
set_binary(b[33])
set_lower_bound(x[134], 0.0)
set_binary(b[30])
set_binary(b[40])
set_binary(b[58])
set_binary(b[96])
set_binary(b[57])
set_lower_bound(x[129], 0.0)
set_binary(b[102])
set_binary(b[51])
set_lower_bound(x[139], 0.0)
set_binary(b[2])
set_binary(b[100])
set_binary(b[20])
set_binary(b[7])
set_binary(b[65])
set_binary(b[101])
set_binary(b[17])
set_binary(b[6])
set_binary(b[1])
set_lower_bound(x[127], 0.0)
set_binary(b[27])
set_binary(b[18])
set_binary(b[31])
set_lower_bound(x[135], 0.0)
set_binary(b[91])
set_binary(b[103])
set_binary(b[55])
set_binary(b[63])


# ----- Constraints ----- #
@constraint(m, e1, -63.4638470839033*b[1]-406.464924344563*b[2]-281.054038749709*b[3]-357.899009619357*b[4]-283.867227208487*b[5]-346.427860883825*b[6]-174.902031629248*b[7]-327.682040608985*b[8]-195.408950113586*b[9]-411.209540848557*b[10]-341.151615907997*b[11]-306.690501464422*b[12]-217.736042166853*b[13]-590.531921051569*b[14]-469.541866006763*b[15]-371.170896461036*b[16]-301.885481955089*b[17]-482.559449428939*b[18]-266.695094430501*b[19]-661.407332369201*b[20]-469.726457930889*b[21]-365.202026294741*b[22]-207.423237700342*b[23]-464.900263444655*b[24]-416.573440009268*b[25]-427.21293769024*b[26]-421.557561337466*b[27]-131.588490152482*b[28]-195.079739824454*b[29]-327.092772346777*b[30]-284.74538638165*b[31]-91.2881292105079*b[32]-151.13720061786*b[33]-158.491236423963*b[34]-174.161578418524*b[35]-70.9637233498753*b[36]-455.733220723331*b[37]-159.976116957465*b[38]-94.4221181484321*b[39]-501.080276859661*b[40]-450.105521915833*b[41]-218.986984440606*b[42]-754.787490214755*b[43]-145.720505553027*b[44]-360.826762020128*b[45]-512.320209445762*b[46]-533.899656702829*b[47]-217.438198555652*b[48]-257.356951080936*b[49]-469.748170208231*b[50]-224.941373479115*b[51]-574.696478620214*b[52]-453.651669444504*b[53]-396.680178831932*b[54]-355.480538495142*b[55]-455.001425048605*b[56]-410.327875101372*b[57]-107.716832660101*b[58]-127.140023996384*b[59]-331.094295675558*b[60]-182.462253711509*b[61]-460.500595074032*b[62]-320.358519241588*b[63]-267.389834464462*b[64]-154.515161518257*b[65]-322.544727498533*b[66]-33.1863391968753*b[67]-615.771638171722*b[68]-401.573448620245*b[69]-502.776036957456*b[70]-369.539939879878*b[71]-490.231458199826*b[72]-180.326894384108*b[73]-351.782220377873*b[74]-230.814529409496*b[75]-424.244156625063*b[76]-357.224268091235*b[77]-334.18273348498*b[78]-501.721049311591*b[79]-663.739169113737*b[80]-452.23673398428*b[81]-920.634818812952*b[82]-798.472532832495*b[83]-676.77410056404*b[84]-407.527006741593*b[85]-510.493559429826*b[86]-468.587901001095*b[87]-140.053665522904*b[88]-171.808834000698*b[89]-381.118854530951*b[90]-179.901289120497*b[91]-881.284249355185*b[92]-649.077324059404*b[93]-661.262090699325*b[94]-520.002854424345*b[95]-730.978694813241*b[96]-678.238937211925*b[97]-398.969088179479*b[98]-483.529007052756*b[99]-249.519882483891*b[100]-342.614106364254*b[101]-292.077181816541*b[102]-170.281172626711*b[103]-225.734424617283*b[104]-168.147658999551*b[105]-104.518622131715*b[106]-46.8477886786758*b[107]-136.089840994616*b[108]-310.191094*b[109]-117.377523177255*b[110]-76.582257499663*b[111]-439.61435975*b[112]-149.716022877401*b[113]-92.6683043463223*b[114]-350.33553925*b[115]-135.660413957549*b[116]-89.5371309630422*b[117]-261.032076*b[118]-112.326275197259*b[119]-78.152225609751*b[120]-473.56432275*b[121]-158.186763322588*b[122]-96.9684211447128*b[123]-351.54659075*b[124]-129.748325387621*b[125]-83.6038830543306*b[126]-92063.4818812952*x[127]-92063.4818812952*x[128]-92063.4818812952*x[129]-92063.4818812952*x[130]-92063.4818812952*x[131]-92063.4818812952*x[132]+objvar == 0.0)
@constraint(m, e2, 0.669744132*b[1]+0.711284112*b[7]+0.798385084*b[13]+1.430176337*b[19]+0.706194095*b[25]+0.501285943*b[31]+1.04003433*b[37]+1.252787639*b[43]+1.278441868*b[49]+0.80906674*b[55]+1.021192966*b[61]+1.20737712*b[67]+0.657698048*b[73]+1.314509471*b[79]+0.849949545*b[85]+1.327992452*b[91]+1.118160701*b[97]+0.605008155*b[103]-2.10079896525*x[133]-4.2015979305*x[134]-6.30239689575*x[135] == 0.0)
@constraint(m, e3, 0.669744132*b[2]+0.711284112*b[8]+0.798385084*b[14]+1.430176337*b[20]+0.706194095*b[26]+0.501285943*b[32]+1.04003433*b[38]+1.252787639*b[44]+1.278441868*b[50]+0.80906674*b[56]+1.021192966*b[62]+1.20737712*b[68]+0.657698048*b[74]+1.314509471*b[80]+0.849949545*b[86]+1.327992452*b[92]+1.118160701*b[98]+0.605008155*b[104]-2.1704413425*x[136]-4.340882685*x[137]-6.5113240275*x[138] == 0.0)
@constraint(m, e4, 0.669744132*b[3]+0.711284112*b[9]+0.798385084*b[15]+1.430176337*b[21]+0.706194095*b[27]+0.501285943*b[33]+1.04003433*b[39]+1.252787639*b[45]+1.278441868*b[51]+0.80906674*b[57]+1.021192966*b[63]+1.20737712*b[69]+0.657698048*b[75]+1.314509471*b[81]+0.849949545*b[87]+1.327992452*b[93]+1.118160701*b[99]+0.605008155*b[105]-2.5426093695*x[139]-5.085218739*x[140]-7.6278281085*x[141] == 0.0)
@constraint(m, e5, 0.669744132*b[4]+0.711284112*b[10]+0.798385084*b[16]+1.430176337*b[22]+0.706194095*b[28]+0.501285943*b[34]+1.04003433*b[40]+1.252787639*b[46]+1.278441868*b[52]+0.80906674*b[58]+1.021192966*b[64]+1.20737712*b[70]+0.657698048*b[76]+1.314509471*b[82]+0.849949545*b[88]+1.327992452*b[94]+1.118160701*b[100]+0.605008155*b[106]-2.59983815925*x[142]-5.1996763185*x[143]-7.79951447775*x[144] == 0.0)
@constraint(m, e6, 0.669744132*b[5]+0.711284112*b[11]+0.798385084*b[17]+1.430176337*b[23]+0.706194095*b[29]+0.501285943*b[35]+1.04003433*b[41]+1.252787639*b[47]+1.278441868*b[53]+0.80906674*b[59]+1.021192966*b[65]+1.20737712*b[71]+0.657698048*b[77]+1.314509471*b[83]+0.849949545*b[89]+1.327992452*b[95]+1.118160701*b[101]+0.605008155*b[107]-2.20617095775*x[145]-4.4123419155*x[146]-6.61851287325*x[147] == 0.0)
@constraint(m, e7, 0.669744132*b[6]+0.711284112*b[12]+0.798385084*b[18]+1.430176337*b[24]+0.706194095*b[30]+0.501285943*b[36]+1.04003433*b[42]+1.252787639*b[48]+1.278441868*b[54]+0.80906674*b[60]+1.021192966*b[66]+1.20737712*b[72]+0.657698048*b[78]+1.314509471*b[84]+0.849949545*b[90]+1.327992452*b[96]+1.118160701*b[102]+0.605008155*b[108]-2.20916166375*x[148]-4.4183233275*x[149]-6.62748499125*x[150] == 0.0)
@constraint(m, e8, b[1]+b[2]+b[3]+b[4]+b[5]+b[6] == 1.0)
@constraint(m, e9, b[7]+b[8]+b[9]+b[10]+b[11]+b[12] == 1.0)
@constraint(m, e10, b[13]+b[14]+b[15]+b[16]+b[17]+b[18] == 1.0)
@constraint(m, e11, b[19]+b[20]+b[21]+b[22]+b[23]+b[24] == 1.0)
@constraint(m, e12, b[25]+b[26]+b[27]+b[28]+b[29]+b[30] == 1.0)
@constraint(m, e13, b[31]+b[32]+b[33]+b[34]+b[35]+b[36] == 1.0)
@constraint(m, e14, b[37]+b[38]+b[39]+b[40]+b[41]+b[42] == 1.0)
@constraint(m, e15, b[43]+b[44]+b[45]+b[46]+b[47]+b[48] == 1.0)
@constraint(m, e16, b[49]+b[50]+b[51]+b[52]+b[53]+b[54] == 1.0)
@constraint(m, e17, b[55]+b[56]+b[57]+b[58]+b[59]+b[60] == 1.0)
@constraint(m, e18, b[61]+b[62]+b[63]+b[64]+b[65]+b[66] == 1.0)
@constraint(m, e19, b[67]+b[68]+b[69]+b[70]+b[71]+b[72] == 1.0)
@constraint(m, e20, b[73]+b[74]+b[75]+b[76]+b[77]+b[78] == 1.0)
@constraint(m, e21, b[79]+b[80]+b[81]+b[82]+b[83]+b[84] == 1.0)
@constraint(m, e22, b[85]+b[86]+b[87]+b[88]+b[89]+b[90] == 1.0)
@constraint(m, e23, b[91]+b[92]+b[93]+b[94]+b[95]+b[96] == 1.0)
@constraint(m, e24, b[97]+b[98]+b[99]+b[100]+b[101]+b[102] == 1.0)
@constraint(m, e25, b[103]+b[104]+b[105]+b[106]+b[107]+b[108] == 1.0)
@constraint(m, e26, b[109]+b[110]+b[111] <= 1.0)
@constraint(m, e27, b[112]+b[113]+b[114] <= 1.0)
@constraint(m, e28, b[115]+b[116]+b[117] <= 1.0)
@constraint(m, e29, b[118]+b[119]+b[120] <= 1.0)
@constraint(m, e30, b[121]+b[122]+b[123] <= 1.0)
@constraint(m, e31, b[124]+b[125]+b[126] <= 1.0)
@constraint(m, e32, -b[109]+x[133] <= 0.0)
@constraint(m, e33, -b[110]+x[134] <= 0.0)
@constraint(m, e34, -b[111]+x[135] <= 0.0)
@constraint(m, e35, -b[112]+x[136] <= 0.0)
@constraint(m, e36, -b[113]+x[137] <= 0.0)
@constraint(m, e37, -b[114]+x[138] <= 0.0)
@constraint(m, e38, -b[115]+x[139] <= 0.0)
@constraint(m, e39, -b[116]+x[140] <= 0.0)
@constraint(m, e40, -b[117]+x[141] <= 0.0)
@constraint(m, e41, -b[118]+x[142] <= 0.0)
@constraint(m, e42, -b[119]+x[143] <= 0.0)
@constraint(m, e43, -b[120]+x[144] <= 0.0)
@constraint(m, e44, -b[121]+x[145] <= 0.0)
@constraint(m, e45, -b[122]+x[146] <= 0.0)
@constraint(m, e46, -b[123]+x[147] <= 0.0)
@constraint(m, e47, -b[124]+x[148] <= 0.0)
@constraint(m, e48, -b[125]+x[149] <= 0.0)
@constraint(m, e49, -b[126]+x[150] <= 0.0)
@NLconstraint(m, e50, x[133]*b[109]+x[133]*x[127]-x[127]*b[109] <= 0.0)
@NLconstraint(m, e51, x[134]*b[110]+x[134]*x[127]-x[127]*b[110] <= 0.0)
@NLconstraint(m, e52, x[135]*b[111]+x[135]*x[127]-x[127]*b[111] <= 0.0)
@NLconstraint(m, e53, x[136]*b[112]+x[136]*x[128]-x[128]*b[112] <= 0.0)
@NLconstraint(m, e54, x[137]*b[113]+x[137]*x[128]-x[128]*b[113] <= 0.0)
@NLconstraint(m, e55, x[138]*b[114]+x[138]*x[128]-x[128]*b[114] <= 0.0)
@NLconstraint(m, e56, x[139]*b[115]+x[139]*x[129]-x[129]*b[115] <= 0.0)
@NLconstraint(m, e57, x[140]*b[116]+x[140]*x[129]-x[129]*b[116] <= 0.0)
@NLconstraint(m, e58, x[141]*b[117]+x[141]*x[129]-x[129]*b[117] <= 0.0)
@NLconstraint(m, e59, x[142]*b[118]+x[142]*x[130]-x[130]*b[118] <= 0.0)
@NLconstraint(m, e60, x[143]*b[119]+x[143]*x[130]-x[130]*b[119] <= 0.0)
@NLconstraint(m, e61, x[144]*b[120]+x[144]*x[130]-x[130]*b[120] <= 0.0)
@NLconstraint(m, e62, x[145]*b[121]+x[145]*x[131]-x[131]*b[121] <= 0.0)
@NLconstraint(m, e63, x[146]*b[122]+x[146]*x[131]-x[131]*b[122] <= 0.0)
@NLconstraint(m, e64, x[147]*b[123]+x[147]*x[131]-x[131]*b[123] <= 0.0)
@NLconstraint(m, e65, x[148]*b[124]+x[148]*x[132]-x[132]*b[124] <= 0.0)
@NLconstraint(m, e66, x[149]*b[125]+x[149]*x[132]-x[132]*b[125] <= 0.0)
@NLconstraint(m, e67, x[150]*b[126]+x[150]*x[132]-x[132]*b[126] <= 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.