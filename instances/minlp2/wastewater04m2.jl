using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55]
@variable(m, x[x_Idx])
set_lower_bound(x[16], 0.0)
set_lower_bound(x[14], 0.0)
set_lower_bound(x[38], 0.0)
set_lower_bound(x[42], 0.0)
set_lower_bound(x[22], 0.0)
set_lower_bound(x[2], 0.0)
set_lower_bound(x[9], 0.0)
set_lower_bound(x[8], 0.0)
set_lower_bound(x[43], 0.0)
set_lower_bound(x[36], 0.0)
set_lower_bound(x[4], 0.0)
set_lower_bound(x[32], 0.0)
set_lower_bound(x[54], 0.0)
set_lower_bound(x[27], 0.0)
set_lower_bound(x[3], 0.0)
set_lower_bound(x[25], 0.0)
set_lower_bound(x[30], 0.0)
set_lower_bound(x[11], 0.0)
set_lower_bound(x[29], 0.0)
set_lower_bound(x[53], 0.0)
set_lower_bound(x[5], 0.0)
set_lower_bound(x[37], 0.0)
set_lower_bound(x[55], 0.0)
set_lower_bound(x[24], 0.0)
set_lower_bound(x[41], 0.0)
set_lower_bound(x[18], 0.0)
set_lower_bound(x[52], 0.0)
set_lower_bound(x[1], 0.0)
set_lower_bound(x[7], 0.0)
set_lower_bound(x[13], 0.0)
set_lower_bound(x[49], 0.0)
set_lower_bound(x[21], 0.0)
set_lower_bound(x[10], 0.0)
set_lower_bound(x[26], 0.0)
set_lower_bound(x[45], 0.0)
set_lower_bound(x[12], 0.0)
set_lower_bound(x[40], 0.0)
set_lower_bound(x[44], 0.0)
set_lower_bound(x[50], 0.0)
set_lower_bound(x[31], 0.0)
set_lower_bound(x[33], 0.0)
set_lower_bound(x[47], 0.0)
set_lower_bound(x[28], 0.0)
set_lower_bound(x[35], 0.0)
set_lower_bound(x[6], 0.0)
set_lower_bound(x[17], 0.0)
set_lower_bound(x[23], 0.0)
set_lower_bound(x[34], 0.0)
set_lower_bound(x[46], 0.0)
set_lower_bound(x[51], 0.0)
set_lower_bound(x[19], 0.0)
set_lower_bound(x[48], 0.0)
set_lower_bound(x[20], 0.0)
set_lower_bound(x[39], 0.0)
set_lower_bound(x[15], 0.0)
set_upper_bound(x[1], 1.0e6)
set_upper_bound(x[2], 1.0e6)
set_upper_bound(x[3], 1.0e6)
set_upper_bound(x[4], 1.0e6)
set_upper_bound(x[5], 1.0e6)
set_upper_bound(x[6], 1.0e6)
set_upper_bound(x[7], 1.0e6)
set_upper_bound(x[8], 1.0e6)
set_upper_bound(x[9], 1.0e6)
set_upper_bound(x[10], 1.0e6)
set_upper_bound(x[11], 1.0e6)
set_upper_bound(x[12], 1.0e6)
set_upper_bound(x[13], 1.0e6)
set_upper_bound(x[14], 1.0e6)
set_upper_bound(x[15], 1.0e6)
set_upper_bound(x[16], 1.0e6)
set_upper_bound(x[17], 1.0e6)
set_upper_bound(x[18], 1.0e6)
set_upper_bound(x[19], 1.0e6)
set_upper_bound(x[20], 1.0e6)
set_upper_bound(x[21], 1.0e6)
set_upper_bound(x[22], 1.0e6)
set_upper_bound(x[23], 1.0e6)
set_upper_bound(x[24], 1.0e6)
set_upper_bound(x[25], 1.0e6)
set_upper_bound(x[26], 1.0e6)
set_upper_bound(x[27], 1.0e6)
set_upper_bound(x[28], 1.0e6)
set_upper_bound(x[29], 1.0e6)
set_upper_bound(x[30], 1.0e6)
set_upper_bound(x[31], 1.0e6)
set_upper_bound(x[32], 1.0e6)
set_upper_bound(x[33], 1.0e6)
set_upper_bound(x[34], 1.0e6)
set_upper_bound(x[35], 1.0e6)
set_upper_bound(x[36], 1.0e6)
set_upper_bound(x[37], 1.0e6)
set_upper_bound(x[38], 1.0e6)
set_upper_bound(x[39], 1.0e6)
set_upper_bound(x[40], 1.0e6)
set_upper_bound(x[41], 1.0e6)
set_upper_bound(x[42], 1.0e6)
set_upper_bound(x[43], 1.0e6)
set_upper_bound(x[44], 1.0e6)
set_upper_bound(x[45], 1.0e6)
set_upper_bound(x[46], 1.0e6)
set_upper_bound(x[47], 1.0e6)
set_upper_bound(x[48], 1.0e6)
set_upper_bound(x[49], 1.0e6)
set_upper_bound(x[50], 1.0e6)
set_upper_bound(x[51], 1.0e6)
set_upper_bound(x[52], 1.0e6)
set_upper_bound(x[53], 1.0e6)
set_upper_bound(x[54], 1.0e6)
set_upper_bound(x[55], 1.0e6)


# ----- Constraints ----- #
@constraint(m, e1, -x[14]-x[15]+objvar == 0.0)
@constraint(m, e2, -x[5]-x[9]-x[10] == -40.0)
@constraint(m, e3, -x[6]-x[11]-x[12] == -40.0)
@constraint(m, e4, -x[1]-x[3]-x[9]-x[11]+x[14] == 0.0)
@constraint(m, e5, -x[2]-x[4]-x[10]-x[12]+x[15] == 0.0)
@constraint(m, e6, -x[1]-x[2]-x[7]+x[14] == 0.0)
@constraint(m, e7, -x[3]-x[4]-x[8]+x[15] == 0.0)
@constraint(m, e8, -x[5]-x[6]-x[7]-x[8]+x[13] == 0.0)
@constraint(m, e9, -x[24]-x[32]-x[34] == -4000.0)
@constraint(m, e10, -x[25]-x[33]-x[35] == -800.0)
@constraint(m, e11, -x[26]-x[36]-x[38] == -600.0)
@constraint(m, e12, -x[27]-x[37]-x[39] == -8000.0)
@constraint(m, e13, -x[32]+4000*x[52] == 0.0)
@constraint(m, e14, -x[33]+800*x[52] == 0.0)
@constraint(m, e15, -x[34]+4000*x[53] == 0.0)
@constraint(m, e16, -x[35]+800*x[53] == 0.0)
@constraint(m, e17, -x[36]+600*x[54] == 0.0)
@constraint(m, e18, -x[37]+8000*x[54] == 0.0)
@constraint(m, e19, -x[38]+600*x[55] == 0.0)
@constraint(m, e20, -x[39]+8000*x[55] == 0.0)
@constraint(m, e21, -x[24]+4000*x[48] == 0.0)
@constraint(m, e22, -x[25]+800*x[48] == 0.0)
@constraint(m, e23, -x[26]+600*x[49] == 0.0)
@constraint(m, e24, -x[27]+8000*x[49] == 0.0)
@constraint(m, e25, -x[9]+40*x[52] == 0.0)
@constraint(m, e26, -x[10]+40*x[53] == 0.0)
@constraint(m, e27, -x[11]+40*x[54] == 0.0)
@constraint(m, e28, -x[12]+40*x[55] == 0.0)
@constraint(m, e29, -x[5]+40*x[48] == 0.0)
@constraint(m, e30, -x[6]+40*x[49] == 0.0)
@constraint(m, e31, x[48]+x[52]+x[53] == 1.0)
@constraint(m, e32, x[49]+x[54]+x[55] == 1.0)
@constraint(m, e33, -200*x[14]+x[16]+x[20]+x[32]+x[36] <= 0.0)
@constraint(m, e34, -200*x[14]+x[17]+x[21]+x[33]+x[37] <= 0.0)
@constraint(m, e35, -200*x[15]+x[18]+x[22]+x[34]+x[38] <= 0.0)
@constraint(m, e36, -200*x[15]+x[19]+x[23]+x[35]+x[39] <= 0.0)
@constraint(m, e37, 0.05*x[16]+0.05*x[20]+0.05*x[32]+0.05*x[36]-x[40] == 0.0)
@constraint(m, e38, x[17]+x[21]+x[33]+x[37]-x[41] == 0.0)
@constraint(m, e39, x[18]+x[22]+x[34]+x[38]-x[42] == 0.0)
@constraint(m, e40, 0.024*x[19]+0.024*x[23]+0.024*x[35]+0.024*x[39]-x[43] == 0.0)
@constraint(m, e41, -x[16]-x[18]-x[28]+x[40] == 0.0)
@constraint(m, e42, -x[17]-x[19]-x[29]+x[41] == 0.0)
@constraint(m, e43, -x[20]-x[22]-x[30]+x[42] == 0.0)
@constraint(m, e44, -x[21]-x[23]-x[31]+x[43] == 0.0)
@NLconstraint(m, e45, x[40]*x[44]-x[16] == 0.0)
@NLconstraint(m, e46, x[41]*x[44]-x[17] == 0.0)
@NLconstraint(m, e47, x[40]*x[45]-x[18] == 0.0)
@NLconstraint(m, e48, x[41]*x[45]-x[19] == 0.0)
@NLconstraint(m, e49, x[42]*x[46]-x[20] == 0.0)
@NLconstraint(m, e50, x[43]*x[46]-x[21] == 0.0)
@NLconstraint(m, e51, x[42]*x[47]-x[22] == 0.0)
@NLconstraint(m, e52, x[43]*x[47]-x[23] == 0.0)
@NLconstraint(m, e53, x[40]*x[50]-x[28] == 0.0)
@NLconstraint(m, e54, x[41]*x[50]-x[29] == 0.0)
@NLconstraint(m, e55, x[42]*x[51]-x[30] == 0.0)
@NLconstraint(m, e56, x[43]*x[51]-x[31] == 0.0)
@NLconstraint(m, e57, x[14]*x[44]-x[1] == 0.0)
@NLconstraint(m, e58, x[14]*x[45]-x[2] == 0.0)
@NLconstraint(m, e59, x[15]*x[46]-x[3] == 0.0)
@NLconstraint(m, e60, x[15]*x[47]-x[4] == 0.0)
@NLconstraint(m, e61, x[14]*x[50]-x[7] == 0.0)
@NLconstraint(m, e62, x[15]*x[51]-x[8] == 0.0)
@constraint(m, e63, x[44]+x[45]+x[50] == 1.0)
@constraint(m, e64, x[46]+x[47]+x[51] == 1.0)
@constraint(m, e65, -10*x[13]+x[24]+x[26]+x[28]+x[30] <= 0.0)
@constraint(m, e66, -10*x[13]+x[25]+x[27]+x[29]+x[31] <= 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.