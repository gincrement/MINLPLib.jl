using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108]
@variable(m, b[b_Idx])
x_Idx = Any[109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132]
@variable(m, x[x_Idx])
set_lower_bound(x[117], 0.0)
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_binary(b[71])
set_lower_bound(x[118], 0.0)
set_binary(b[78])
set_lower_bound(x[114], 0.0)
set_binary(b[75])
set_lower_bound(x[132], 0.0)
set_binary(b[66])
set_binary(b[85])
set_binary(b[15])
set_binary(b[80])
set_binary(b[82])
set_lower_bound(x[110], 0.0)
set_binary(b[70])
set_binary(b[42])
set_binary(b[49])
set_binary(b[106])
set_binary(b[45])
set_binary(b[81])
set_lower_bound(x[113], 0.0)
set_binary(b[41])
set_binary(b[48])
set_binary(b[105])
set_lower_bound(x[130], 0.0)
set_binary(b[23])
set_binary(b[64])
set_binary(b[54])
set_lower_bound(x[111], 0.0)
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_binary(b[22])
set_binary(b[90])
set_lower_bound(x[131], 0.0)
set_binary(b[87])
set_binary(b[98])
set_binary(b[95])
set_binary(b[77])
set_binary(b[84])
set_binary(b[46])
set_binary(b[53])
set_binary(b[8])
set_binary(b[33])
set_binary(b[56])
set_binary(b[30])
set_binary(b[79])
set_binary(b[104])
set_binary(b[29])
set_lower_bound(x[128], 0.0)
set_binary(b[40])
set_binary(b[61])
set_binary(b[58])
set_binary(b[74])
set_binary(b[32])
set_binary(b[34])
set_lower_bound(x[122], 0.0)
set_binary(b[57])
set_lower_bound(x[129], 0.0)
set_binary(b[72])
set_binary(b[89])
set_binary(b[92])
set_binary(b[5])
set_binary(b[16])
set_binary(b[96])
set_binary(b[86])
set_lower_bound(x[120], 0.0)
set_lower_bound(x[121], 0.0)
set_binary(b[60])
set_binary(b[102])
set_binary(b[13])
set_binary(b[51])
set_binary(b[69])
set_binary(b[12])
set_binary(b[2])
set_lower_bound(x[126], 0.0)
set_binary(b[68])
set_binary(b[100])
set_binary(b[14])
set_binary(b[20])
set_binary(b[43])
set_binary(b[11])
set_binary(b[19])
set_binary(b[47])
set_binary(b[25])
set_binary(b[7])
set_binary(b[9])
set_lower_bound(x[116], 0.0)
set_binary(b[65])
set_binary(b[3])
set_binary(b[83])
set_binary(b[59])
set_binary(b[101])
set_binary(b[108])
set_binary(b[17])
set_binary(b[39])
set_binary(b[76])
set_binary(b[4])
set_binary(b[6])
set_binary(b[67])
set_binary(b[1])
set_lower_bound(x[123], 0.0)
set_lower_bound(x[112], 0.0)
set_lower_bound(x[115], 0.0)
set_lower_bound(x[127], 0.0)
set_binary(b[37])
set_binary(b[50])
set_binary(b[27])
set_binary(b[18])
set_binary(b[88])
set_lower_bound(x[124], 0.0)
set_binary(b[97])
set_lower_bound(x[119], 0.0)
set_binary(b[93])
set_binary(b[99])
set_binary(b[94])
set_lower_bound(x[109], 0.0)
set_binary(b[31])
set_binary(b[107])
set_binary(b[62])
set_binary(b[91])
set_lower_bound(x[125], 0.0)
set_binary(b[52])
set_binary(b[103])
set_binary(b[24])
set_binary(b[55])
set_binary(b[10])
set_binary(b[63])
set_binary(b[26])
set_binary(b[73])


# ----- Constraints ----- #
@constraint(m, e1, -442.063529622557*b[1]-366.945276949078*b[2]-361.844037620352*b[3]-254.615285920205*b[4]-409.806064932284*b[5]-370.944913736794*b[6]-917.905907756872*b[7]-854.714984393962*b[8]-230.026275257868*b[9]-657.995431103635*b[10]-881.870778772793*b[11]-729.302338156532*b[12]-293.220680634507*b[13]-234.88505640483*b[14]-306.589119028639*b[15]-212.604635867499*b[16]-268.277773733309*b[17]-306.054716297049*b[18]-282.784475761168*b[19]-198.595458779145*b[20]-587.147485855927*b[21]-280.762101897659*b[22]-260.072754182405*b[23]-385.710083699727*b[24]-1022.14187585538*b[25]-926.621742504607*b[26]-974.3712565818*b[27]-398.695186748816*b[28]-997.178402424156*b[29]-262.577539485453*b[30]-278.200204540222*b[31]-203.400321375105*b[32]-542.235016479437*b[33]-232.29811336384*b[34]-259.100413925782*b[35]-322.702146186956*b[36]-585.3932113854*b[37]-489.124324719191*b[38]-596.315128001653*b[39]-78.8410167536545*b[40]-554.500116548826*b[41]-215.082206281639*b[42]-272.649920146241*b[43]-246.781768566014*b[44]-59.9005909177966*b[45]-210.385716981595*b[46]-257.413123058575*b[47]-255.90843580668*b[48]-182.000435693263*b[49]-217.705997253011*b[50]-525.920916259861*b[51]-595.991352847666*b[52]-173.098787504103*b[53]-704.023805695798*b[54]-348.910381017493*b[55]-315.546938168662*b[56]-81.3458727613443*b[57]-246.930651630931*b[58]-330.394908673519*b[59]-298.153509072106*b[60]-269.030948304878*b[61]-247.330257721078*b[62]-595.374260868798*b[63]-321.838418502709*b[64]-273.302652187602*b[65]-347.519560747871*b[66]-239.965056365958*b[67]-225.918110477132*b[68]-821.704586939783*b[69]-517.548613279649*b[70]-252.40296214282*b[71]-591.78966905405*b[72]-497.076717281293*b[73]-427.025244750595*b[74]-710.446278907083*b[75]-201.293936746268*b[76]-483.702115167666*b[77]-205.105793016246*b[78]-144.308693458219*b[79]-82.7493748423842*b[80]-445.417000840525*b[81]-270.153852594662*b[82]-128.431590169631*b[83]-347.590895267443*b[84]-880.088095965037*b[85]-803.815832561014*b[86]-643.566550614291*b[87]-383.258000970235*b[88]-854.384284117996*b[89]-324.364518048663*b[90]-447.27297125*b[91]-149.951518778611*b[92]-92.0883310907824*b[93]-387.55659475*b[94]-137.706485799464*b[95]-87.0620787543829*b[96]-387.78996175*b[97]-131.949558973922*b[98]-81.6353681987649*b[99]-379.407193*b[100]-122.763219198849*b[101]-74.0651688912662*b[102]-388.31994525*b[103]-136.076111741735*b[104]-85.4363925392073*b[105]-391.38973275*b[106]-135.992919927791*b[107]-85.0226413744402*b[108]-102214.187585538*x[109]-102214.187585538*x[110]-102214.187585538*x[111]-102214.187585538*x[112]-102214.187585538*x[113]-102214.187585538*x[114]+objvar == 0.0)
@constraint(m, e2, 1.272106132*b[1]+1.387058696*b[7]+0.986800572*b[13]+1.270704755*b[19]+1.453458083*b[25]+1.140913439*b[31]+1.447691326*b[37]+0.587485071*b[43]+1.163969038*b[49]+0.710009506*b[55]+0.80768006*b[61]+1.246716252*b[67]+1.166104962*b[73]+0.934997655*b[79]+1.153921397*b[85]-2.10665801875*x[115]-4.2133160375*x[116]-6.31997405625*x[117] == 0.0)
@constraint(m, e3, 1.272106132*b[2]+1.387058696*b[8]+0.986800572*b[14]+1.270704755*b[20]+1.453458083*b[26]+1.140913439*b[32]+1.447691326*b[38]+0.587485071*b[44]+1.163969038*b[50]+0.710009506*b[56]+0.80768006*b[62]+1.246716252*b[68]+1.166104962*b[74]+0.934997655*b[80]+1.153921397*b[86]-2.173103564375*x[118]-4.34620712875*x[119]-6.519310693125*x[120] == 0.0)
@constraint(m, e4, 1.272106132*b[3]+1.387058696*b[9]+0.986800572*b[15]+1.270704755*b[21]+1.453458083*b[27]+1.140913439*b[33]+1.447691326*b[39]+0.587485071*b[45]+1.163969038*b[51]+0.710009506*b[57]+0.80768006*b[63]+1.246716252*b[69]+1.166104962*b[75]+0.934997655*b[81]+1.153921397*b[87]-1.909491104375*x[121]-3.81898220875*x[122]-5.728473313125*x[123] == 0.0)
@constraint(m, e5, 1.272106132*b[4]+1.387058696*b[10]+0.986800572*b[16]+1.270704755*b[22]+1.453458083*b[28]+1.140913439*b[34]+1.447691326*b[40]+0.587485071*b[46]+1.163969038*b[52]+0.710009506*b[58]+0.80768006*b[64]+1.246716252*b[70]+1.166104962*b[76]+0.934997655*b[82]+1.153921397*b[88]-1.606497171875*x[124]-3.21299434375*x[125]-4.819491515625*x[126] == 0.0)
@constraint(m, e6, 1.272106132*b[5]+1.387058696*b[11]+0.986800572*b[17]+1.270704755*b[23]+1.453458083*b[29]+1.140913439*b[35]+1.447691326*b[41]+0.587485071*b[47]+1.163969038*b[53]+0.710009506*b[59]+0.80768006*b[65]+1.246716252*b[71]+1.166104962*b[77]+0.934997655*b[83]+1.153921397*b[89]-2.08859194*x[127]-4.17718388*x[128]-6.26577582*x[129] == 0.0)
@constraint(m, e7, 1.272106132*b[6]+1.387058696*b[12]+0.986800572*b[18]+1.270704755*b[24]+1.453458083*b[30]+1.140913439*b[36]+1.447691326*b[42]+0.587485071*b[48]+1.163969038*b[54]+0.710009506*b[60]+0.80768006*b[66]+1.246716252*b[72]+1.166104962*b[78]+0.934997655*b[84]+1.153921397*b[90]-2.05218849125*x[130]-4.1043769825*x[131]-6.15656547375*x[132] == 0.0)
@constraint(m, e8, b[1]+b[2]+b[3]+b[4]+b[5]+b[6] == 1.0)
@constraint(m, e9, b[7]+b[8]+b[9]+b[10]+b[11]+b[12] == 1.0)
@constraint(m, e10, b[13]+b[14]+b[15]+b[16]+b[17]+b[18] == 1.0)
@constraint(m, e11, b[19]+b[20]+b[21]+b[22]+b[23]+b[24] == 1.0)
@constraint(m, e12, b[25]+b[26]+b[27]+b[28]+b[29]+b[30] == 1.0)
@constraint(m, e13, b[31]+b[32]+b[33]+b[34]+b[35]+b[36] == 1.0)
@constraint(m, e14, b[37]+b[38]+b[39]+b[40]+b[41]+b[42] == 1.0)
@constraint(m, e15, b[43]+b[44]+b[45]+b[46]+b[47]+b[48] == 1.0)
@constraint(m, e16, b[49]+b[50]+b[51]+b[52]+b[53]+b[54] == 1.0)
@constraint(m, e17, b[55]+b[56]+b[57]+b[58]+b[59]+b[60] == 1.0)
@constraint(m, e18, b[61]+b[62]+b[63]+b[64]+b[65]+b[66] == 1.0)
@constraint(m, e19, b[67]+b[68]+b[69]+b[70]+b[71]+b[72] == 1.0)
@constraint(m, e20, b[73]+b[74]+b[75]+b[76]+b[77]+b[78] == 1.0)
@constraint(m, e21, b[79]+b[80]+b[81]+b[82]+b[83]+b[84] == 1.0)
@constraint(m, e22, b[85]+b[86]+b[87]+b[88]+b[89]+b[90] == 1.0)
@constraint(m, e23, b[91]+b[92]+b[93] <= 1.0)
@constraint(m, e24, b[94]+b[95]+b[96] <= 1.0)
@constraint(m, e25, b[97]+b[98]+b[99] <= 1.0)
@constraint(m, e26, b[100]+b[101]+b[102] <= 1.0)
@constraint(m, e27, b[103]+b[104]+b[105] <= 1.0)
@constraint(m, e28, b[106]+b[107]+b[108] <= 1.0)
@constraint(m, e29, -b[91]+x[115] <= 0.0)
@constraint(m, e30, -b[92]+x[116] <= 0.0)
@constraint(m, e31, -b[93]+x[117] <= 0.0)
@constraint(m, e32, -b[94]+x[118] <= 0.0)
@constraint(m, e33, -b[95]+x[119] <= 0.0)
@constraint(m, e34, -b[96]+x[120] <= 0.0)
@constraint(m, e35, -b[97]+x[121] <= 0.0)
@constraint(m, e36, -b[98]+x[122] <= 0.0)
@constraint(m, e37, -b[99]+x[123] <= 0.0)
@constraint(m, e38, -b[100]+x[124] <= 0.0)
@constraint(m, e39, -b[101]+x[125] <= 0.0)
@constraint(m, e40, -b[102]+x[126] <= 0.0)
@constraint(m, e41, -b[103]+x[127] <= 0.0)
@constraint(m, e42, -b[104]+x[128] <= 0.0)
@constraint(m, e43, -b[105]+x[129] <= 0.0)
@constraint(m, e44, -b[106]+x[130] <= 0.0)
@constraint(m, e45, -b[107]+x[131] <= 0.0)
@constraint(m, e46, -b[108]+x[132] <= 0.0)
@NLconstraint(m, e47, x[115]*b[91]+x[115]*x[109]-x[109]*b[91] <= 0.0)
@NLconstraint(m, e48, x[116]*b[92]+x[116]*x[109]-x[109]*b[92] <= 0.0)
@NLconstraint(m, e49, x[117]*b[93]+x[117]*x[109]-x[109]*b[93] <= 0.0)
@NLconstraint(m, e50, x[118]*b[94]+x[118]*x[110]-x[110]*b[94] <= 0.0)
@NLconstraint(m, e51, x[119]*b[95]+x[119]*x[110]-x[110]*b[95] <= 0.0)
@NLconstraint(m, e52, x[120]*b[96]+x[120]*x[110]-x[110]*b[96] <= 0.0)
@NLconstraint(m, e53, x[121]*b[97]+x[121]*x[111]-x[111]*b[97] <= 0.0)
@NLconstraint(m, e54, x[122]*b[98]+x[122]*x[111]-x[111]*b[98] <= 0.0)
@NLconstraint(m, e55, x[123]*b[99]+x[123]*x[111]-x[111]*b[99] <= 0.0)
@NLconstraint(m, e56, x[124]*b[100]+x[124]*x[112]-x[112]*b[100] <= 0.0)
@NLconstraint(m, e57, x[125]*b[101]+x[125]*x[112]-x[112]*b[101] <= 0.0)
@NLconstraint(m, e58, x[126]*b[102]+x[126]*x[112]-x[112]*b[102] <= 0.0)
@NLconstraint(m, e59, x[127]*b[103]+x[127]*x[113]-x[113]*b[103] <= 0.0)
@NLconstraint(m, e60, x[128]*b[104]+x[128]*x[113]-x[113]*b[104] <= 0.0)
@NLconstraint(m, e61, x[129]*b[105]+x[129]*x[113]-x[113]*b[105] <= 0.0)
@NLconstraint(m, e62, x[130]*b[106]+x[130]*x[114]-x[114]*b[106] <= 0.0)
@NLconstraint(m, e63, x[131]*b[107]+x[131]*x[114]-x[114]*b[107] <= 0.0)
@NLconstraint(m, e64, x[132]*b[108]+x[132]*x[114]-x[114]*b[108] <= 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.