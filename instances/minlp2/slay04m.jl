using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]
@variable(m, x[x_Idx])
b_Idx = Any[9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
@variable(m, b[b_Idx])
set_lower_bound(x[36], 0.0)
set_binary(b[27])
set_binary(b[18])
set_binary(b[12])
set_lower_bound(x[38], 0.0)
set_binary(b[14])
set_binary(b[20])
set_lower_bound(x[42], 0.0)
set_binary(b[15])
set_lower_bound(x[34], 0.0)
set_binary(b[30])
set_binary(b[31])
set_binary(b[11])
set_binary(b[19])
set_binary(b[29])
set_binary(b[25])
set_binary(b[9])
set_lower_bound(x[37], 0.0)
set_lower_bound(x[40], 0.0)
set_binary(b[32])
set_lower_bound(x[44], 0.0)
set_binary(b[24])
set_lower_bound(x[41], 0.0)
set_lower_bound(x[39], 0.0)
set_binary(b[23])
set_lower_bound(x[33], 0.0)
set_binary(b[16])
set_binary(b[10])
set_binary(b[17])
set_binary(b[26])
set_binary(b[21])
set_binary(b[28])
set_lower_bound(x[35], 0.0)
set_lower_bound(x[43], 0.0)
set_binary(b[13])
set_binary(b[22])
set_lower_bound(x[1], 2.5)
set_upper_bound(x[1], 27.5)
set_lower_bound(x[2], 3.5)
set_upper_bound(x[2], 26.5)
set_lower_bound(x[3], 1.5)
set_upper_bound(x[3], 28.5)
set_lower_bound(x[4], 1.0)
set_upper_bound(x[4], 29.0)
set_lower_bound(x[5], 3.0)
set_upper_bound(x[5], 27.0)
set_lower_bound(x[6], 2.5)
set_upper_bound(x[6], 27.5)
set_lower_bound(x[7], 1.5)
set_upper_bound(x[7], 28.5)
set_lower_bound(x[8], 1.5)
set_upper_bound(x[8], 28.5)


# ----- Constraints ----- #
@NLconstraint(m, e1, -(150*( ((-4)+x[1])^2+ ((-10)+x[5])^2)+390*( ((-10)+x[2])^2+ ((-15)+x[6])^2)+240*( ((-7)+x[3])^2+ ((-9)+x[7])^2)+70*( ((-3)+x[4])^2+ ((-3)+x[8])^2))-300*x[33]-240*x[34]-210*x[35]-100*x[36]-150*x[37]-120*x[38]-300*x[39]-240*x[40]-210*x[41]-100*x[42]-150*x[43]-120*x[44]+objvar == 0.0)
@constraint(m, e2, -x[1]+x[2]+x[33] >= 0.0)
@constraint(m, e3, -x[1]+x[3]+x[34] >= 0.0)
@constraint(m, e4, -x[1]+x[4]+x[35] >= 0.0)
@constraint(m, e5, -x[2]+x[3]+x[36] >= 0.0)
@constraint(m, e6, -x[2]+x[4]+x[37] >= 0.0)
@constraint(m, e7, -x[3]+x[4]+x[38] >= 0.0)
@constraint(m, e8, x[1]-x[2]+x[33] >= 0.0)
@constraint(m, e9, x[1]-x[3]+x[34] >= 0.0)
@constraint(m, e10, x[1]-x[4]+x[35] >= 0.0)
@constraint(m, e11, x[2]-x[3]+x[36] >= 0.0)
@constraint(m, e12, x[2]-x[4]+x[37] >= 0.0)
@constraint(m, e13, x[3]-x[4]+x[38] >= 0.0)
@constraint(m, e14, -x[5]+x[6]+x[39] >= 0.0)
@constraint(m, e15, -x[5]+x[7]+x[40] >= 0.0)
@constraint(m, e16, -x[5]+x[8]+x[41] >= 0.0)
@constraint(m, e17, -x[6]+x[7]+x[42] >= 0.0)
@constraint(m, e18, -x[6]+x[8]+x[43] >= 0.0)
@constraint(m, e19, -x[7]+x[8]+x[44] >= 0.0)
@constraint(m, e20, x[5]-x[6]+x[39] >= 0.0)
@constraint(m, e21, x[5]-x[7]+x[40] >= 0.0)
@constraint(m, e22, x[5]-x[8]+x[41] >= 0.0)
@constraint(m, e23, x[6]-x[7]+x[42] >= 0.0)
@constraint(m, e24, x[6]-x[8]+x[43] >= 0.0)
@constraint(m, e25, x[7]-x[8]+x[44] >= 0.0)
@constraint(m, e26, x[1]-x[2]+30*b[9] <= 24.0)
@constraint(m, e27, x[1]-x[3]+30*b[10] <= 26.0)
@constraint(m, e28, x[1]-x[4]+30*b[11] <= 26.5)
@constraint(m, e29, x[2]-x[3]+30*b[12] <= 25.0)
@constraint(m, e30, x[2]-x[4]+30*b[13] <= 25.5)
@constraint(m, e31, x[3]-x[4]+30*b[14] <= 27.5)
@constraint(m, e32, -x[1]+x[2]+30*b[15] <= 24.0)
@constraint(m, e33, -x[1]+x[3]+30*b[16] <= 26.0)
@constraint(m, e34, -x[1]+x[4]+30*b[17] <= 26.5)
@constraint(m, e35, -x[2]+x[3]+30*b[18] <= 25.0)
@constraint(m, e36, -x[2]+x[4]+30*b[19] <= 25.5)
@constraint(m, e37, -x[3]+x[4]+30*b[20] <= 27.5)
@constraint(m, e38, x[5]-x[6]+30*b[21] <= 24.5)
@constraint(m, e39, x[5]-x[7]+30*b[22] <= 25.5)
@constraint(m, e40, x[5]-x[8]+30*b[23] <= 25.5)
@constraint(m, e41, x[6]-x[7]+30*b[24] <= 26.0)
@constraint(m, e42, x[6]-x[8]+30*b[25] <= 26.0)
@constraint(m, e43, x[7]-x[8]+30*b[26] <= 27.0)
@constraint(m, e44, -x[5]+x[6]+30*b[27] <= 24.5)
@constraint(m, e45, -x[5]+x[7]+30*b[28] <= 25.5)
@constraint(m, e46, -x[5]+x[8]+30*b[29] <= 25.5)
@constraint(m, e47, -x[6]+x[7]+30*b[30] <= 26.0)
@constraint(m, e48, -x[6]+x[8]+30*b[31] <= 26.0)
@constraint(m, e49, -x[7]+x[8]+30*b[32] <= 27.0)
@constraint(m, e50, b[9]+b[15]+b[21]+b[27] == 1.0)
@constraint(m, e51, b[10]+b[16]+b[22]+b[28] == 1.0)
@constraint(m, e52, b[11]+b[17]+b[23]+b[29] == 1.0)
@constraint(m, e53, b[12]+b[18]+b[24]+b[30] == 1.0)
@constraint(m, e54, b[13]+b[19]+b[25]+b[31] == 1.0)
@constraint(m, e55, b[14]+b[20]+b[26]+b[32] == 1.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.