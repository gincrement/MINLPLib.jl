using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_binary(b[71])
set_binary(b[118])
set_binary(b[78])
set_binary(b[75])
set_binary(b[120])
set_binary(b[66])
set_binary(b[85])
set_binary(b[15])
set_binary(b[80])
set_binary(b[82])
set_binary(b[70])
set_binary(b[42])
set_binary(b[49])
set_binary(b[106])
set_binary(b[45])
set_binary(b[81])
set_binary(b[41])
set_binary(b[48])
set_binary(b[105])
set_binary(b[23])
set_binary(b[64])
set_binary(b[112])
set_binary(b[54])
set_binary(b[111])
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_binary(b[22])
set_binary(b[90])
set_binary(b[87])
set_binary(b[98])
set_binary(b[95])
set_binary(b[77])
set_binary(b[115])
set_binary(b[84])
set_binary(b[46])
set_binary(b[53])
set_binary(b[8])
set_binary(b[33])
set_binary(b[56])
set_binary(b[116])
set_binary(b[30])
set_binary(b[79])
set_binary(b[104])
set_binary(b[119])
set_binary(b[29])
set_binary(b[40])
set_binary(b[61])
set_binary(b[58])
set_binary(b[74])
set_binary(b[32])
set_binary(b[34])
set_binary(b[57])
set_binary(b[89])
set_binary(b[92])
set_binary(b[72])
set_binary(b[96])
set_binary(b[5])
set_binary(b[16])
set_binary(b[86])
set_binary(b[114])
set_binary(b[60])
set_binary(b[102])
set_binary(b[13])
set_binary(b[51])
set_binary(b[69])
set_binary(b[12])
set_binary(b[2])
set_binary(b[68])
set_binary(b[100])
set_binary(b[14])
set_binary(b[20])
set_binary(b[43])
set_binary(b[11])
set_binary(b[19])
set_binary(b[47])
set_binary(b[25])
set_binary(b[7])
set_binary(b[9])
set_binary(b[110])
set_binary(b[65])
set_binary(b[117])
set_binary(b[3])
set_binary(b[83])
set_binary(b[59])
set_binary(b[101])
set_binary(b[108])
set_binary(b[17])
set_binary(b[39])
set_binary(b[76])
set_binary(b[109])
set_binary(b[4])
set_binary(b[6])
set_binary(b[67])
set_binary(b[1])
set_binary(b[37])
set_binary(b[88])
set_binary(b[50])
set_binary(b[27])
set_binary(b[18])
set_binary(b[97])
set_binary(b[93])
set_binary(b[99])
set_binary(b[94])
set_binary(b[31])
set_binary(b[107])
set_binary(b[62])
set_binary(b[91])
set_binary(b[113])
set_binary(b[52])
set_binary(b[103])
set_binary(b[24])
set_binary(b[55])
set_binary(b[10])
set_binary(b[63])
set_binary(b[26])
set_binary(b[73])


# ----- Constraints ----- #
@NLconstraint(m, e1, 2*b[1]*b[3]-2*b[1]-2*b[3]+2*b[1]*b[5]-4*b[5]+2*b[1]*b[38]+2*b[38]-2*b[1]*b[50]+4*b[50]+2*b[2]*b[5]-2*b[2]+2*b[2]*b[7]-4*b[7]+2*b[2]*b[25]-2*b[25]-2*b[2]*b[68]+2*b[68]-2*b[3]*b[6]-2*b[6]+2*b[3]*b[26]-2*b[26]+2*b[3]*b[39]-2*b[39]+2*b[4]*b[7]-4*b[4]+2*b[4]*b[10]-2*b[10]+2*b[4]*b[18]-2*b[18]+2*b[4]*b[19]-4*b[19]+2*b[5]*b[8]-4*b[8]+2*b[5]*b[39]+2*b[6]*b[7]+2*b[6]*b[15]-4*b[15]+2*b[6]*b[99]+2*b[7]*b[11]-2*b[11]+2*b[8]*b[10]+2*b[8]*b[15]+2*b[8]*b[20]-4*b[20]+2*b[9]*b[23]-2*b[9]-2*b[23]+2*b[9]*b[64]-4*b[64]+2*b[10]*b[14]-2*b[14]-2*b[10]*b[100]+2*b[11]*b[20]+2*b[11]*b[27]-4*b[27]-2*b[11]*b[71]-2*b[71]+2*b[12]*b[20]-2*b[12]+2*b[12]*b[29]-4*b[29]-2*b[12]*b[99]+2*b[12]*b[104]+2*b[13]*b[18]-2*b[13]+2*b[13]*b[25]+2*b[14]*b[27]+2*b[14]*b[40]-2*b[40]-2*b[14]*b[51]-2*b[51]+2*b[15]*b[21]-4*b[21]+2*b[15]*b[75]-2*b[75]+2*b[16]*b[27]-4*b[16]+2*b[16]*b[29]+2*b[16]*b[43]-4*b[43]+2*b[16]*b[99]+2*b[17]*b[48]-2*b[17]-2*b[48]+2*b[17]*b[102]+2*b[18]*b[26]-2*b[18]*b[98]+2*b[19]*b[26]+2*b[19]*b[103]+2*b[19]*b[106]+2*b[20]*b[28]-2*b[28]+2*b[21]*b[40]+2*b[21]*b[43]+2*b[21]*b[54]-4*b[54]-2*b[22]*b[23]-2*b[22]+2*b[22]*b[47]-4*b[47]+2*b[22]*b[63]-2*b[63]+2*b[22]*b[107]+2*b[23]*b[24]-2*b[24]+2*b[23]*b[62]-4*b[62]+2*b[24]*b[63]+2*b[25]*b[105]-2*b[25]*b[112]-2*b[26]*b[114]+2*b[27]*b[42]-2*b[42]+2*b[28]*b[54]-2*b[28]*b[74]-2*b[74]+2*b[28]*b[76]-4*b[76]+2*b[29]*b[30]-2*b[30]+2*b[29]*b[78]-2*b[78]+2*b[30]*b[31]-4*b[31]+2*b[30]*b[76]-2*b[30]*b[80]+2*b[80]+2*b[31]*b[32]-2*b[32]+2*b[31]*b[78]+2*b[31]*b[90]+2*b[32]*b[61]-2*b[61]+2*b[32]*b[81]-2*b[81]-2*b[32]*b[107]+2*b[33]*b[35]-2*b[33]-2*b[35]+2*b[33]*b[60]-2*b[60]+2*b[33]*b[108]-2*b[33]*b[110]-2*b[34]*b[48]+2*b[34]+2*b[34]*b[87]-4*b[87]-2*b[34]*b[89]-2*b[34]*b[94]+2*b[35]*b[61]+2*b[35]*b[87]-2*b[35]*b[102]+2*b[36]*b[37]-2*b[36]-2*b[37]+2*b[36]*b[86]-4*b[86]-2*b[36]*b[108]+2*b[36]*b[109]+2*b[37]*b[87]-2*b[38]*b[105]-2*b[38]*b[106]-2*b[38]*b[116]+2*b[39]*b[41]-4*b[41]-2*b[39]*b[99]+2*b[40]*b[53]-4*b[53]-2*b[40]*b[73]-2*b[73]+2*b[41]*b[52]-2*b[52]+2*b[41]*b[53]+2*b[41]*b[75]+2*b[42]*b[44]-2*b[44]+2*b[42]*b[76]-2*b[42]*b[115]+2*b[43]*b[45]-2*b[45]+2*b[43]*b[56]+2*b[56]+2*b[44]*b[45]+2*b[44]*b[53]-2*b[44]*b[92]-2*b[45]*b[96]+2*b[45]*b[111]+2*b[46]*b[83]-2*b[46]-2*b[83]-2*b[46]*b[97]+2*b[46]*b[107]+2*b[46]*b[111]+2*b[47]*b[82]-2*b[82]+2*b[47]*b[85]-2*b[85]+2*b[47]*b[110]+2*b[48]*b[108]+2*b[48]*b[118]-2*b[49]*b[68]+2*b[49]-2*b[49]*b[117]-2*b[50]*b[66]+2*b[66]-2*b[50]*b[69]-2*b[69]-2*b[50]*b[103]+2*b[51]*b[69]+2*b[51]*b[72]-4*b[72]+2*b[51]*b[116]+2*b[52]*b[70]-4*b[70]-2*b[52]*b[114]+2*b[52]*b[115]+2*b[53]*b[55]-2*b[55]+2*b[54]*b[57]-4*b[57]+2*b[54]*b[101]+2*b[55]*b[57]+2*b[55]*b[92]-2*b[55]*b[120]-2*b[56]*b[59]-2*b[59]-2*b[56]*b[97]-2*b[56]*b[104]+2*b[57]*b[59]+2*b[57]*b[96]-2*b[58]*b[60]+2*b[58]-2*b[58]*b[92]+2*b[58]*b[95]-2*b[58]*b[101]+2*b[59]*b[60]+2*b[59]*b[110]+2*b[60]*b[94]+2*b[61]*b[62]-2*b[61]*b[91]+2*b[62]*b[64]+2*b[62]*b[94]+2*b[63]*b[65]-2*b[65]-2*b[63]*b[93]+2*b[64]*b[65]+2*b[64]*b[93]-2*b[66]*b[113]+2*b[67]*b[68]-2*b[67]+2*b[67]*b[113]-2*b[68]*b[100]+2*b[69]*b[71]+2*b[69]*b[117]+2*b[70]*b[73]+2*b[70]*b[112]+2*b[70]*b[116]+2*b[71]*b[73]+2*b[71]*b[100]+2*b[72]*b[74]+2*b[72]*b[114]+2*b[72]*b[115]+2*b[73]*b[74]+2*b[74]*b[120]+2*b[75]*b[77]-4*b[77]-2*b[75]*b[104]+2*b[76]*b[79]-4*b[79]+2*b[77]*b[78]+2*b[77]*b[79]+2*b[77]*b[120]-2*b[78]*b[81]+2*b[79]*b[80]+2*b[79]*b[81]-2*b[80]*b[82]-2*b[80]*b[90]+2*b[81]*b[82]+2*b[82]*b[84]-2*b[84]+2*b[83]*b[85]+2*b[83]*b[86]-2*b[83]*b[95]+2*b[84]*b[86]-2*b[84]*b[93]+2*b[84]*b[95]+2*b[85]*b[102]-2*b[85]*b[119]+2*b[86]*b[119]+2*b[87]*b[88]-2*b[88]+2*b[88]*b[119]+2*b[89]*b[90]-2*b[89]*b[91]+2*b[89]*b[93]-2*b[90]*b[94]+2*b[91]*b[96]+2*b[91]*b[97]+2*b[92]*b[97]-2*b[95]*b[96]+2*b[98]*b[117]+2*b[100]*b[113]+2*b[101]*b[104]-2*b[101]*b[111]-2*b[102]*b[109]-2*b[107]*b[108]-2*b[110]*b[111]-2*b[112]*b[113]+2*b[112]*b[114]-2*b[115]*b[120]-2*b[116]*b[117]-2*b[118]*b[119]+objvar <= 0.0)


# ----- Objective ----- #
@objective(m, Max, objvar)

m = m 		 # model get returned when including this script.