using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[216])
set_binary(b[230])
set_binary(b[300])
set_binary(b[15])
set_binary(b[228])
set_binary(b[176])
set_binary(b[133])
set_binary(b[271])
set_binary(b[45])
set_binary(b[169])
set_binary(b[196])
set_binary(b[180])
set_binary(b[178])
set_binary(b[232])
set_binary(b[208])
set_binary(b[64])
set_binary(b[112])
set_binary(b[21])
set_binary(b[36])
set_binary(b[243])
set_binary(b[130])
set_binary(b[282])
set_binary(b[87])
set_binary(b[132])
set_binary(b[291])
set_binary(b[211])
set_binary(b[270])
set_binary(b[119])
set_binary(b[79])
set_binary(b[213])
set_binary(b[264])
set_binary(b[16])
set_binary(b[60])
set_binary(b[159])
set_binary(b[275])
set_binary(b[12])
set_binary(b[227])
set_binary(b[197])
set_binary(b[235])
set_binary(b[11])
set_binary(b[19])
set_binary(b[286])
set_binary(b[3])
set_binary(b[193])
set_binary(b[39])
set_binary(b[4])
set_binary(b[37])
set_binary(b[88])
set_binary(b[50])
set_binary(b[192])
set_binary(b[209])
set_binary(b[97])
set_binary(b[262])
set_binary(b[200])
set_binary(b[188])
set_binary(b[62])
set_binary(b[113])
set_binary(b[278])
set_binary(b[24])
set_binary(b[10])
set_binary(b[218])
set_binary(b[220])
set_binary(b[236])
set_binary(b[162])
set_binary(b[161])
set_binary(b[276])
set_binary(b[224])
set_binary(b[199])
set_binary(b[252])
set_binary(b[75])
set_binary(b[128])
set_binary(b[167])
set_binary(b[177])
set_binary(b[295])
set_binary(b[70])
set_binary(b[163])
set_binary(b[269])
set_binary(b[285])
set_binary(b[289])
set_binary(b[41])
set_binary(b[48])
set_binary(b[274])
set_binary(b[23])
set_binary(b[242])
set_binary(b[28])
set_binary(b[143])
set_binary(b[90])
set_binary(b[206])
set_binary(b[229])
set_binary(b[233])
set_binary(b[84])
set_binary(b[53])
set_binary(b[116])
set_binary(b[299])
set_binary(b[255])
set_binary(b[29])
set_binary(b[61])
set_binary(b[223])
set_binary(b[89])
set_binary(b[34])
set_binary(b[145])
set_binary(b[86])
set_binary(b[256])
set_binary(b[114])
set_binary(b[281])
set_binary(b[260])
set_binary(b[153])
set_binary(b[13])
set_binary(b[69])
set_binary(b[144])
set_binary(b[68])
set_binary(b[240])
set_binary(b[244])
set_binary(b[166])
set_binary(b[246])
set_binary(b[47])
set_binary(b[214])
set_binary(b[138])
set_binary(b[226])
set_binary(b[151])
set_binary(b[135])
set_binary(b[108])
set_binary(b[154])
set_binary(b[76])
set_binary(b[109])
set_binary(b[297])
set_binary(b[174])
set_binary(b[259])
set_binary(b[292])
set_binary(b[237])
set_binary(b[155])
set_binary(b[94])
set_binary(b[149])
set_binary(b[107])
set_binary(b[181])
set_binary(b[52])
set_binary(b[139])
set_binary(b[277])
set_binary(b[131])
set_binary(b[241])
set_binary(b[38])
set_binary(b[71])
set_binary(b[78])
set_binary(b[215])
set_binary(b[66])
set_binary(b[80])
set_binary(b[160])
set_binary(b[49])
set_binary(b[137])
set_binary(b[185])
set_binary(b[105])
set_binary(b[164])
set_binary(b[124])
set_binary(b[54])
set_binary(b[111])
set_binary(b[22])
set_binary(b[170])
set_binary(b[239])
set_binary(b[98])
set_binary(b[280])
set_binary(b[257])
set_binary(b[219])
set_binary(b[186])
set_binary(b[77])
set_binary(b[254])
set_binary(b[273])
set_binary(b[172])
set_binary(b[46])
set_binary(b[127])
set_binary(b[56])
set_binary(b[104])
set_binary(b[171])
set_binary(b[221])
set_binary(b[74])
set_binary(b[32])
set_binary(b[248])
set_binary(b[92])
set_binary(b[72])
set_binary(b[126])
set_binary(b[5])
set_binary(b[129])
set_binary(b[238])
set_binary(b[190])
set_binary(b[234])
set_binary(b[212])
set_binary(b[268])
set_binary(b[125])
set_binary(b[14])
set_binary(b[184])
set_binary(b[43])
set_binary(b[110])
set_binary(b[231])
set_binary(b[25])
set_binary(b[183])
set_binary(b[9])
set_binary(b[117])
set_binary(b[290])
set_binary(b[195])
set_binary(b[83])
set_binary(b[279])
set_binary(b[59])
set_binary(b[204])
set_binary(b[67])
set_binary(b[284])
set_binary(b[272])
set_binary(b[175])
set_binary(b[222])
set_binary(b[296])
set_binary(b[93])
set_binary(b[99])
set_binary(b[198])
set_binary(b[146])
set_binary(b[123])
set_binary(b[187])
set_binary(b[202])
set_binary(b[122])
set_binary(b[250])
set_binary(b[121])
set_binary(b[157])
set_binary(b[147])
set_binary(b[201])
set_binary(b[258])
set_binary(b[156])
set_binary(b[26])
set_binary(b[73])
set_binary(b[217])
set_binary(b[266])
set_binary(b[118])
set_binary(b[44])
set_binary(b[158])
set_binary(b[120])
set_binary(b[85])
set_binary(b[251])
set_binary(b[267])
set_binary(b[82])
set_binary(b[42])
set_binary(b[168])
set_binary(b[106])
set_binary(b[207])
set_binary(b[81])
set_binary(b[225])
set_binary(b[141])
set_binary(b[136])
set_binary(b[298])
set_binary(b[150])
set_binary(b[203])
set_binary(b[95])
set_binary(b[115])
set_binary(b[189])
set_binary(b[8])
set_binary(b[33])
set_binary(b[30])
set_binary(b[173])
set_binary(b[40])
set_binary(b[249])
set_binary(b[58])
set_binary(b[96])
set_binary(b[57])
set_binary(b[293])
set_binary(b[102])
set_binary(b[245])
set_binary(b[247])
set_binary(b[51])
set_binary(b[2])
set_binary(b[100])
set_binary(b[142])
set_binary(b[288])
set_binary(b[20])
set_binary(b[7])
set_binary(b[65])
set_binary(b[205])
set_binary(b[265])
set_binary(b[165])
set_binary(b[210])
set_binary(b[101])
set_binary(b[253])
set_binary(b[283])
set_binary(b[17])
set_binary(b[6])
set_binary(b[182])
set_binary(b[1])
set_binary(b[179])
set_binary(b[191])
set_binary(b[194])
set_binary(b[134])
set_binary(b[261])
set_binary(b[27])
set_binary(b[18])
set_binary(b[140])
set_binary(b[31])
set_binary(b[294])
set_binary(b[91])
set_binary(b[152])
set_binary(b[103])
set_binary(b[55])
set_binary(b[287])
set_binary(b[148])
set_binary(b[63])
set_binary(b[263])


# ----- Constraints ----- #
@constraint(m, e1, b[1]+b[2]+b[3] == 1.0)
@constraint(m, e2, b[4]+b[5]+b[6] == 1.0)
@constraint(m, e3, b[7]+b[8]+b[9] == 1.0)
@constraint(m, e4, b[10]+b[11]+b[12] == 1.0)
@constraint(m, e5, b[13]+b[14]+b[15] == 1.0)
@constraint(m, e6, b[16]+b[17]+b[18] == 1.0)
@constraint(m, e7, b[19]+b[20]+b[21] == 1.0)
@constraint(m, e8, b[22]+b[23]+b[24] == 1.0)
@constraint(m, e9, b[25]+b[26]+b[27] == 1.0)
@constraint(m, e10, b[28]+b[29]+b[30] == 1.0)
@constraint(m, e11, b[31]+b[32]+b[33] == 1.0)
@constraint(m, e12, b[34]+b[35]+b[36] == 1.0)
@constraint(m, e13, b[37]+b[38]+b[39] == 1.0)
@constraint(m, e14, b[40]+b[41]+b[42] == 1.0)
@constraint(m, e15, b[43]+b[44]+b[45] == 1.0)
@constraint(m, e16, b[46]+b[47]+b[48] == 1.0)
@constraint(m, e17, b[49]+b[50]+b[51] == 1.0)
@constraint(m, e18, b[52]+b[53]+b[54] == 1.0)
@constraint(m, e19, b[55]+b[56]+b[57] == 1.0)
@constraint(m, e20, b[58]+b[59]+b[60] == 1.0)
@constraint(m, e21, b[61]+b[62]+b[63] == 1.0)
@constraint(m, e22, b[64]+b[65]+b[66] == 1.0)
@constraint(m, e23, b[67]+b[68]+b[69] == 1.0)
@constraint(m, e24, b[70]+b[71]+b[72] == 1.0)
@constraint(m, e25, b[73]+b[74]+b[75] == 1.0)
@constraint(m, e26, b[76]+b[77]+b[78] == 1.0)
@constraint(m, e27, b[79]+b[80]+b[81] == 1.0)
@constraint(m, e28, b[82]+b[83]+b[84] == 1.0)
@constraint(m, e29, b[85]+b[86]+b[87] == 1.0)
@constraint(m, e30, b[88]+b[89]+b[90] == 1.0)
@constraint(m, e31, b[91]+b[92]+b[93] == 1.0)
@constraint(m, e32, b[94]+b[95]+b[96] == 1.0)
@constraint(m, e33, b[97]+b[98]+b[99] == 1.0)
@constraint(m, e34, b[100]+b[101]+b[102] == 1.0)
@constraint(m, e35, b[103]+b[104]+b[105] == 1.0)
@constraint(m, e36, b[106]+b[107]+b[108] == 1.0)
@constraint(m, e37, b[109]+b[110]+b[111] == 1.0)
@constraint(m, e38, b[112]+b[113]+b[114] == 1.0)
@constraint(m, e39, b[115]+b[116]+b[117] == 1.0)
@constraint(m, e40, b[118]+b[119]+b[120] == 1.0)
@constraint(m, e41, b[121]+b[122]+b[123] == 1.0)
@constraint(m, e42, b[124]+b[125]+b[126] == 1.0)
@constraint(m, e43, b[127]+b[128]+b[129] == 1.0)
@constraint(m, e44, b[130]+b[131]+b[132] == 1.0)
@constraint(m, e45, b[133]+b[134]+b[135] == 1.0)
@constraint(m, e46, b[136]+b[137]+b[138] == 1.0)
@constraint(m, e47, b[139]+b[140]+b[141] == 1.0)
@constraint(m, e48, b[142]+b[143]+b[144] == 1.0)
@constraint(m, e49, b[145]+b[146]+b[147] == 1.0)
@constraint(m, e50, b[148]+b[149]+b[150] == 1.0)
@constraint(m, e51, b[151]+b[152]+b[153] == 1.0)
@constraint(m, e52, b[154]+b[155]+b[156] == 1.0)
@constraint(m, e53, b[157]+b[158]+b[159] == 1.0)
@constraint(m, e54, b[160]+b[161]+b[162] == 1.0)
@constraint(m, e55, b[163]+b[164]+b[165] == 1.0)
@constraint(m, e56, b[166]+b[167]+b[168] == 1.0)
@constraint(m, e57, b[169]+b[170]+b[171] == 1.0)
@constraint(m, e58, b[172]+b[173]+b[174] == 1.0)
@constraint(m, e59, b[175]+b[176]+b[177] == 1.0)
@constraint(m, e60, b[178]+b[179]+b[180] == 1.0)
@constraint(m, e61, b[181]+b[182]+b[183] == 1.0)
@constraint(m, e62, b[184]+b[185]+b[186] == 1.0)
@constraint(m, e63, b[187]+b[188]+b[189] == 1.0)
@constraint(m, e64, b[190]+b[191]+b[192] == 1.0)
@constraint(m, e65, b[193]+b[194]+b[195] == 1.0)
@constraint(m, e66, b[196]+b[197]+b[198] == 1.0)
@constraint(m, e67, b[199]+b[200]+b[201] == 1.0)
@constraint(m, e68, b[202]+b[203]+b[204] == 1.0)
@constraint(m, e69, b[205]+b[206]+b[207] == 1.0)
@constraint(m, e70, b[208]+b[209]+b[210] == 1.0)
@constraint(m, e71, b[211]+b[212]+b[213] == 1.0)
@constraint(m, e72, b[214]+b[215]+b[216] == 1.0)
@constraint(m, e73, b[217]+b[218]+b[219] == 1.0)
@constraint(m, e74, b[220]+b[221]+b[222] == 1.0)
@constraint(m, e75, b[223]+b[224]+b[225] == 1.0)
@constraint(m, e76, b[226]+b[227]+b[228] == 1.0)
@constraint(m, e77, b[229]+b[230]+b[231] == 1.0)
@constraint(m, e78, b[232]+b[233]+b[234] == 1.0)
@constraint(m, e79, b[235]+b[236]+b[237] == 1.0)
@constraint(m, e80, b[238]+b[239]+b[240] == 1.0)
@constraint(m, e81, b[241]+b[242]+b[243] == 1.0)
@constraint(m, e82, b[244]+b[245]+b[246] == 1.0)
@constraint(m, e83, b[247]+b[248]+b[249] == 1.0)
@constraint(m, e84, b[250]+b[251]+b[252] == 1.0)
@constraint(m, e85, b[253]+b[254]+b[255] == 1.0)
@constraint(m, e86, b[256]+b[257]+b[258] == 1.0)
@constraint(m, e87, b[259]+b[260]+b[261] == 1.0)
@constraint(m, e88, b[262]+b[263]+b[264] == 1.0)
@constraint(m, e89, b[265]+b[266]+b[267] == 1.0)
@constraint(m, e90, b[268]+b[269]+b[270] == 1.0)
@constraint(m, e91, b[271]+b[272]+b[273] == 1.0)
@constraint(m, e92, b[274]+b[275]+b[276] == 1.0)
@constraint(m, e93, b[277]+b[278]+b[279] == 1.0)
@constraint(m, e94, b[280]+b[281]+b[282] == 1.0)
@constraint(m, e95, b[283]+b[284]+b[285] == 1.0)
@constraint(m, e96, b[286]+b[287]+b[288] == 1.0)
@constraint(m, e97, b[289]+b[290]+b[291] == 1.0)
@constraint(m, e98, b[292]+b[293]+b[294] == 1.0)
@constraint(m, e99, b[295]+b[296]+b[297] == 1.0)
@constraint(m, e100, b[298]+b[299]+b[300] == 1.0)
@NLconstraint(m, e101, (-140500*b[1]*b[4])-6168*b[1]*b[28]+69805*b[1]*b[31]+99537*b[1]*b[271]-140500*b[2]*b[5]-6168*b[2]*b[29]+69805*b[2]*b[32]+99537*b[2]*b[272]-140500*b[3]*b[6]-6168*b[3]*b[30]+69805*b[3]*b[33]+99537*b[3]*b[273]+243172*b[4]*b[7]-106973*b[4]*b[34]-75892*b[4]*b[274]+243172*b[5]*b[8]-106973*b[5]*b[35]-75892*b[5]*b[275]+243172*b[6]*b[9]-106973*b[6]*b[36]-75892*b[6]*b[276]+57380*b[7]*b[10]-161384*b[7]*b[37]-31457*b[7]*b[277]+57380*b[8]*b[11]-161384*b[8]*b[38]-31457*b[8]*b[278]+57380*b[9]*b[12]-161384*b[9]*b[39]-31457*b[9]*b[279]+47389*b[10]*b[13]-130709*b[10]*b[40]-118141*b[10]*b[280]+47389*b[11]*b[14]-130709*b[11]*b[41]-118141*b[11]*b[281]+47389*b[12]*b[15]-130709*b[12]*b[42]-118141*b[12]*b[282]+8824*b[13]*b[16]+59639*b[13]*b[43]+77772*b[13]*b[283]+8824*b[14]*b[17]+59639*b[14]*b[44]+77772*b[14]*b[284]+8824*b[15]*b[18]+59639*b[15]*b[45]+77772*b[15]*b[285]+44460*b[16]*b[19]+16922*b[16]*b[46]+101315*b[16]*b[286]+44460*b[17]*b[20]+16922*b[17]*b[47]+101315*b[17]*b[287]+44460*b[18]*b[21]+16922*b[18]*b[48]+101315*b[18]*b[288]-16373*b[19]*b[22]-17220*b[19]*b[49]-22319*b[19]*b[289]-16373*b[20]*b[23]-17220*b[20]*b[50]-22319*b[20]*b[290]-16373*b[21]*b[24]-17220*b[21]*b[51]-22319*b[21]*b[291]+142391*b[22]*b[25]-32331*b[22]*b[52]+205481*b[22]*b[292]+142391*b[23]*b[26]-32331*b[23]*b[53]+205481*b[23]*b[293]+142391*b[24]*b[27]-32331*b[24]*b[54]+205481*b[24]*b[294]-67473*b[25]*b[28]-38478*b[25]*b[55]+12209*b[25]*b[295]-67473*b[26]*b[29]-38478*b[26]*b[56]+12209*b[26]*b[296]-67473*b[27]*b[30]-38478*b[27]*b[57]+12209*b[27]*b[297]+41199*b[28]*b[58]+88687*b[28]*b[298]+41199*b[29]*b[59]+88687*b[29]*b[299]+41199*b[30]*b[60]+88687*b[30]*b[300]-103914*b[31]*b[34]-78967*b[31]*b[58]-35106*b[31]*b[61]-103914*b[32]*b[35]-78967*b[32]*b[59]-35106*b[32]*b[62]-103914*b[33]*b[36]-78967*b[33]*b[60]-35106*b[33]*b[63]+126330*b[34]*b[37]+63341*b[34]*b[64]+126330*b[35]*b[38]+63341*b[35]*b[65]+126330*b[36]*b[39]+63341*b[36]*b[66]+179120*b[37]*b[40]-148919*b[37]*b[67]+179120*b[38]*b[41]-148919*b[38]*b[68]+179120*b[39]*b[42]-148919*b[39]*b[69]-79*b[40]*b[43]+57817*b[40]*b[70]-79*b[41]*b[44]+57817*b[41]*b[71]-79*b[42]*b[45]+57817*b[42]*b[72]-145504*b[43]*b[46]-25404*b[43]*b[73]-145504*b[44]*b[47]-25404*b[44]*b[74]-145504*b[45]*b[48]-25404*b[45]*b[75]+2643*b[46]*b[49]-94271*b[46]*b[76]+2643*b[47]*b[50]-94271*b[47]*b[77]+2643*b[48]*b[51]-94271*b[48]*b[78]-3237*b[49]*b[52]-113326*b[49]*b[79]-3237*b[50]*b[53]-113326*b[50]*b[80]-3237*b[51]*b[54]-113326*b[51]*b[81]-34448*b[52]*b[55]+70947*b[52]*b[82]-34448*b[53]*b[56]+70947*b[53]*b[83]-34448*b[54]*b[57]+70947*b[54]*b[84]+87914*b[55]*b[58]-194219*b[55]*b[85]+87914*b[56]*b[59]-194219*b[56]*b[86]+87914*b[57]*b[60]-194219*b[57]*b[87]+100179*b[58]*b[88]+100179*b[59]*b[89]+100179*b[60]*b[90]+113386*b[61]*b[64]+146383*b[61]*b[88]+95534*b[61]*b[91]+113386*b[62]*b[65]+146383*b[62]*b[89]+95534*b[62]*b[92]+113386*b[63]*b[66]+146383*b[63]*b[90]+95534*b[63]*b[93]-216283*b[64]*b[67]+132661*b[64]*b[94]-216283*b[65]*b[68]+132661*b[65]*b[95]-216283*b[66]*b[69]+132661*b[66]*b[96]+45184*b[67]*b[70]-161057*b[67]*b[97]+45184*b[68]*b[71]-161057*b[68]*b[98]+45184*b[69]*b[72]-161057*b[69]*b[99]+107039*b[70]*b[73]-41532*b[70]*b[100]+107039*b[71]*b[74]-41532*b[71]*b[101]+107039*b[72]*b[75]-41532*b[72]*b[102]-52792*b[73]*b[76]-16199*b[73]*b[103]-52792*b[74]*b[77]-16199*b[74]*b[104]-52792*b[75]*b[78]-16199*b[75]*b[105]-155271*b[76]*b[79]+119259*b[76]*b[106]-155271*b[77]*b[80]+119259*b[77]*b[107]-155271*b[78]*b[81]+119259*b[78]*b[108]-110981*b[79]*b[82]-78323*b[79]*b[109]-110981*b[80]*b[83]-78323*b[80]*b[110]-110981*b[81]*b[84]-78323*b[81]*b[111]+158177*b[82]*b[85]-43898*b[82]*b[112]+158177*b[83]*b[86]-43898*b[83]*b[113]+158177*b[84]*b[87]-43898*b[84]*b[114]-114367*b[85]*b[88]-213090*b[85]*b[115]-114367*b[86]*b[89]-213090*b[86]*b[116]-114367*b[87]*b[90]-213090*b[87]*b[117]+217366*b[88]*b[118]+217366*b[89]*b[119]+217366*b[90]*b[120]+51648*b[91]*b[94]+54470*b[91]*b[118]+103741*b[91]*b[121]+51648*b[92]*b[95]+54470*b[92]*b[119]+103741*b[92]*b[122]+51648*b[93]*b[96]+54470*b[93]*b[120]+103741*b[93]*b[123]-103486*b[94]*b[97]-25206*b[94]*b[124]-103486*b[95]*b[98]-25206*b[95]*b[125]-103486*b[96]*b[99]-25206*b[96]*b[126]-121719*b[97]*b[100]-189420*b[97]*b[127]-121719*b[98]*b[101]-189420*b[98]*b[128]-121719*b[99]*b[102]-189420*b[99]*b[129]-30445*b[100]*b[103]-31937*b[100]*b[130]-30445*b[101]*b[104]-31937*b[101]*b[131]-30445*b[102]*b[105]-31937*b[102]*b[132]-50463*b[103]*b[106]-122279*b[103]*b[133]-50463*b[104]*b[107]-122279*b[104]*b[134]-50463*b[105]*b[108]-122279*b[105]*b[135]-55487*b[106]*b[109]-4137*b[106]*b[136]-55487*b[107]*b[110]-4137*b[107]*b[137]-55487*b[108]*b[111]-4137*b[108]*b[138]+143431*b[109]*b[112]-44217*b[109]*b[139]+143431*b[110]*b[113]-44217*b[110]*b[140]+143431*b[111]*b[114]-44217*b[111]*b[141]+52272*b[112]*b[115]-45507*b[112]*b[142]+52272*b[113]*b[116]-45507*b[113]*b[143]+52272*b[114]*b[117]-45507*b[114]*b[144]-111550*b[115]*b[118]-58115*b[115]*b[145]-111550*b[116]*b[119]-58115*b[116]*b[146]-111550*b[117]*b[120]-58115*b[117]*b[147]+132392*b[118]*b[148]+132392*b[119]*b[149]+132392*b[120]*b[150]+120695*b[121]*b[124]+44324*b[121]*b[148]-93232*b[121]*b[151]+120695*b[122]*b[125]+44324*b[122]*b[149]-93232*b[122]*b[152]+120695*b[123]*b[126]+44324*b[123]*b[150]-93232*b[123]*b[153]+71125*b[124]*b[127]+71545*b[124]*b[154]+71125*b[125]*b[128]+71545*b[125]*b[155]+71125*b[126]*b[129]+71545*b[126]*b[156]+61420*b[127]*b[130]-75807*b[127]*b[157]+61420*b[128]*b[131]-75807*b[128]*b[158]+61420*b[129]*b[132]-75807*b[129]*b[159]+2350*b[130]*b[133]-50108*b[130]*b[160]+2350*b[131]*b[134]-50108*b[131]*b[161]+2350*b[132]*b[135]-50108*b[132]*b[162]-79469*b[133]*b[136]+162799*b[133]*b[163]-79469*b[134]*b[137]+162799*b[134]*b[164]-79469*b[135]*b[138]+162799*b[135]*b[165]-28158*b[136]*b[139]+108362*b[136]*b[166]-28158*b[137]*b[140]+108362*b[137]*b[167]-28158*b[138]*b[141]+108362*b[138]*b[168]+37422*b[139]*b[142]-155036*b[139]*b[169]+37422*b[140]*b[143]-155036*b[140]*b[170]+37422*b[141]*b[144]-155036*b[141]*b[171]-4442*b[142]*b[145]+57204*b[142]*b[172]-4442*b[143]*b[146]+57204*b[143]*b[173]-4442*b[144]*b[147]+57204*b[144]*b[174]-4297*b[145]*b[148]-80716*b[145]*b[175]-4297*b[146]*b[149]-80716*b[146]*b[176]-4297*b[147]*b[150]-80716*b[147]*b[177]+47830*b[148]*b[178]+47830*b[149]*b[179]+47830*b[150]*b[180]+63143*b[151]*b[154]-85053*b[151]*b[178]-81899*b[151]*b[181]+63143*b[152]*b[155]-85053*b[152]*b[179]-81899*b[152]*b[182]+63143*b[153]*b[156]-85053*b[153]*b[180]-81899*b[153]*b[183]+94887*b[154]*b[157]-93735*b[154]*b[184]+94887*b[155]*b[158]-93735*b[155]*b[185]+94887*b[156]*b[159]-93735*b[156]*b[186]+31709*b[157]*b[160]+37028*b[157]*b[187]+31709*b[158]*b[161]+37028*b[158]*b[188]+31709*b[159]*b[162]+37028*b[159]*b[189]+22317*b[160]*b[163]+221122*b[160]*b[190]+22317*b[161]*b[164]+221122*b[161]*b[191]+22317*b[162]*b[165]+221122*b[162]*b[192]-47890*b[163]*b[166]-24565*b[163]*b[193]-47890*b[164]*b[167]-24565*b[164]*b[194]-47890*b[165]*b[168]-24565*b[165]*b[195]+25735*b[166]*b[169]+92913*b[166]*b[196]+25735*b[167]*b[170]+92913*b[167]*b[197]+25735*b[168]*b[171]+92913*b[168]*b[198]+82226*b[169]*b[172]-46424*b[169]*b[199]+82226*b[170]*b[173]-46424*b[170]*b[200]+82226*b[171]*b[174]-46424*b[171]*b[201]+116524*b[172]*b[175]-59183*b[172]*b[202]+116524*b[173]*b[176]-59183*b[173]*b[203]+116524*b[174]*b[177]-59183*b[174]*b[204]+10300*b[175]*b[178]-12844*b[175]*b[205]+10300*b[176]*b[179]-12844*b[176]*b[206]+10300*b[177]*b[180]-12844*b[177]*b[207]-51909*b[178]*b[208]-51909*b[179]*b[209]-51909*b[180]*b[210]-120463*b[181]*b[184]+110062*b[181]*b[208]+58801*b[181]*b[211]-120463*b[182]*b[185]+110062*b[182]*b[209]+58801*b[182]*b[212]-120463*b[183]*b[186]+110062*b[183]*b[210]+58801*b[183]*b[213]-108142*b[184]*b[187]-210930*b[184]*b[214]-108142*b[185]*b[188]-210930*b[185]*b[215]-108142*b[186]*b[189]-210930*b[186]*b[216]+145601*b[187]*b[190]+104550*b[187]*b[217]+145601*b[188]*b[191]+104550*b[188]*b[218]+145601*b[189]*b[192]+104550*b[189]*b[219]+231665*b[190]*b[193]+51705*b[190]*b[220]+231665*b[191]*b[194]+51705*b[191]*b[221]+231665*b[192]*b[195]+51705*b[192]*b[222]-49380*b[193]*b[196]+21233*b[193]*b[223]-49380*b[194]*b[197]+21233*b[194]*b[224]-49380*b[195]*b[198]+21233*b[195]*b[225]+61670*b[196]*b[199]-101100*b[196]*b[226]+61670*b[197]*b[200]-101100*b[197]*b[227]+61670*b[198]*b[201]-101100*b[198]*b[228]+66074*b[199]*b[202]-103726*b[199]*b[229]+66074*b[200]*b[203]-103726*b[200]*b[230]+66074*b[201]*b[204]-103726*b[201]*b[231]+23275*b[202]*b[205]-239558*b[202]*b[232]+23275*b[203]*b[206]-239558*b[203]*b[233]+23275*b[204]*b[207]-239558*b[204]*b[234]-144999*b[205]*b[208]+30889*b[205]*b[235]-144999*b[206]*b[209]+30889*b[206]*b[236]-144999*b[207]*b[210]+30889*b[207]*b[237]-65255*b[208]*b[238]-65255*b[209]*b[239]-65255*b[210]*b[240]-208953*b[211]*b[214]+11477*b[211]*b[238]+268429*b[211]*b[241]-208953*b[212]*b[215]+11477*b[212]*b[239]+268429*b[212]*b[242]-208953*b[213]*b[216]+11477*b[213]*b[240]+268429*b[213]*b[243]+26984*b[214]*b[217]-170553*b[214]*b[244]+26984*b[215]*b[218]-170553*b[215]*b[245]+26984*b[216]*b[219]-170553*b[216]*b[246]+69156*b[217]*b[220]+44984*b[217]*b[247]+69156*b[218]*b[221]+44984*b[218]*b[248]+69156*b[219]*b[222]+44984*b[219]*b[249]-23255*b[220]*b[223]-5961*b[220]*b[250]-23255*b[221]*b[224]-5961*b[221]*b[251]-23255*b[222]*b[225]-5961*b[222]*b[252]+71643*b[223]*b[226]+57314*b[223]*b[253]+71643*b[224]*b[227]+57314*b[224]*b[254]+71643*b[225]*b[228]+57314*b[225]*b[255]+18626*b[226]*b[229]+243235*b[226]*b[256]+18626*b[227]*b[230]+243235*b[227]*b[257]+18626*b[228]*b[231]+243235*b[228]*b[258]-32740*b[229]*b[232]-41971*b[229]*b[259]-32740*b[230]*b[233]-41971*b[230]*b[260]-32740*b[231]*b[234]-41971*b[231]*b[261]+59354*b[232]*b[235]+63438*b[232]*b[262]+59354*b[233]*b[236]+63438*b[233]*b[263]+59354*b[234]*b[237]+63438*b[234]*b[264]+2745*b[235]*b[238]+1963*b[235]*b[265]+2745*b[236]*b[239]+1963*b[236]*b[266]+2745*b[237]*b[240]+1963*b[237]*b[267]+19196*b[238]*b[268]+19196*b[239]*b[269]+19196*b[240]*b[270]+29280*b[241]*b[244]+9212*b[241]*b[268]+152008*b[241]*b[271]+29280*b[242]*b[245]+9212*b[242]*b[269]+152008*b[242]*b[272]+29280*b[243]*b[246]+9212*b[243]*b[270]+152008*b[243]*b[273]+37618*b[244]*b[247]+6449*b[244]*b[274]+37618*b[245]*b[248]+6449*b[245]*b[275]+37618*b[246]*b[249]+6449*b[246]*b[276]+101612*b[247]*b[250]-104102*b[247]*b[277]+101612*b[248]*b[251]-104102*b[248]*b[278]+101612*b[249]*b[252]-104102*b[249]*b[279]+33724*b[250]*b[253]+126817*b[250]*b[280]+33724*b[251]*b[254]+126817*b[251]*b[281]+33724*b[252]*b[255]+126817*b[252]*b[282]+72754*b[253]*b[256]-17622*b[253]*b[283]+72754*b[254]*b[257]-17622*b[254]*b[284]+72754*b[255]*b[258]-17622*b[255]*b[285]+73668*b[256]*b[259]+161048*b[256]*b[286]+73668*b[257]*b[260]+161048*b[257]*b[287]+73668*b[258]*b[261]+161048*b[258]*b[288]-55290*b[259]*b[262]+69537*b[259]*b[289]-55290*b[260]*b[263]+69537*b[260]*b[290]-55290*b[261]*b[264]+69537*b[261]*b[291]-142640*b[262]*b[265]+50161*b[262]*b[292]-142640*b[263]*b[266]+50161*b[263]*b[293]-142640*b[264]*b[267]+50161*b[264]*b[294]+115122*b[265]*b[268]+209308*b[265]*b[295]+115122*b[266]*b[269]+209308*b[266]*b[296]+115122*b[267]*b[270]+209308*b[267]*b[297]-89633*b[268]*b[298]-89633*b[269]*b[299]-89633*b[270]*b[300]+85472*b[271]*b[274]-65488*b[271]*b[298]+85472*b[272]*b[275]-65488*b[272]*b[299]+85472*b[273]*b[276]-65488*b[273]*b[300]-97644*b[274]*b[277]-97644*b[275]*b[278]-97644*b[276]*b[279]-22383*b[277]*b[280]-22383*b[278]*b[281]-22383*b[279]*b[282]+39505*b[280]*b[283]+39505*b[281]*b[284]+39505*b[282]*b[285]-26866*b[283]*b[286]-26866*b[284]*b[287]-26866*b[285]*b[288]-104695*b[286]*b[289]-104695*b[287]*b[290]-104695*b[288]*b[291]-118676*b[289]*b[292]-118676*b[290]*b[293]-118676*b[291]*b[294]-80157*b[292]*b[295]-80157*b[293]*b[296]-80157*b[294]*b[297]-29119*b[295]*b[298]-29119*b[296]*b[299]-29119*b[297]*b[300]-objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.