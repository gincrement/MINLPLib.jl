using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
@variable(m, x[x_Idx])
set_lower_bound(x[1], 0.9571)
set_upper_bound(x[1], 1.0171)
set_lower_bound(x[2], 0.8606)
set_upper_bound(x[2], 0.9206)
set_lower_bound(x[3], 0.0857)
set_upper_bound(x[3], 0.1457)
set_lower_bound(x[4], 544.47)
set_upper_bound(x[4], 550.47)
set_lower_bound(x[5], 660.48)
set_upper_bound(x[5], 666.48)
set_lower_bound(x[6], 0.9703)
set_upper_bound(x[6], 1.0303)
set_lower_bound(x[7], 0.805)
set_upper_bound(x[7], 0.865)
set_lower_bound(x[8], 0.108)
set_upper_bound(x[8], 0.168)
set_lower_bound(x[9], 528.77)
set_upper_bound(x[9], 534.77)
set_lower_bound(x[10], 673.04)
set_upper_bound(x[10], 679.04)
set_lower_bound(x[11], 0.9739)
set_upper_bound(x[11], 1.0339)
set_lower_bound(x[12], 0.7955)
set_upper_bound(x[12], 0.8555)
set_lower_bound(x[13], 0.155)
set_upper_bound(x[13], 0.215)
set_lower_bound(x[14], 509.21)
set_upper_bound(x[14], 515.21)
set_lower_bound(x[15], 681.81)
set_upper_bound(x[15], 687.81)
set_lower_bound(x[16], 0.946)
set_upper_bound(x[16], 1.006)
set_lower_bound(x[17], 0.772)
set_upper_bound(x[17], 0.832)
set_lower_bound(x[18], 0.1705)
set_upper_bound(x[18], 0.2305)
set_lower_bound(x[19], 487.59)
set_upper_bound(x[19], 493.59)
set_lower_bound(x[20], 692.47)
set_upper_bound(x[20], 698.47)
set_lower_bound(x[21], 0.9829)
set_upper_bound(x[21], 1.0429)
set_lower_bound(x[22], 0.722)
set_upper_bound(x[22], 0.782)
set_lower_bound(x[23], 0.212)
set_upper_bound(x[23], 0.272)
set_lower_bound(x[24], 461.67)
set_upper_bound(x[24], 467.67)
set_lower_bound(x[25], 700.69)
set_upper_bound(x[25], 706.69)
set_lower_bound(x[26], 0.9783)
set_upper_bound(x[26], 1.0383)
set_lower_bound(x[27], 0.6893)
set_upper_bound(x[27], 0.7493)
set_lower_bound(x[28], 0.2439)
set_upper_bound(x[28], 0.3039)
set_lower_bound(x[29], 435.47)
set_upper_bound(x[29], 441.47)
set_lower_bound(x[30], 711.9)
set_upper_bound(x[30], 717.9)
set_lower_bound(x[31], 0.9775)
set_upper_bound(x[31], 1.0375)
set_lower_bound(x[32], 0.6561)
set_upper_bound(x[32], 0.7161)
set_lower_bound(x[33], 0.2915)
set_upper_bound(x[33], 0.3515)
set_lower_bound(x[34], 405.04)
set_upper_bound(x[34], 411.04)
set_lower_bound(x[35], 723.09)
set_upper_bound(x[35], 729.09)
set_lower_bound(x[36], 0.9694)
set_upper_bound(x[36], 1.0294)
set_lower_bound(x[37], 0.6088)
set_upper_bound(x[37], 0.6688)
set_lower_bound(x[38], 0.3441)
set_upper_bound(x[38], 0.4041)
set_lower_bound(x[39], 372.56)
set_upper_bound(x[39], 378.56)
set_lower_bound(x[40], 732.44)
set_upper_bound(x[40], 738.44)
set_lower_bound(x[41], 0.9707)
set_upper_bound(x[41], 1.0307)
set_lower_bound(x[42], 0.567)
set_upper_bound(x[42], 0.627)
set_lower_bound(x[43], 0.3626)
set_upper_bound(x[43], 0.4226)
set_lower_bound(x[44], 337.26)
set_upper_bound(x[44], 343.26)
set_lower_bound(x[45], 742.7)
set_upper_bound(x[45], 748.7)
set_lower_bound(x[46], 0.9673)
set_upper_bound(x[46], 1.0273)
set_lower_bound(x[47], 0.528)
set_upper_bound(x[47], 0.588)
set_lower_bound(x[48], 0.4403)
set_upper_bound(x[48], 0.5003)
set_lower_bound(x[49], 303.55)
set_upper_bound(x[49], 309.55)
set_lower_bound(x[50], 750.94)
set_upper_bound(x[50], 756.94)
set_lower_bound(x[51], 0.0001)
set_upper_bound(x[51], 0.1)
set_lower_bound(x[52], 5.0)
set_upper_bound(x[52], 15.0)


# ----- Constraints ----- #
@NLconstraint(m, e1, -( ((-98.71)+100*x[1])^2+ ((-89.06)+100*x[2])^2+ ((-11.57)+100*x[3])^2+ ((-547.47)+x[4])^2+ ((-663.48)+x[5])^2+ ((-100.03)+100*x[6])^2+ ((-83.5)+100*x[7])^2+ ((-13.8)+100*x[8])^2+ ((-531.77)+x[9])^2+ ((-676.04)+x[10])^2+ ((-100.39)+100*x[11])^2+ ((-82.55)+100*x[12])^2+ ((-18.5)+100*x[13])^2+ ((-512.21)+x[14])^2+ ((-684.81)+x[15])^2+ ((-97.6)+100*x[16])^2+ ((-80.2)+100*x[17])^2+ ((-20.05)+100*x[18])^2+ ((-490.59)+x[19])^2+ ((-695.47)+x[20])^2+ ((-101.29)+100*x[21])^2+ ((-75.2)+100*x[22])^2+ ((-24.2)+100*x[23])^2+ ((-464.67)+x[24])^2+ ((-703.69)+x[25])^2+ ((-100.83)+100*x[26])^2+ ((-71.93)+100*x[27])^2+ ((-27.39)+100*x[28])^2+ ((-438.47)+x[29])^2+ ((-714.9)+x[30])^2+ ((-100.75)+100*x[31])^2+ ((-68.61)+100*x[32])^2+ ((-32.15)+100*x[33])^2+ ((-408.04)+x[34])^2+ ((-726.09)+x[35])^2+ ((-99.94)+100*x[36])^2+ ((-63.88)+100*x[37])^2+ ((-37.41)+100*x[38])^2+ ((-375.56)+x[39])^2+ ((-735.44)+x[40])^2+ ((-100.07)+100*x[41])^2+ ((-59.7)+100*x[42])^2+ ((-39.26)+100*x[43])^2+ ((-340.26)+x[44])^2+ ((-745.7)+x[45])^2+ ((-99.73)+100*x[46])^2+ ((-55.8)+100*x[47])^2+ ((-47.03)+100*x[48])^2+ ((-306.55)+x[49])^2+ ((-753.94)+x[50])^2)+objvar == 0.0)
@NLconstraint(m, e2, (-x[53]*x[2])-0.01*x[2]+0.01*x[1] == 0.0)
@NLconstraint(m, e3, (-x[54]*x[7])-0.01*x[7]+0.01*x[6] == 0.0)
@NLconstraint(m, e4, (-x[55]*x[12])-0.01*x[12]+0.01*x[11] == 0.0)
@NLconstraint(m, e5, (-x[56]*x[17])-0.01*x[17]+0.01*x[16] == 0.0)
@NLconstraint(m, e6, (-x[57]*x[22])-0.01*x[22]+0.01*x[21] == 0.0)
@NLconstraint(m, e7, (-x[58]*x[27])-0.01*x[27]+0.01*x[26] == 0.0)
@NLconstraint(m, e8, (-x[59]*x[32])-0.01*x[32]+0.01*x[31] == 0.0)
@NLconstraint(m, e9, (-x[60]*x[37])-0.01*x[37]+0.01*x[36] == 0.0)
@NLconstraint(m, e10, (-x[61]*x[42])-0.01*x[42]+0.01*x[41] == 0.0)
@NLconstraint(m, e11, (-x[62]*x[47])-0.01*x[47]+0.01*x[46] == 0.0)
@NLconstraint(m, e12, x[53]*x[2]-0.01*x[3] == 0.0)
@NLconstraint(m, e13, x[54]*x[7]-0.01*x[8] == 0.0)
@NLconstraint(m, e14, x[55]*x[12]-0.01*x[13] == 0.0)
@NLconstraint(m, e15, x[56]*x[17]-0.01*x[18] == 0.0)
@NLconstraint(m, e16, x[57]*x[22]-0.01*x[23] == 0.0)
@NLconstraint(m, e17, x[58]*x[27]-0.01*x[28] == 0.0)
@NLconstraint(m, e18, x[59]*x[32]-0.01*x[33] == 0.0)
@NLconstraint(m, e19, x[60]*x[37]-0.01*x[38] == 0.0)
@NLconstraint(m, e20, x[61]*x[42]-0.01*x[43] == 0.0)
@NLconstraint(m, e21, x[62]*x[47]-0.01*x[48] == 0.0)
@NLconstraint(m, e22, 1000*x[53]*x[2]+0.01*x[4]-0.01*x[5] == 0.0)
@NLconstraint(m, e23, 1000*x[54]*x[7]+0.01*x[9]-0.01*x[10] == 0.0)
@NLconstraint(m, e24, 1000*x[55]*x[12]+0.01*x[14]-0.01*x[15] == 0.0)
@NLconstraint(m, e25, 1000*x[56]*x[17]+0.01*x[19]-0.01*x[20] == 0.0)
@NLconstraint(m, e26, 1000*x[57]*x[22]+0.01*x[24]-0.01*x[25] == 0.0)
@NLconstraint(m, e27, 1000*x[58]*x[27]+0.01*x[29]-0.01*x[30] == 0.0)
@NLconstraint(m, e28, 1000*x[59]*x[32]+0.01*x[34]-0.01*x[35] == 0.0)
@NLconstraint(m, e29, 1000*x[60]*x[37]+0.01*x[39]-0.01*x[40] == 0.0)
@NLconstraint(m, e30, 1000*x[61]*x[42]+0.01*x[44]-0.01*x[45] == 0.0)
@NLconstraint(m, e31, 1000*x[62]*x[47]+0.01*x[49]-0.01*x[50] == 0.0)
@NLconstraint(m, e32, exp(-(-1+800/x[5])*x[52])*x[51]-x[53] == 0.0)
@NLconstraint(m, e33, exp(-(-1+800/x[10])*x[52])*x[51]-x[54] == 0.0)
@NLconstraint(m, e34, exp(-(-1+800/x[15])*x[52])*x[51]-x[55] == 0.0)
@NLconstraint(m, e35, exp(-(-1+800/x[20])*x[52])*x[51]-x[56] == 0.0)
@NLconstraint(m, e36, exp(-(-1+800/x[25])*x[52])*x[51]-x[57] == 0.0)
@NLconstraint(m, e37, exp(-(-1+800/x[30])*x[52])*x[51]-x[58] == 0.0)
@NLconstraint(m, e38, exp(-(-1+800/x[35])*x[52])*x[51]-x[59] == 0.0)
@NLconstraint(m, e39, exp(-(-1+800/x[40])*x[52])*x[51]-x[60] == 0.0)
@NLconstraint(m, e40, exp(-(-1+800/x[45])*x[52])*x[51]-x[61] == 0.0)
@NLconstraint(m, e41, exp(-(-1+800/x[50])*x[52])*x[51]-x[62] == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.