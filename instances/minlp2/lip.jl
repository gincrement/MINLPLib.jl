using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]
@variable(m, b[b_Idx])
x_Idx = Any[53, 54, 55, 56, 57, 58, 59, 60]
@variable(m, x[x_Idx])
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_binary(b[15])
set_lower_bound(x[56], 0.0)
set_binary(b[42])
set_lower_bound(x[59], 0.0)
set_binary(b[49])
set_binary(b[45])
set_binary(b[41])
set_binary(b[48])
set_binary(b[23])
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_binary(b[22])
set_lower_bound(x[54], 0.0)
set_binary(b[46])
set_lower_bound(x[58], 0.0)
set_binary(b[8])
set_binary(b[33])
set_binary(b[30])
set_lower_bound(x[53], 0.0)
set_binary(b[29])
set_binary(b[40])
set_lower_bound(x[57], 0.0)
set_lower_bound(x[55], 0.0)
set_binary(b[32])
set_binary(b[34])
set_binary(b[5])
set_binary(b[16])
set_binary(b[13])
set_binary(b[51])
set_binary(b[12])
set_binary(b[2])
set_binary(b[14])
set_binary(b[20])
set_binary(b[43])
set_binary(b[11])
set_binary(b[19])
set_binary(b[47])
set_binary(b[25])
set_binary(b[7])
set_binary(b[9])
set_binary(b[3])
set_binary(b[17])
set_binary(b[39])
set_binary(b[4])
set_binary(b[6])
set_binary(b[1])
set_binary(b[37])
set_binary(b[50])
set_binary(b[27])
set_binary(b[18])
set_lower_bound(x[60], 0.0)
set_binary(b[31])
set_binary(b[52])
set_binary(b[24])
set_binary(b[10])
set_binary(b[26])


# ----- Constraints ----- #
@constraint(m, e1, b[49]+b[50]+b[51]+b[52] >= 1.0)
@constraint(m, e2, b[1]+b[3]+b[5]+b[7] == 1.0)
@constraint(m, e3, b[2]+b[4]+b[6]+b[8] == 1.0)
@constraint(m, e4, b[9]+b[11]+b[13]+b[15] == 1.0)
@constraint(m, e5, b[10]+b[12]+b[14]+b[16] == 1.0)
@constraint(m, e6, b[17]+b[19]+b[21]+b[23] == 1.0)
@constraint(m, e7, b[18]+b[20]+b[22]+b[24] == 1.0)
@constraint(m, e8, b[25]+b[27]+b[29]+b[31] == 1.0)
@constraint(m, e9, b[26]+b[28]+b[30]+b[32] == 1.0)
@constraint(m, e10, b[33]+b[35]+b[37]+b[39] == 1.0)
@constraint(m, e11, b[34]+b[36]+b[38]+b[40] == 1.0)
@constraint(m, e12, b[41]+b[43]+b[45]+b[47] == 1.0)
@constraint(m, e13, b[42]+b[44]+b[46]+b[48] == 1.0)
@constraint(m, e14, b[1]-b[49] <= 0.0)
@constraint(m, e15, b[2]-b[49] <= 0.0)
@constraint(m, e16, b[3]-b[50] <= 0.0)
@constraint(m, e17, b[4]-b[50] <= 0.0)
@constraint(m, e18, b[5]-b[51] <= 0.0)
@constraint(m, e19, b[6]-b[51] <= 0.0)
@constraint(m, e20, b[7]-b[52] <= 0.0)
@constraint(m, e21, b[8]-b[52] <= 0.0)
@constraint(m, e22, b[9]-b[49] <= 0.0)
@constraint(m, e23, b[10]-b[49] <= 0.0)
@constraint(m, e24, b[11]-b[50] <= 0.0)
@constraint(m, e25, b[12]-b[50] <= 0.0)
@constraint(m, e26, b[13]-b[51] <= 0.0)
@constraint(m, e27, b[14]-b[51] <= 0.0)
@constraint(m, e28, b[15]-b[52] <= 0.0)
@constraint(m, e29, b[16]-b[52] <= 0.0)
@constraint(m, e30, b[17]-b[49] <= 0.0)
@constraint(m, e31, b[18]-b[49] <= 0.0)
@constraint(m, e32, b[19]-b[50] <= 0.0)
@constraint(m, e33, b[20]-b[50] <= 0.0)
@constraint(m, e34, b[21]-b[51] <= 0.0)
@constraint(m, e35, b[22]-b[51] <= 0.0)
@constraint(m, e36, b[23]-b[52] <= 0.0)
@constraint(m, e37, b[24]-b[52] <= 0.0)
@constraint(m, e38, b[25]-b[49] <= 0.0)
@constraint(m, e39, b[26]-b[49] <= 0.0)
@constraint(m, e40, b[27]-b[50] <= 0.0)
@constraint(m, e41, b[28]-b[50] <= 0.0)
@constraint(m, e42, b[29]-b[51] <= 0.0)
@constraint(m, e43, b[30]-b[51] <= 0.0)
@constraint(m, e44, b[31]-b[52] <= 0.0)
@constraint(m, e45, b[32]-b[52] <= 0.0)
@constraint(m, e46, b[33]-b[49] <= 0.0)
@constraint(m, e47, b[34]-b[49] <= 0.0)
@constraint(m, e48, b[35]-b[50] <= 0.0)
@constraint(m, e49, b[36]-b[50] <= 0.0)
@constraint(m, e50, b[37]-b[51] <= 0.0)
@constraint(m, e51, b[38]-b[51] <= 0.0)
@constraint(m, e52, b[39]-b[52] <= 0.0)
@constraint(m, e53, b[40]-b[52] <= 0.0)
@constraint(m, e54, b[41]-b[49] <= 0.0)
@constraint(m, e55, b[42]-b[49] <= 0.0)
@constraint(m, e56, b[43]-b[50] <= 0.0)
@constraint(m, e57, b[44]-b[50] <= 0.0)
@constraint(m, e58, b[45]-b[51] <= 0.0)
@constraint(m, e59, b[46]-b[51] <= 0.0)
@constraint(m, e60, b[47]-b[52] <= 0.0)
@constraint(m, e61, b[48]-b[52] <= 0.0)
@constraint(m, e62, b[1]+b[9]+b[17]+b[25]+b[33]+b[41]-b[49] >= 0.0)
@constraint(m, e63, b[2]+b[10]+b[18]+b[26]+b[34]+b[42]-b[49] >= 0.0)
@constraint(m, e64, b[3]+b[11]+b[19]+b[27]+b[35]+b[43]-b[50] >= 0.0)
@constraint(m, e65, b[4]+b[12]+b[20]+b[28]+b[36]+b[44]-b[50] >= 0.0)
@constraint(m, e66, b[5]+b[13]+b[21]+b[29]+b[37]+b[45]-b[51] >= 0.0)
@constraint(m, e67, b[6]+b[14]+b[22]+b[30]+b[38]+b[46]-b[51] >= 0.0)
@constraint(m, e68, b[7]+b[15]+b[23]+b[31]+b[39]+b[47]-b[52] >= 0.0)
@constraint(m, e69, b[8]+b[16]+b[24]+b[32]+b[40]+b[48]-b[52] >= 0.0)
@constraint(m, e70, -5000*b[49]+x[53]+x[54] <= 0.0)
@constraint(m, e71, -3000*b[50]+x[55]+x[56] <= 0.0)
@constraint(m, e72, -3000*b[51]+x[57]+x[58] <= 0.0)
@constraint(m, e73, -2000*b[52]+x[59]+x[60] <= 0.0)
@constraint(m, e74, x[53]+x[55]+x[57]+x[59] == 6000.0)
@constraint(m, e75, x[54]+x[56]+x[58]+x[60] == 4800.0)
@constraint(m, e76, -1000*b[1]-1000*b[9]-1000*b[17]-1000*b[25]-1000*b[33]-1000*b[41]+x[53] >= 0.0)
@constraint(m, e77, -800*b[2]-800*b[10]-800*b[18]-800*b[26]-800*b[34]-800*b[42]+x[54] >= 0.0)
@constraint(m, e78, -1000*b[3]-1000*b[11]-1000*b[19]-1000*b[27]-1000*b[35]-1000*b[43]+x[55] >= 0.0)
@constraint(m, e79, -800*b[4]-800*b[12]-800*b[20]-800*b[28]-800*b[36]-800*b[44]+x[56] >= 0.0)
@constraint(m, e80, -1000*b[5]-1000*b[13]-1000*b[21]-1000*b[29]-1000*b[37]-1000*b[45]+x[57] >= 0.0)
@constraint(m, e81, -800*b[6]-800*b[14]-800*b[22]-800*b[30]-800*b[38]-800*b[46]+x[58] >= 0.0)
@constraint(m, e82, -1000*b[7]-1000*b[15]-1000*b[23]-1000*b[31]-1000*b[39]-1000*b[47]+x[59] >= 0.0)
@constraint(m, e83, -800*b[8]-800*b[16]-800*b[24]-800*b[32]-800*b[40]-800*b[48]+x[60] >= 0.0)
@NLconstraint(m, e84, 39.2*((25*b[1]+25*b[2]+25*b[9]+25*b[10]+25*b[17]+25*b[18]+25*b[25]+25*b[26]+25*b[33]+25*b[34]+25*b[41]+25*b[42])^0.5+(25*b[3]+25*b[4]+25*b[11]+25*b[12]+25*b[19]+25*b[20]+25*b[27]+25*b[28]+25*b[35]+25*b[36]+25*b[43]+25*b[44])^0.5+(25*b[5]+25*b[6]+25*b[13]+25*b[14]+25*b[21]+25*b[22]+25*b[29]+25*b[30]+25*b[37]+25*b[38]+25*b[45]+25*b[46])^0.5+(25*b[7]+25*b[8]+25*b[15]+25*b[16]+25*b[23]+25*b[24]+25*b[31]+25*b[32]+25*b[39]+25*b[40]+25*b[47]+25*b[48])^0.5)-300000*b[1]-800000*b[2]-300000*b[3]-800000*b[4]-300000*b[5]-800000*b[6]-300000*b[7]-800000*b[8]-300000*b[9]-800000*b[10]-300000*b[11]-800000*b[12]-300000*b[13]-800000*b[14]-300000*b[15]-800000*b[16]-300000*b[17]-800000*b[18]-300000*b[19]-800000*b[20]-300000*b[21]-800000*b[22]-300000*b[23]-800000*b[24]-300000*b[25]-800000*b[26]-300000*b[27]-800000*b[28]-300000*b[29]-800000*b[30]-300000*b[31]-800000*b[32]-300000*b[33]-800000*b[34]-300000*b[35]-800000*b[36]-300000*b[37]-800000*b[38]-300000*b[39]-800000*b[40]-300000*b[41]-800000*b[42]-300000*b[43]-800000*b[44]-300000*b[45]-800000*b[46]-300000*b[47]-800000*b[48]+100000*b[1]+100000*b[9]+100000*b[17]+100000*b[25]+100000*b[33]+100000*b[41]+400000*b[2]+400000*b[10]+400000*b[18]+400000*b[26]+400000*b[34]+400000*b[42]+100000*b[3]+100000*b[11]+100000*b[19]+100000*b[27]+100000*b[35]+100000*b[43]+400000*b[4]+400000*b[12]+400000*b[20]+400000*b[28]+400000*b[36]+400000*b[44]+100000*b[5]+100000*b[13]+100000*b[21]+100000*b[29]+100000*b[37]+100000*b[45]+400000*b[6]+400000*b[14]+400000*b[22]+400000*b[30]+400000*b[38]+400000*b[46]+100000*b[7]+100000*b[15]+100000*b[23]+100000*b[31]+100000*b[39]+100000*b[47]+400000*b[8]+400000*b[16]+400000*b[24]+400000*b[32]+400000*b[40]+400000*b[48]+4000*b[1]+3200*b[2]+8000*b[9]+6400*b[10]+8000*b[17]+6400*b[18]+16000*b[25]+12800*b[26]+16000*b[33]+12800*b[34]+32000*b[41]+25600*b[42]+8000*b[3]+6400*b[4]+4000*b[11]+3200*b[12]+16000*b[19]+12800*b[20]+24000*b[27]+19200*b[28]+8000*b[35]+6400*b[36]+24000*b[43]+19200*b[44]+16000*b[5]+12800*b[6]+24000*b[13]+19200*b[14]+4000*b[21]+3200*b[22]+4000*b[29]+3200*b[30]+16000*b[37]+12800*b[38]+16000*b[45]+12800*b[46]+200000*b[7]+160000*b[8]+200000*b[15]+160000*b[16]+150000*b[23]+120000*b[24]+50000*b[31]+40000*b[32]+100000*b[39]+80000*b[40]+25000*b[47]+20000*b[48]+80000*b[49]+80000*b[50]+80000*b[51]+80000*b[52]-55*x[53]-455*x[54]-50*x[55]-450*x[56]-55*x[57]-455*x[58]-55*x[59]-455*x[60]+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Max, objvar)

m = m 		 # model get returned when including this script.