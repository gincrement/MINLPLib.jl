using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
@variable(m, x[x_Idx])
i_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
@variable(m, i[i_Idx])
set_integer(i[8])
set_lower_bound(i[8], 0.0)
set_upper_bound(i[8], 100.0)
set_integer(i[12])
set_lower_bound(i[12], 0.0)
set_upper_bound(i[12], 100.0)
set_integer(i[19])
set_lower_bound(i[19], 0.0)
set_upper_bound(i[19], 100.0)
set_integer(i[5])
set_lower_bound(i[5], 0.0)
set_upper_bound(i[5], 100.0)
set_integer(i[3])
set_lower_bound(i[3], 0.0)
set_upper_bound(i[3], 100.0)
set_integer(i[2])
set_lower_bound(i[2], 0.0)
set_upper_bound(i[2], 100.0)
set_integer(i[13])
set_lower_bound(i[13], 0.0)
set_upper_bound(i[13], 100.0)
set_integer(i[6])
set_lower_bound(i[6], 0.0)
set_upper_bound(i[6], 100.0)
set_integer(i[4])
set_lower_bound(i[4], 0.0)
set_upper_bound(i[4], 100.0)
set_integer(i[9])
set_lower_bound(i[9], 0.0)
set_upper_bound(i[9], 100.0)
set_integer(i[14])
set_lower_bound(i[14], 0.0)
set_upper_bound(i[14], 100.0)
set_integer(i[16])
set_lower_bound(i[16], 0.0)
set_upper_bound(i[16], 100.0)
set_integer(i[10])
set_lower_bound(i[10], 0.0)
set_upper_bound(i[10], 100.0)
set_integer(i[15])
set_lower_bound(i[15], 0.0)
set_upper_bound(i[15], 100.0)
set_integer(i[17])
set_lower_bound(i[17], 0.0)
set_upper_bound(i[17], 100.0)
set_integer(i[7])
set_lower_bound(i[7], 0.0)
set_upper_bound(i[7], 100.0)
set_integer(i[20])
set_lower_bound(i[20], 0.0)
set_upper_bound(i[20], 100.0)
set_integer(i[11])
set_lower_bound(i[11], 0.0)
set_upper_bound(i[11], 100.0)
set_integer(i[1])
set_lower_bound(i[1], 0.0)
set_upper_bound(i[1], 100.0)
set_integer(i[18])
set_lower_bound(i[18], 0.0)
set_upper_bound(i[18], 100.0)
set_lower_bound(i[1], 1.0)
set_upper_bound(i[1], 10.0)
set_lower_bound(i[2], 1.0)
set_upper_bound(i[2], 10.0)
set_lower_bound(i[3], 1.0)
set_upper_bound(i[3], 10.0)
set_lower_bound(i[4], 1.0)
set_upper_bound(i[4], 10.0)
set_lower_bound(i[5], 1.0)
set_upper_bound(i[5], 10.0)
set_lower_bound(i[6], 1.0)
set_upper_bound(i[6], 10.0)
set_lower_bound(i[7], 1.0)
set_upper_bound(i[7], 10.0)
set_lower_bound(i[8], 1.0)
set_upper_bound(i[8], 10.0)
set_lower_bound(i[9], 1.0)
set_upper_bound(i[9], 10.0)
set_lower_bound(i[10], 1.0)
set_upper_bound(i[10], 10.0)
set_lower_bound(i[11], 1.0)
set_upper_bound(i[11], 10.0)
set_lower_bound(i[12], 1.0)
set_upper_bound(i[12], 10.0)
set_lower_bound(i[13], 1.0)
set_upper_bound(i[13], 10.0)
set_lower_bound(i[14], 1.0)
set_upper_bound(i[14], 10.0)
set_lower_bound(i[15], 1.0)
set_upper_bound(i[15], 10.0)
set_lower_bound(i[16], 1.0)
set_upper_bound(i[16], 10.0)
set_lower_bound(i[17], 1.0)
set_upper_bound(i[17], 10.0)
set_lower_bound(i[18], 1.0)
set_upper_bound(i[18], 10.0)
set_lower_bound(i[19], 1.0)
set_upper_bound(i[19], 10.0)
set_lower_bound(i[20], 1.0)
set_upper_bound(i[20], 10.0)
set_lower_bound(x[21], 1.0e-5)
set_upper_bound(x[21], 10.0)
set_lower_bound(x[22], 1.0e-5)
set_upper_bound(x[22], 10.0)
set_lower_bound(x[23], 1.0e-5)
set_upper_bound(x[23], 10.0)
set_lower_bound(x[24], 1.0e-5)
set_upper_bound(x[24], 10.0)
set_lower_bound(x[25], 1.0e-5)
set_upper_bound(x[25], 10.0)
set_lower_bound(x[26], 1.0e-5)
set_upper_bound(x[26], 10.0)
set_lower_bound(x[27], 1.0e-5)
set_upper_bound(x[27], 10.0)
set_lower_bound(x[28], 1.0e-5)
set_upper_bound(x[28], 10.0)
set_lower_bound(x[29], 1.0e-5)
set_upper_bound(x[29], 10.0)
set_lower_bound(x[30], 1.0e-5)
set_upper_bound(x[30], 10.0)
set_lower_bound(x[31], 1.0e-5)
set_upper_bound(x[31], 10.0)
set_lower_bound(x[32], 1.0e-5)
set_upper_bound(x[32], 10.0)
set_lower_bound(x[33], 1.0e-5)
set_upper_bound(x[33], 10.0)
set_lower_bound(x[34], 1.0e-5)
set_upper_bound(x[34], 10.0)
set_lower_bound(x[35], 1.0e-5)
set_upper_bound(x[35], 10.0)
set_lower_bound(x[36], 1.0e-5)
set_upper_bound(x[36], 10.0)
set_lower_bound(x[37], 1.0e-5)
set_upper_bound(x[37], 10.0)
set_lower_bound(x[38], 1.0e-5)
set_upper_bound(x[38], 10.0)
set_lower_bound(x[39], 1.0e-5)
set_upper_bound(x[39], 10.0)
set_lower_bound(x[40], 1.0e-5)
set_upper_bound(x[40], 10.0)


# ----- Constraints ----- #
@constraint(m, e1, 1.1*i[1]+1.86*i[2]+0.86*i[3]+1.23*i[4]+0.72*i[5]+0.47*i[6]+0.98*i[7]+0.39*i[8]+0.25*i[9]+0.41*i[10]+0.29*i[11]+0.38*i[12]+1.49*i[13]+1.27*i[14]+0.56*i[15]+1.08*i[16]+1.39*i[17]+i[18]+1.37*i[19]+0.89*i[20]+0.25*x[21]+0.98*x[22]+1.71*x[23]+1.75*x[24]+0.54*x[25]+0.42*x[26]+1.13*x[27]+1.28*x[28]+0.83*x[29]+0.41*x[30]+1.9*x[31]+0.16*x[32]+0.21*x[33]+0.28*x[34]+0.33*x[35]+1.24*x[36]+1.15*x[37]+0.1*x[38]+1.86*x[39]+1.46*x[40]-objvar == 0.0)
@NLconstraint(m, e2, -0.2*i[1]^0.035*i[2]^0.003*i[3]^0.04*i[4]^0.044*i[5]^0.046*i[6]^0.04*i[7]^0.037*i[8]^0.024*i[9]^0.008*i[10]^0.019*i[11]^0.006*i[12]^0.001*i[13]^0.044*i[14]^0.014*i[15]^0.014*i[16]^0.016*i[17]^0.022*i[18]^0.03*i[19]^0.001*i[20]^0.039*x[21]^0.026*x[22]^0.04*x[23]^0.016*x[24]^0.021*x[25]^0.003*x[26]^0.008*x[27]^0.031*x[28]^0.015*x[29]^0.042*x[30]^0.006*x[31]^0.046*x[32]^0.025*x[33]^0.033*x[34]^0.047*x[35]^0.013*x[36]^0.019*x[37]^0.022*x[38]^0.036*x[39]^0.038*x[40]^0.005 <= -1.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.