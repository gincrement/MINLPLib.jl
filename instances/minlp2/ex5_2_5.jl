using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
@variable(m, x[x_Idx])
set_lower_bound(x[4], 0.0)
set_lower_bound(x[16], 0.0)
set_lower_bound(x[6], 0.0)
set_lower_bound(x[27], 0.0)
set_lower_bound(x[14], 0.0)
set_lower_bound(x[32], 0.0)
set_lower_bound(x[17], 0.0)
set_lower_bound(x[3], 0.0)
set_lower_bound(x[25], 0.0)
set_lower_bound(x[30], 0.0)
set_lower_bound(x[26], 0.0)
set_lower_bound(x[23], 0.0)
set_lower_bound(x[11], 0.0)
set_lower_bound(x[29], 0.0)
set_lower_bound(x[22], 0.0)
set_lower_bound(x[12], 0.0)
set_lower_bound(x[5], 0.0)
set_lower_bound(x[19], 0.0)
set_lower_bound(x[2], 0.0)
set_lower_bound(x[20], 0.0)
set_lower_bound(x[24], 0.0)
set_lower_bound(x[31], 0.0)
set_lower_bound(x[18], 0.0)
set_lower_bound(x[9], 0.0)
set_lower_bound(x[15], 0.0)
set_lower_bound(x[1], 0.0)
set_lower_bound(x[7], 0.0)
set_lower_bound(x[8], 0.0)
set_lower_bound(x[13], 0.0)
set_lower_bound(x[21], 0.0)
set_lower_bound(x[28], 0.0)
set_lower_bound(x[10], 0.0)
set_upper_bound(x[1], 1.0)
set_upper_bound(x[2], 1.0)
set_upper_bound(x[3], 1.0)
set_upper_bound(x[4], 1.0)
set_upper_bound(x[5], 1.0)
set_upper_bound(x[6], 1.0)
set_upper_bound(x[7], 1.0)
set_upper_bound(x[8], 1.0)
set_upper_bound(x[9], 1.0)
set_upper_bound(x[10], 1.0)
set_upper_bound(x[11], 1.0)
set_upper_bound(x[12], 1.0)
set_upper_bound(x[13], 100.0)
set_upper_bound(x[14], 200.0)
set_upper_bound(x[15], 100.0)
set_upper_bound(x[16], 100.0)
set_upper_bound(x[17], 100.0)
set_upper_bound(x[18], 100.0)
set_upper_bound(x[19], 200.0)
set_upper_bound(x[20], 100.0)
set_upper_bound(x[21], 100.0)
set_upper_bound(x[22], 100.0)
set_upper_bound(x[23], 100.0)
set_upper_bound(x[24], 200.0)
set_upper_bound(x[25], 100.0)
set_upper_bound(x[26], 100.0)
set_upper_bound(x[27], 100.0)
set_upper_bound(x[28], 100.0)
set_upper_bound(x[29], 200.0)
set_upper_bound(x[30], 100.0)
set_upper_bound(x[31], 100.0)
set_upper_bound(x[32], 100.0)


# ----- Constraints ----- #
@NLconstraint(m, e1, -((18-6*x[1]-16*x[4]-15*x[7]-12*x[10])*x[18]+(18-6*x[2]-16*x[5]-15*x[8]-12*x[11])*x[23]+(18-6*x[3]-16*x[6]-15*x[9]-12*x[12])*x[28]+(15-6*x[1]-16*x[4]-15*x[7]-12*x[10])*x[19]+(15-6*x[2]-16*x[5]-15*x[8]-12*x[11])*x[24]+(15-6*x[3]-16*x[6]-15*x[9]-12*x[12])*x[29]+(19-6*x[1]-16*x[4]-15*x[7]-12*x[10])*x[20]+(19-6*x[2]-16*x[5]-15*x[8]-12*x[11])*x[25]+(19-6*x[3]-16*x[6]-15*x[9]-12*x[12])*x[30]+(16-6*x[1]-16*x[4]-15*x[7]-12*x[10])*x[21]+(16-6*x[2]-16*x[5]-15*x[8]-12*x[11])*x[26]+(16-6*x[3]-16*x[6]-15*x[9]-12*x[12])*x[31]+(14-6*x[1]-16*x[4]-15*x[7]-12*x[10])*x[22]+(14-6*x[2]-16*x[5]-15*x[8]-12*x[11])*x[27]+(14-6*x[3]-16*x[6]-15*x[9]-12*x[12])*x[32])-8*x[13]-5*x[14]-9*x[15]-6*x[16]-4*x[17]-objvar == 0.0)
@NLconstraint(m, e2, x[7]*x[18]+x[7]*x[19]+x[7]*x[20]+x[7]*x[21]+x[7]*x[22]+x[8]*x[23]+x[8]*x[24]+x[8]*x[25]+x[8]*x[26]+x[8]*x[27]+x[9]*x[28]+x[9]*x[29]+x[9]*x[30]+x[9]*x[31]+x[9]*x[32] <= 50.0)
@constraint(m, e3, x[13]+x[18]+x[23]+x[28] <= 100.0)
@constraint(m, e4, x[14]+x[19]+x[24]+x[29] <= 200.0)
@constraint(m, e5, x[15]+x[20]+x[25]+x[30] <= 100.0)
@constraint(m, e6, x[16]+x[21]+x[26]+x[31] <= 100.0)
@constraint(m, e7, x[17]+x[22]+x[27]+x[32] <= 100.0)
@NLconstraint(m, e8, (-2.5+3*x[1]+x[4]+x[7]+1.5*x[10])*x[18]+(-2.5+3*x[2]+x[5]+x[8]+1.5*x[11])*x[23]+(-2.5+3*x[3]+x[6]+x[9]+1.5*x[12])*x[28]-0.5*x[13] <= 0.0)
@NLconstraint(m, e9, (-2+x[1]+3*x[4]+2.5*x[7]+2.5*x[10])*x[18]+(-2+x[2]+3*x[5]+2.5*x[8]+2.5*x[11])*x[23]+(-2+x[3]+3*x[6]+2.5*x[9]+2.5*x[12])*x[28]+0.5*x[13] <= 0.0)
@NLconstraint(m, e10, (-1.5+3*x[1]+x[4]+x[7]+1.5*x[10])*x[19]+(-1.5+3*x[2]+x[5]+x[8]+1.5*x[11])*x[24]+(-1.5+3*x[3]+x[6]+x[9]+1.5*x[12])*x[29]+0.5*x[14] <= 0.0)
@NLconstraint(m, e11, (-2.5+x[1]+3*x[4]+2.5*x[7]+2.5*x[10])*x[19]+(-2.5+x[2]+3*x[5]+2.5*x[8]+2.5*x[11])*x[24]+(-2.5+x[3]+3*x[6]+2.5*x[9]+2.5*x[12])*x[29] <= 0.0)
@NLconstraint(m, e12, (-2+3*x[1]+x[4]+x[7]+1.5*x[10])*x[20]+(-2+3*x[2]+x[5]+x[8]+1.5*x[11])*x[25]+(-2+3*x[3]+x[6]+x[9]+1.5*x[12])*x[30] <= 0.0)
@NLconstraint(m, e13, (-2.6+x[1]+3*x[4]+2.5*x[7]+2.5*x[10])*x[20]+(-2.6+x[2]+3*x[5]+2.5*x[8]+2.5*x[11])*x[25]+(-2.6+x[3]+3*x[6]+2.5*x[9]+2.5*x[12])*x[30]-0.1*x[15] <= 0.0)
@NLconstraint(m, e14, (-2+3*x[1]+x[4]+x[7]+1.5*x[10])*x[21]+(-2+3*x[2]+x[5]+x[8]+1.5*x[11])*x[26]+(-2+3*x[3]+x[6]+x[9]+1.5*x[12])*x[31] <= 0.0)
@NLconstraint(m, e15, (-2+x[1]+3*x[4]+2.5*x[7]+2.5*x[10])*x[21]+(-2+x[2]+3*x[5]+2.5*x[8]+2.5*x[11])*x[26]+(-2+x[3]+3*x[6]+2.5*x[9]+2.5*x[12])*x[31]+0.5*x[16] <= 0.0)
@NLconstraint(m, e16, (-2+3*x[1]+x[4]+x[7]+1.5*x[10])*x[22]+(-2+3*x[2]+x[5]+x[8]+1.5*x[11])*x[27]+(-2+3*x[3]+x[6]+x[9]+1.5*x[12])*x[32] <= 0.0)
@NLconstraint(m, e17, (-2+x[1]+3*x[4]+2.5*x[7]+2.5*x[10])*x[22]+(-2+x[2]+3*x[5]+2.5*x[8]+2.5*x[11])*x[27]+(-2+x[3]+3*x[6]+2.5*x[9]+2.5*x[12])*x[32]+0.5*x[17] <= 0.0)
@constraint(m, e18, x[1]+x[4]+x[7]+x[10] == 1.0)
@constraint(m, e19, x[2]+x[5]+x[8]+x[11] == 1.0)
@constraint(m, e20, x[3]+x[6]+x[9]+x[12] == 1.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.