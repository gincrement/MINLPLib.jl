using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]
@variable(m, x[x_Idx])
set_lower_bound(x[16], 0.0)
set_lower_bound(x[14], 0.0)
set_lower_bound(x[62], 0.0)
set_lower_bound(x[38], 0.0)
set_lower_bound(x[42], 0.0)
set_lower_bound(x[56], 0.0)
set_lower_bound(x[22], 0.0)
set_lower_bound(x[59], 0.0)
set_lower_bound(x[74], 0.0)
set_lower_bound(x[2], 0.0)
set_lower_bound(x[9], 0.0)
set_lower_bound(x[8], 0.0)
set_lower_bound(x[69], 0.0)
set_lower_bound(x[43], 0.0)
set_lower_bound(x[71], 0.0)
set_lower_bound(x[36], 0.0)
set_lower_bound(x[4], 0.0)
set_lower_bound(x[32], 0.0)
set_lower_bound(x[54], 0.0)
set_lower_bound(x[27], 0.0)
set_lower_bound(x[3], 0.0)
set_lower_bound(x[25], 0.0)
set_lower_bound(x[30], 0.0)
set_lower_bound(x[58], 0.0)
set_lower_bound(x[11], 0.0)
set_lower_bound(x[29], 0.0)
set_lower_bound(x[53], 0.0)
set_lower_bound(x[5], 0.0)
set_lower_bound(x[37], 0.0)
set_lower_bound(x[63], 0.0)
set_lower_bound(x[57], 0.0)
set_lower_bound(x[55], 0.0)
set_lower_bound(x[24], 0.0)
set_lower_bound(x[41], 0.0)
set_lower_bound(x[18], 0.0)
set_lower_bound(x[52], 0.0)
set_lower_bound(x[1], 0.0)
set_lower_bound(x[7], 0.0)
set_lower_bound(x[13], 0.0)
set_lower_bound(x[49], 0.0)
set_lower_bound(x[21], 0.0)
set_lower_bound(x[10], 0.0)
set_lower_bound(x[72], 0.0)
set_lower_bound(x[67], 0.0)
set_lower_bound(x[26], 0.0)
set_lower_bound(x[45], 0.0)
set_lower_bound(x[66], 0.0)
set_lower_bound(x[12], 0.0)
set_lower_bound(x[40], 0.0)
set_lower_bound(x[44], 0.0)
set_lower_bound(x[61], 0.0)
set_lower_bound(x[50], 0.0)
set_lower_bound(x[31], 0.0)
set_lower_bound(x[33], 0.0)
set_lower_bound(x[47], 0.0)
set_lower_bound(x[68], 0.0)
set_lower_bound(x[28], 0.0)
set_lower_bound(x[35], 0.0)
set_lower_bound(x[64], 0.0)
set_lower_bound(x[6], 0.0)
set_lower_bound(x[60], 0.0)
set_lower_bound(x[17], 0.0)
set_lower_bound(x[23], 0.0)
set_lower_bound(x[34], 0.0)
set_lower_bound(x[46], 0.0)
set_lower_bound(x[51], 0.0)
set_lower_bound(x[19], 0.0)
set_lower_bound(x[48], 0.0)
set_lower_bound(x[73], 0.0)
set_lower_bound(x[20], 0.0)
set_lower_bound(x[39], 0.0)
set_lower_bound(x[15], 0.0)
set_lower_bound(x[70], 0.0)
set_lower_bound(x[65], 0.0)
set_upper_bound(x[1], 1.0e6)
set_upper_bound(x[2], 1.0e6)
set_upper_bound(x[3], 1.0e6)
set_upper_bound(x[4], 1.0e6)
set_upper_bound(x[5], 1.0e6)
set_upper_bound(x[6], 1.0e6)
set_upper_bound(x[7], 1.0e6)
set_upper_bound(x[8], 1.0e6)
set_upper_bound(x[9], 1.0e6)
set_upper_bound(x[10], 1.0e6)
set_upper_bound(x[11], 1.0e6)
set_upper_bound(x[12], 1.0e6)
set_upper_bound(x[13], 1.0e6)
set_upper_bound(x[14], 1.0e6)
set_upper_bound(x[15], 1.0e6)
set_upper_bound(x[16], 1.0e6)
set_upper_bound(x[17], 1.0e6)
set_upper_bound(x[18], 1.0e6)
set_upper_bound(x[19], 1.0e6)
set_upper_bound(x[20], 1.0e6)
set_upper_bound(x[21], 1.0e6)
set_upper_bound(x[22], 1.0e6)
set_upper_bound(x[23], 1.0e6)
set_upper_bound(x[24], 1.0e6)
set_upper_bound(x[25], 1.0e6)
set_upper_bound(x[26], 1.0e6)
set_upper_bound(x[27], 1.0e6)
set_upper_bound(x[28], 1.0e6)
set_upper_bound(x[29], 1.0e6)
set_upper_bound(x[30], 1.0e6)
set_upper_bound(x[31], 1.0e6)
set_upper_bound(x[32], 1.0e6)
set_upper_bound(x[33], 1.0e6)
set_upper_bound(x[34], 1.0e6)
set_upper_bound(x[35], 1.0e6)
set_upper_bound(x[36], 1.0e6)
set_upper_bound(x[37], 1.0e6)
set_upper_bound(x[38], 1.0e6)
set_upper_bound(x[39], 1.0e6)
set_upper_bound(x[40], 1.0e6)
set_upper_bound(x[41], 1.0e6)
set_upper_bound(x[42], 1.0e6)
set_upper_bound(x[43], 1.0e6)
set_upper_bound(x[44], 1.0e6)
set_upper_bound(x[45], 1.0e6)
set_upper_bound(x[46], 1.0e6)
set_upper_bound(x[47], 1.0e6)
set_upper_bound(x[48], 1.0e6)
set_upper_bound(x[49], 1.0e6)
set_upper_bound(x[50], 1.0e6)
set_upper_bound(x[51], 1.0e6)
set_upper_bound(x[52], 1.0e6)
set_upper_bound(x[53], 1.0e6)
set_upper_bound(x[54], 1.0e6)
set_upper_bound(x[55], 1.0e6)
set_upper_bound(x[56], 1.0e6)
set_upper_bound(x[57], 1.0e6)
set_upper_bound(x[58], 1.0e6)
set_upper_bound(x[59], 1.0e6)
set_upper_bound(x[60], 1.0e6)
set_upper_bound(x[61], 1.0e6)
set_upper_bound(x[62], 1.0e6)
set_upper_bound(x[63], 1.0e6)
set_upper_bound(x[64], 1.0e6)
set_upper_bound(x[65], 1.0e6)
set_upper_bound(x[66], 1.0e6)
set_upper_bound(x[67], 1.0e6)
set_upper_bound(x[68], 1.0e6)
set_upper_bound(x[69], 1.0e6)
set_upper_bound(x[70], 1.0e6)
set_upper_bound(x[71], 1.0e6)
set_upper_bound(x[72], 1.0e6)
set_upper_bound(x[73], 1.0e6)
set_upper_bound(x[74], 1.0e6)


# ----- Constraints ----- #
@constraint(m, e1, -x[70]-x[71]-x[72]-x[73]-x[74]+objvar == 0.0)
@constraint(m, e2, -x[46]-x[54]-x[55]-x[56]-x[57]-x[58] == -50.0)
@constraint(m, e3, -x[47]-x[59]-x[60]-x[61]-x[62]-x[63] == -120.0)
@constraint(m, e4, -x[48]-x[64]-x[65]-x[66]-x[67]-x[68] == -70.0)
@constraint(m, e5, -x[21]-x[26]-x[31]-x[36]-x[41]-x[54]-x[59]-x[64]+x[70] == 0.0)
@constraint(m, e6, -x[22]-x[27]-x[32]-x[37]-x[42]-x[55]-x[60]-x[65]+x[71] == 0.0)
@constraint(m, e7, -x[23]-x[28]-x[33]-x[38]-x[43]-x[56]-x[61]-x[66]+x[72] == 0.0)
@constraint(m, e8, -x[24]-x[29]-x[34]-x[39]-x[44]-x[57]-x[62]-x[67]+x[73] == 0.0)
@constraint(m, e9, -x[25]-x[30]-x[35]-x[40]-x[45]-x[58]-x[63]-x[68]+x[74] == 0.0)
@constraint(m, e10, -x[21]-x[22]-x[23]-x[24]-x[25]-x[49]+x[70] == 0.0)
@constraint(m, e11, -x[26]-x[27]-x[28]-x[29]-x[30]-x[50]+x[71] == 0.0)
@constraint(m, e12, -x[31]-x[32]-x[33]-x[34]-x[35]-x[51]+x[72] == 0.0)
@constraint(m, e13, -x[36]-x[37]-x[38]-x[39]-x[40]-x[52]+x[73] == 0.0)
@constraint(m, e14, -x[41]-x[42]-x[43]-x[44]-x[45]-x[53]+x[74] == 0.0)
@constraint(m, e15, -x[46]-x[47]-x[48]-x[49]-x[50]-x[51]-x[52]-x[53]+x[69] == 0.0)
@NLconstraint(m, e16, x[21]*x[11]+x[26]*x[13]+x[31]*x[15]+x[36]*x[17]+x[41]*x[19]-x[70]*x[1]+10*x[54]+110*x[59]+100*x[64] == 0.0)
@NLconstraint(m, e17, x[21]*x[12]+x[26]*x[14]+x[31]*x[16]+x[36]*x[18]+x[41]*x[20]-x[70]*x[2]+200*x[54]+140*x[59]+25*x[64] == 0.0)
@NLconstraint(m, e18, x[22]*x[11]+x[27]*x[13]+x[32]*x[15]+x[37]*x[17]+x[42]*x[19]-x[71]*x[3]+10*x[55]+110*x[60]+100*x[65] == 0.0)
@NLconstraint(m, e19, x[22]*x[12]+x[27]*x[14]+x[32]*x[16]+x[37]*x[18]+x[42]*x[20]-x[71]*x[4]+200*x[55]+140*x[60]+25*x[65] == 0.0)
@NLconstraint(m, e20, x[23]*x[11]+x[28]*x[13]+x[33]*x[15]+x[38]*x[17]+x[43]*x[19]-x[72]*x[5]+10*x[56]+110*x[61]+100*x[66] == 0.0)
@NLconstraint(m, e21, x[23]*x[12]+x[28]*x[14]+x[33]*x[16]+x[38]*x[18]+x[43]*x[20]-x[72]*x[6]+200*x[56]+140*x[61]+25*x[66] == 0.0)
@NLconstraint(m, e22, x[24]*x[11]+x[29]*x[13]+x[34]*x[15]+x[39]*x[17]+x[44]*x[19]-x[73]*x[7]+10*x[57]+110*x[62]+100*x[67] == 0.0)
@NLconstraint(m, e23, x[24]*x[12]+x[29]*x[14]+x[34]*x[16]+x[39]*x[18]+x[44]*x[20]-x[73]*x[8]+200*x[57]+140*x[62]+25*x[67] == 0.0)
@NLconstraint(m, e24, x[25]*x[11]+x[30]*x[13]+x[35]*x[15]+x[40]*x[17]+x[45]*x[19]-x[74]*x[9]+10*x[58]+110*x[63]+100*x[68] == 0.0)
@NLconstraint(m, e25, x[25]*x[12]+x[30]*x[14]+x[35]*x[16]+x[40]*x[18]+x[45]*x[20]-x[74]*x[10]+200*x[58]+140*x[63]+25*x[68] == 0.0)
@constraint(m, e26, x[1] <= 145.0)
@constraint(m, e27, x[2] <= 400.0)
@constraint(m, e28, x[3] <= 110.0)
@constraint(m, e29, x[4] <= 90.0)
@constraint(m, e30, x[5] <= 90.0)
@constraint(m, e31, x[6] <= 100.0)
@constraint(m, e32, x[7] <= 200.0)
@constraint(m, e33, x[8] <= 90.0)
@constraint(m, e34, x[9] <= 50.0)
@constraint(m, e35, x[10] <= 80.0)
@constraint(m, e36, -0.1*x[1]+x[11] == 0.0)
@constraint(m, e37, -x[2]+x[12] == 0.0)
@constraint(m, e38, -0.3*x[3]+x[13] == 0.0)
@constraint(m, e39, -0.1*x[4]+x[14] == 0.0)
@constraint(m, e40, -x[5]+x[15] == 0.0)
@constraint(m, e41, -0.2*x[6]+x[16] == 0.0)
@constraint(m, e42, -0.5*x[7]+x[17] == 0.0)
@constraint(m, e43, -x[8]+x[18] == 0.0)
@constraint(m, e44, -0.35*x[9]+x[19] == 0.0)
@constraint(m, e45, -0.4*x[10]+x[20] == 0.0)
@NLconstraint(m, e46, x[49]*x[11]+x[50]*x[13]+x[51]*x[15]+x[52]*x[17]+x[53]*x[19]+10*x[46]+110*x[47]+100*x[48]-10*x[69] <= 0.0)
@NLconstraint(m, e47, x[49]*x[12]+x[50]*x[14]+x[51]*x[16]+x[52]*x[18]+x[53]*x[20]+200*x[46]+140*x[47]+25*x[48]-5*x[69] <= 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.