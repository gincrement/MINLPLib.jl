using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[15])
set_binary(b[176])
set_binary(b[133])
set_binary(b[45])
set_binary(b[169])
set_binary(b[180])
set_binary(b[178])
set_binary(b[64])
set_binary(b[112])
set_binary(b[21])
set_binary(b[36])
set_binary(b[130])
set_binary(b[87])
set_binary(b[132])
set_binary(b[119])
set_binary(b[79])
set_binary(b[16])
set_binary(b[60])
set_binary(b[159])
set_binary(b[12])
set_binary(b[11])
set_binary(b[19])
set_binary(b[3])
set_binary(b[39])
set_binary(b[4])
set_binary(b[37])
set_binary(b[88])
set_binary(b[50])
set_binary(b[97])
set_binary(b[188])
set_binary(b[62])
set_binary(b[113])
set_binary(b[24])
set_binary(b[10])
set_binary(b[162])
set_binary(b[161])
set_binary(b[75])
set_binary(b[128])
set_binary(b[167])
set_binary(b[177])
set_binary(b[70])
set_binary(b[163])
set_binary(b[41])
set_binary(b[48])
set_binary(b[23])
set_binary(b[28])
set_binary(b[143])
set_binary(b[90])
set_binary(b[84])
set_binary(b[53])
set_binary(b[116])
set_binary(b[29])
set_binary(b[61])
set_binary(b[89])
set_binary(b[34])
set_binary(b[145])
set_binary(b[86])
set_binary(b[114])
set_binary(b[153])
set_binary(b[13])
set_binary(b[69])
set_binary(b[144])
set_binary(b[68])
set_binary(b[166])
set_binary(b[47])
set_binary(b[138])
set_binary(b[151])
set_binary(b[135])
set_binary(b[108])
set_binary(b[154])
set_binary(b[76])
set_binary(b[109])
set_binary(b[174])
set_binary(b[155])
set_binary(b[94])
set_binary(b[149])
set_binary(b[107])
set_binary(b[181])
set_binary(b[52])
set_binary(b[139])
set_binary(b[131])
set_binary(b[38])
set_binary(b[71])
set_binary(b[78])
set_binary(b[66])
set_binary(b[80])
set_binary(b[160])
set_binary(b[49])
set_binary(b[137])
set_binary(b[185])
set_binary(b[105])
set_binary(b[164])
set_binary(b[124])
set_binary(b[54])
set_binary(b[111])
set_binary(b[22])
set_binary(b[170])
set_binary(b[98])
set_binary(b[186])
set_binary(b[77])
set_binary(b[172])
set_binary(b[46])
set_binary(b[127])
set_binary(b[56])
set_binary(b[104])
set_binary(b[171])
set_binary(b[74])
set_binary(b[32])
set_binary(b[92])
set_binary(b[72])
set_binary(b[126])
set_binary(b[5])
set_binary(b[129])
set_binary(b[190])
set_binary(b[125])
set_binary(b[14])
set_binary(b[184])
set_binary(b[43])
set_binary(b[110])
set_binary(b[25])
set_binary(b[183])
set_binary(b[9])
set_binary(b[117])
set_binary(b[83])
set_binary(b[59])
set_binary(b[67])
set_binary(b[175])
set_binary(b[93])
set_binary(b[99])
set_binary(b[146])
set_binary(b[123])
set_binary(b[187])
set_binary(b[122])
set_binary(b[121])
set_binary(b[157])
set_binary(b[147])
set_binary(b[156])
set_binary(b[26])
set_binary(b[73])
set_binary(b[118])
set_binary(b[44])
set_binary(b[158])
set_binary(b[120])
set_binary(b[85])
set_binary(b[82])
set_binary(b[42])
set_binary(b[168])
set_binary(b[106])
set_binary(b[81])
set_binary(b[141])
set_binary(b[136])
set_binary(b[150])
set_binary(b[95])
set_binary(b[115])
set_binary(b[189])
set_binary(b[8])
set_binary(b[33])
set_binary(b[30])
set_binary(b[173])
set_binary(b[40])
set_binary(b[58])
set_binary(b[96])
set_binary(b[57])
set_binary(b[102])
set_binary(b[51])
set_binary(b[2])
set_binary(b[100])
set_binary(b[142])
set_binary(b[20])
set_binary(b[7])
set_binary(b[65])
set_binary(b[165])
set_binary(b[101])
set_binary(b[17])
set_binary(b[6])
set_binary(b[182])
set_binary(b[1])
set_binary(b[179])
set_binary(b[134])
set_binary(b[27])
set_binary(b[18])
set_binary(b[140])
set_binary(b[31])
set_binary(b[91])
set_binary(b[152])
set_binary(b[103])
set_binary(b[55])
set_binary(b[148])
set_binary(b[63])


# ----- Constraints ----- #
@NLconstraint(m, e1, 2*b[1]*b[5]-2*b[1]-2*b[5]+2*b[1]*b[8]-2*b[8]+2*b[1]*b[23]-4*b[23]-2*b[1]*b[35]+4*b[35]+2*b[2]*b[3]-2*b[2]-2*b[3]+2*b[2]*b[33]-4*b[33]-2*b[2]*b[144]+2*b[2]*b[150]+2*b[3]*b[84]-2*b[84]-2*b[3]*b[106]+2*b[106]+2*b[3]*b[140]+2*b[4]*b[86]-2*b[4]-2*b[86]+2*b[4]*b[107]-2*b[107]+2*b[4]*b[140]-2*b[4]*b[158]+2*b[5]*b[6]-2*b[6]+2*b[5]*b[136]-2*b[5]*b[151]+2*b[6]*b[52]-4*b[52]+2*b[6]*b[72]-4*b[72]-2*b[6]*b[161]+2*b[7]*b[17]-2*b[7]-2*b[17]+2*b[7]*b[103]-4*b[103]+2*b[8]*b[141]-2*b[8]*b[146]+2*b[8]*b[162]+2*b[9]*b[27]-2*b[9]-4*b[27]-2*b[9]*b[39]-2*b[39]+2*b[9]*b[72]+2*b[9]*b[163]+2*b[10]*b[49]-2*b[10]-2*b[49]+2*b[10]*b[65]-2*b[65]+2*b[10]*b[68]-2*b[68]-2*b[10]*b[133]+2*b[11]*b[47]-2*b[11]-4*b[47]+2*b[11]*b[157]+2*b[12]*b[32]-4*b[12]-2*b[32]+2*b[12]*b[49]+2*b[12]*b[133]+2*b[12]*b[165]+2*b[13]*b[14]-2*b[13]-4*b[14]-2*b[13]*b[34]+2*b[34]+2*b[13]*b[136]+2*b[13]*b[144]+2*b[14]*b[89]-2*b[89]+2*b[14]*b[113]-2*b[113]+2*b[14]*b[135]+2*b[15]*b[26]-2*b[15]-2*b[26]+2*b[15]*b[38]-2*b[38]+2*b[15]*b[146]-2*b[15]*b[175]-2*b[16]*b[17]-2*b[16]+2*b[16]*b[45]-2*b[45]+2*b[16]*b[62]-4*b[62]+2*b[16]*b[169]+2*b[17]*b[18]-2*b[18]+2*b[17]*b[61]-4*b[61]+2*b[18]*b[62]+2*b[19]*b[20]-2*b[19]-2*b[20]+2*b[19]*b[21]-2*b[21]+2*b[19]*b[67]-4*b[67]-2*b[19]*b[150]+2*b[20]*b[23]+2*b[20]*b[49]-2*b[20]*b[111]+2*b[111]+2*b[21]*b[23]+2*b[21]*b[89]-2*b[21]*b[180]-2*b[22]*b[24]+2*b[22]-2*b[24]-2*b[22]*b[110]+4*b[110]-2*b[22]*b[136]+2*b[22]*b[139]+2*b[23]*b[24]+2*b[24]*b[113]+2*b[24]*b[166]+2*b[25]*b[41]-2*b[25]-2*b[41]+2*b[25]*b[146]+2*b[25]*b[151]-2*b[25]*b[167]+2*b[26]*b[55]-4*b[55]-2*b[26]*b[73]-2*b[73]+2*b[26]*b[75]-4*b[75]+2*b[27]*b[56]-4*b[56]+2*b[27]*b[154]+2*b[27]*b[167]+2*b[28]*b[29]-2*b[28]-2*b[29]-2*b[28]*b[44]+2*b[44]+2*b[28]*b[98]-2*b[98]+2*b[28]*b[171]+2*b[29]*b[59]-2*b[59]+2*b[29]*b[80]-2*b[80]-2*b[29]*b[157]+2*b[30]*b[31]-2*b[30]-2*b[31]+2*b[30]*b[124]-2*b[124]-2*b[30]*b[171]+2*b[30]*b[172]+2*b[31]*b[80]+2*b[32]*b[33]-2*b[32]*b[34]+2*b[32]*b[108]-2*b[108]+2*b[33]*b[36]-4*b[36]+2*b[33]*b[89]+2*b[34]*b[36]-2*b[34]*b[87]-2*b[87]-2*b[35]*b[37]-2*b[37]-2*b[35]*b[88]+2*b[88]-2*b[35]*b[139]+2*b[36]*b[37]+2*b[36]*b[141]+2*b[37]*b[161]+2*b[37]*b[166]+2*b[38]*b[40]-2*b[40]+2*b[38]*b[135]-2*b[38]*b[145]+2*b[39]*b[54]-4*b[54]+2*b[39]*b[151]+2*b[39]*b[153]+2*b[40]*b[54]+2*b[40]*b[115]-2*b[115]-2*b[40]*b[183]-2*b[41]*b[53]-2*b[53]+2*b[41]*b[75]+2*b[41]*b[94]-4*b[94]+2*b[42]*b[152]-4*b[42]+2*b[42]*b[164]+2*b[42]*b[167]+2*b[42]*b[175]-2*b[43]*b[44]-2*b[43]+2*b[43]*b[130]+2*b[43]*b[131]+2*b[43]*b[164]+2*b[44]*b[79]-2*b[79]-2*b[44]*b[184]+2*b[45]*b[46]-4*b[46]+2*b[45]*b[121]-2*b[121]-2*b[45]*b[178]+2*b[46]*b[79]+2*b[46]*b[102]-2*b[102]+2*b[46]*b[157]+2*b[47]*b[48]-2*b[48]+2*b[47]*b[101]-4*b[101]+2*b[47]*b[171]+2*b[48]*b[102]-2*b[49]*b[110]-2*b[50]*b[141]+4*b[50]-2*b[50]*b[144]-2*b[50]*b[160]-2*b[50]*b[182]-2*b[51]*b[153]-2*b[51]+2*b[51]*b[182]+2*b[51]*b[183]+2*b[51]*b[186]+2*b[52]*b[74]-4*b[74]+2*b[52]*b[115]+2*b[52]*b[153]+2*b[53]*b[71]-2*b[71]+2*b[53]*b[74]+2*b[53]*b[183]+2*b[54]*b[94]+2*b[54]*b[116]-4*b[116]+2*b[55]*b[57]-4*b[57]+2*b[55]*b[156]+2*b[55]*b[175]+2*b[56]*b[58]-4*b[58]+2*b[56]*b[117]-4*b[117]+2*b[56]*b[149]+2*b[57]*b[58]+2*b[57]*b[116]+2*b[57]*b[148]+2*b[58]*b[129]+2*b[58]*b[170]+2*b[59]*b[61]-2*b[59]*b[130]+2*b[59]*b[178]-2*b[60]*b[80]+2*b[60]-2*b[60]*b[100]-2*b[100]+2*b[60]*b[126]-4*b[126]-2*b[60]*b[128]+2*b[61]*b[99]-2*b[99]+2*b[61]*b[126]+2*b[62]*b[63]-2*b[63]+2*b[62]*b[125]-4*b[125]+2*b[63]*b[126]-2*b[64]*b[66]+2*b[64]-2*b[66]-2*b[64]*b[133]+2*b[65]*b[67]+2*b[65]*b[173]-2*b[65]*b[174]+2*b[66]*b[67]+2*b[66]*b[150]+2*b[66]*b[174]+2*b[67]*b[69]-2*b[69]-2*b[68]*b[88]+2*b[68]*b[144]+2*b[68]*b[159]+2*b[69]*b[85]-2*b[85]+2*b[69]*b[88]-2*b[69]*b[110]+2*b[70]*b[71]-2*b[70]+2*b[70]*b[90]-2*b[90]-2*b[70]*b[151]+2*b[70]*b[186]+2*b[71]*b[73]-2*b[71]*b[166]+2*b[72]*b[93]-4*b[93]+2*b[72]*b[162]+2*b[73]*b[92]-2*b[92]+2*b[73]*b[93]+2*b[74]*b[76]-2*b[76]+2*b[74]*b[116]+2*b[75]*b[77]-4*b[77]+2*b[75]*b[154]+2*b[76]*b[77]+2*b[76]*b[93]-2*b[76]*b[131]+2*b[77]*b[119]+2*b[119]+2*b[77]*b[184]+2*b[78]*b[122]-2*b[78]-2*b[122]-2*b[78]*b[143]+2*b[78]*b[169]+2*b[78]*b[184]+2*b[79]*b[124]-2*b[79]*b[147]+2*b[80]*b[188]-2*b[81]*b[84]+2*b[81]-2*b[81]*b[137]+2*b[82]*b[84]-2*b[82]+2*b[82]*b[165]-2*b[83]*b[85]+2*b[83]-2*b[83]*b[134]-2*b[83]*b[150]+2*b[83]*b[177]+2*b[84]*b[85]+2*b[85]*b[87]+2*b[86]*b[139]+2*b[86]*b[159]-2*b[86]*b[160]+2*b[87]*b[109]-2*b[109]+2*b[87]*b[160]-2*b[88]*b[187]-2*b[89]*b[90]+2*b[90]*b[91]-2*b[91]+2*b[90]*b[187]+2*b[91]*b[92]+2*b[91]*b[112]-4*b[112]-2*b[91]*b[146]-2*b[92]*b[113]+2*b[92]*b[176]+2*b[93]*b[95]-2*b[95]+2*b[94]*b[96]-4*b[96]+2*b[94]*b[152]+2*b[95]*b[96]+2*b[95]*b[131]-2*b[95]*b[190]+2*b[96]*b[97]+2*b[97]+2*b[96]*b[181]-2*b[97]*b[98]-2*b[97]*b[129]-2*b[97]*b[156]+2*b[98]*b[100]+2*b[98]*b[181]+2*b[99]*b[101]-2*b[99]*b[142]+2*b[99]*b[170]+2*b[100]*b[101]+2*b[100]*b[142]+2*b[101]*b[103]+2*b[102]*b[104]-2*b[104]-2*b[102]*b[132]+2*b[103]*b[104]+2*b[103]*b[132]+2*b[105]*b[107]-2*b[105]+2*b[105]*b[158]-2*b[106]*b[109]-2*b[106]*b[138]+2*b[106]*b[179]+2*b[107]*b[109]-2*b[107]*b[173]+2*b[108]*b[137]+2*b[108]*b[158]-2*b[108]*b[180]+2*b[109]*b[180]-2*b[110]*b[185]+2*b[111]*b[112]-2*b[111]*b[155]-2*b[111]*b[186]+2*b[112]*b[145]+2*b[112]*b[185]+2*b[113]*b[114]-4*b[114]+2*b[114]*b[145]+2*b[114]*b[168]+2*b[114]*b[176]+2*b[115]*b[117]-2*b[115]*b[163]+2*b[116]*b[118]-4*b[118]+2*b[117]*b[118]+2*b[117]*b[190]+2*b[118]*b[120]-2*b[120]+2*b[118]*b[143]-2*b[119]*b[121]-2*b[119]*b[142]-2*b[119]*b[154]+2*b[120]*b[121]-2*b[120]*b[156]+2*b[120]*b[178]+2*b[121]*b[123]-2*b[123]+2*b[122]*b[124]+2*b[122]*b[125]-2*b[122]*b[129]+2*b[123]*b[125]-2*b[123]*b[132]+2*b[123]*b[147]-2*b[124]*b[189]+2*b[125]*b[189]+2*b[126]*b[127]-2*b[127]+2*b[127]*b[189]+2*b[128]*b[129]-2*b[128]*b[130]+2*b[128]*b[132]+2*b[130]*b[148]-2*b[131]*b[149]+2*b[133]*b[134]-2*b[135]*b[136]-2*b[135]*b[153]+2*b[137]*b[138]-2*b[137]*b[159]-2*b[139]*b[140]-2*b[140]*b[155]-2*b[141]*b[145]+2*b[142]*b[143]-2*b[143]*b[164]-2*b[147]*b[148]+2*b[147]*b[149]-2*b[148]*b[152]-2*b[149]*b[170]-2*b[152]*b[184]-2*b[154]*b[181]+2*b[155]*b[180]+2*b[155]*b[185]+2*b[156]*b[163]-2*b[157]*b[172]-2*b[158]*b[179]-2*b[159]*b[165]+2*b[160]*b[187]+2*b[161]*b[182]-2*b[161]*b[183]-2*b[162]*b[166]-2*b[162]*b[168]-2*b[163]*b[164]-2*b[165]*b[177]-2*b[167]*b[168]+2*b[168]*b[190]-2*b[169]*b[170]-2*b[169]*b[171]-2*b[175]*b[176]-2*b[176]*b[190]-2*b[178]*b[181]-2*b[182]*b[185]-2*b[186]*b[187]-2*b[188]*b[189]+objvar <= 0.0)


# ----- Objective ----- #
@objective(m, Max, objvar)

m = m 		 # model get returned when including this script.