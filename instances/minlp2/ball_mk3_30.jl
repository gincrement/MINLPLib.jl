using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
i_Idx = Any[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
@variable(m, i[i_Idx])
set_integer(i[8])
set_lower_bound(i[8], 0.0)
set_upper_bound(i[8], 100.0)
set_integer(i[23])
set_lower_bound(i[23], 0.0)
set_upper_bound(i[23], 100.0)
set_integer(i[21])
set_lower_bound(i[21], 0.0)
set_upper_bound(i[21], 100.0)
set_integer(i[12])
set_lower_bound(i[12], 0.0)
set_upper_bound(i[12], 100.0)
set_integer(i[27])
set_lower_bound(i[27], 0.0)
set_upper_bound(i[27], 100.0)
set_integer(i[24])
set_lower_bound(i[24], 0.0)
set_upper_bound(i[24], 100.0)
set_integer(i[29])
set_lower_bound(i[29], 0.0)
set_upper_bound(i[29], 100.0)
set_integer(i[19])
set_lower_bound(i[19], 0.0)
set_upper_bound(i[19], 100.0)
set_integer(i[5])
set_lower_bound(i[5], 0.0)
set_upper_bound(i[5], 100.0)
set_integer(i[3])
set_lower_bound(i[3], 0.0)
set_upper_bound(i[3], 100.0)
set_integer(i[2])
set_lower_bound(i[2], 0.0)
set_upper_bound(i[2], 100.0)
set_integer(i[13])
set_lower_bound(i[13], 0.0)
set_upper_bound(i[13], 100.0)
set_integer(i[28])
set_lower_bound(i[28], 0.0)
set_upper_bound(i[28], 100.0)
set_integer(i[6])
set_lower_bound(i[6], 0.0)
set_upper_bound(i[6], 100.0)
set_integer(i[26])
set_lower_bound(i[26], 0.0)
set_upper_bound(i[26], 100.0)
set_integer(i[4])
set_lower_bound(i[4], 0.0)
set_upper_bound(i[4], 100.0)
set_integer(i[31])
set_lower_bound(i[31], 0.0)
set_upper_bound(i[31], 100.0)
set_integer(i[9])
set_lower_bound(i[9], 0.0)
set_upper_bound(i[9], 100.0)
set_integer(i[22])
set_lower_bound(i[22], 0.0)
set_upper_bound(i[22], 100.0)
set_integer(i[14])
set_lower_bound(i[14], 0.0)
set_upper_bound(i[14], 100.0)
set_integer(i[16])
set_lower_bound(i[16], 0.0)
set_upper_bound(i[16], 100.0)
set_integer(i[10])
set_lower_bound(i[10], 0.0)
set_upper_bound(i[10], 100.0)
set_integer(i[15])
set_lower_bound(i[15], 0.0)
set_upper_bound(i[15], 100.0)
set_integer(i[17])
set_lower_bound(i[17], 0.0)
set_upper_bound(i[17], 100.0)
set_integer(i[7])
set_lower_bound(i[7], 0.0)
set_upper_bound(i[7], 100.0)
set_integer(i[20])
set_lower_bound(i[20], 0.0)
set_upper_bound(i[20], 100.0)
set_integer(i[11])
set_lower_bound(i[11], 0.0)
set_upper_bound(i[11], 100.0)
set_integer(i[30])
set_lower_bound(i[30], 0.0)
set_upper_bound(i[30], 100.0)
set_integer(i[25])
set_lower_bound(i[25], 0.0)
set_upper_bound(i[25], 100.0)
set_integer(i[18])
set_lower_bound(i[18], 0.0)
set_upper_bound(i[18], 100.0)
set_lower_bound(i[2], -1.0)
set_upper_bound(i[2], 2.0)
set_lower_bound(i[3], -1.0)
set_upper_bound(i[3], 2.0)
set_lower_bound(i[4], -1.0)
set_upper_bound(i[4], 2.0)
set_lower_bound(i[5], -1.0)
set_upper_bound(i[5], 2.0)
set_lower_bound(i[6], -1.0)
set_upper_bound(i[6], 2.0)
set_lower_bound(i[7], -1.0)
set_upper_bound(i[7], 2.0)
set_lower_bound(i[8], -1.0)
set_upper_bound(i[8], 2.0)
set_lower_bound(i[9], -1.0)
set_upper_bound(i[9], 2.0)
set_lower_bound(i[10], -1.0)
set_upper_bound(i[10], 2.0)
set_lower_bound(i[11], -1.0)
set_upper_bound(i[11], 2.0)
set_lower_bound(i[12], -1.0)
set_upper_bound(i[12], 2.0)
set_lower_bound(i[13], -1.0)
set_upper_bound(i[13], 2.0)
set_lower_bound(i[14], -1.0)
set_upper_bound(i[14], 2.0)
set_lower_bound(i[15], -1.0)
set_upper_bound(i[15], 2.0)
set_lower_bound(i[16], -1.0)
set_upper_bound(i[16], 2.0)
set_lower_bound(i[17], -1.0)
set_upper_bound(i[17], 2.0)
set_lower_bound(i[18], -1.0)
set_upper_bound(i[18], 2.0)
set_lower_bound(i[19], -1.0)
set_upper_bound(i[19], 2.0)
set_lower_bound(i[20], -1.0)
set_upper_bound(i[20], 2.0)
set_lower_bound(i[21], -1.0)
set_upper_bound(i[21], 2.0)
set_lower_bound(i[22], -1.0)
set_upper_bound(i[22], 2.0)
set_lower_bound(i[23], -1.0)
set_upper_bound(i[23], 2.0)
set_lower_bound(i[24], -1.0)
set_upper_bound(i[24], 2.0)
set_lower_bound(i[25], -1.0)
set_upper_bound(i[25], 2.0)
set_lower_bound(i[26], -1.0)
set_upper_bound(i[26], 2.0)
set_lower_bound(i[27], -1.0)
set_upper_bound(i[27], 2.0)
set_lower_bound(i[28], -1.0)
set_upper_bound(i[28], 2.0)
set_lower_bound(i[29], -1.0)
set_upper_bound(i[29], 2.0)
set_lower_bound(i[30], -1.0)
set_upper_bound(i[30], 2.0)
set_lower_bound(i[31], -1.0)
set_upper_bound(i[31], 2.0)


# ----- Constraints ----- #
@constraint(m, e1, objvar+i[2]+i[3]+i[4]+i[5]+i[6]+i[7]+i[8]+i[9]+i[10]+i[11]+i[12]+i[13]+i[14]+i[15]+i[16]+i[17]+i[18]+i[19]+i[20]+i[21]+i[22]+i[23]+i[24]+i[25]+i[26]+i[27]+i[28]+i[29]+i[30]+i[31] == 0.0)
@NLconstraint(m, e2, 0.0394468602581308* (i[30])^2-0.0394468602581308*i[30]+0.016482781963216* (i[29])^2-0.016482781963216*i[29]+0.0565703047972114* (i[28])^2-0.0565703047972114*i[28]+0.0585014464120386* (i[27])^2-0.0585014464120386*i[27]+0.0118746308986698* (i[26])^2-0.0118746308986698*i[26]+0.0451913403894453* (i[25])^2-0.0451913403894453*i[25]+0.0362882980369683* (i[24])^2-0.0362882980369683*i[24]+0.0204948265573191* (i[23])^2-0.0204948265573191*i[23]+0.0252301288903778* (i[22])^2-0.0252301288903778*i[22]+0.0283867992035166* (i[21])^2-0.0283867992035166*i[21]+0.0425137327561133* (i[20])^2-0.0425137327561133*i[20]+0.037617677558166* (i[19])^2-0.037617677558166*i[19]+0.0576726558598861* (i[18])^2-0.0576726558598861*i[18]+0.0259924550955063* (i[17])^2-0.0259924550955063*i[17]+0.00625392202854311* (i[16])^2-0.00625392202854311*i[16]+0.0474635696658564* (i[15])^2-0.0474635696658564*i[15]+0.030733721879364* (i[14])^2-0.030733721879364*i[14]+0.015401148979499* (i[13])^2-0.015401148979499*i[13]+0.049224183717334* (i[12])^2-0.049224183717334*i[12]+0.0519656343340015* (i[11])^2-0.0519656343340015*i[11]+0.0384040110374736* (i[10])^2-0.0384040110374736*i[10]+0.0172067356549738* (i[9])^2-0.0172067356549738*i[9]+0.019974781798624* (i[8])^2-0.019974781798624*i[8]+0.0352372440378746* (i[7])^2-0.0352372440378746*i[7]+0.0152163994975552* (i[6])^2-0.0152163994975552*i[6]+0.0075711399569244* (i[5])^2-0.0075711399569244*i[5]+0.0243048911732161* (i[4])^2-0.0243048911732161*i[4]+0.0502208123501935* (i[3])^2-0.0502208123501935*i[3]+0.041161312091797* (i[2])^2-0.041161312091797*i[2]+0.0473965531202045* (i[31])^2-0.0473965531202045*i[31] <= -9.99999999999612e-5)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.