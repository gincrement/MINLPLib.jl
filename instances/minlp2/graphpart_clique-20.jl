using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
b_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_binary(b[15])
set_binary(b[42])
set_binary(b[49])
set_binary(b[45])
set_binary(b[41])
set_binary(b[48])
set_binary(b[23])
set_binary(b[54])
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_binary(b[22])
set_binary(b[46])
set_binary(b[53])
set_binary(b[8])
set_binary(b[33])
set_binary(b[56])
set_binary(b[30])
set_binary(b[29])
set_binary(b[40])
set_binary(b[58])
set_binary(b[32])
set_binary(b[34])
set_binary(b[57])
set_binary(b[5])
set_binary(b[16])
set_binary(b[60])
set_binary(b[13])
set_binary(b[51])
set_binary(b[12])
set_binary(b[2])
set_binary(b[14])
set_binary(b[20])
set_binary(b[43])
set_binary(b[11])
set_binary(b[19])
set_binary(b[47])
set_binary(b[25])
set_binary(b[7])
set_binary(b[9])
set_binary(b[3])
set_binary(b[59])
set_binary(b[17])
set_binary(b[39])
set_binary(b[4])
set_binary(b[6])
set_binary(b[1])
set_binary(b[37])
set_binary(b[50])
set_binary(b[27])
set_binary(b[18])
set_binary(b[31])
set_binary(b[52])
set_binary(b[24])
set_binary(b[55])
set_binary(b[10])
set_binary(b[26])


# ----- Constraints ----- #
@constraint(m, e1, b[1]+b[2]+b[3] == 1.0)
@constraint(m, e2, b[4]+b[5]+b[6] == 1.0)
@constraint(m, e3, b[7]+b[8]+b[9] == 1.0)
@constraint(m, e4, b[10]+b[11]+b[12] == 1.0)
@constraint(m, e5, b[13]+b[14]+b[15] == 1.0)
@constraint(m, e6, b[16]+b[17]+b[18] == 1.0)
@constraint(m, e7, b[19]+b[20]+b[21] == 1.0)
@constraint(m, e8, b[22]+b[23]+b[24] == 1.0)
@constraint(m, e9, b[25]+b[26]+b[27] == 1.0)
@constraint(m, e10, b[28]+b[29]+b[30] == 1.0)
@constraint(m, e11, b[31]+b[32]+b[33] == 1.0)
@constraint(m, e12, b[34]+b[35]+b[36] == 1.0)
@constraint(m, e13, b[37]+b[38]+b[39] == 1.0)
@constraint(m, e14, b[40]+b[41]+b[42] == 1.0)
@constraint(m, e15, b[43]+b[44]+b[45] == 1.0)
@constraint(m, e16, b[46]+b[47]+b[48] == 1.0)
@constraint(m, e17, b[49]+b[50]+b[51] == 1.0)
@constraint(m, e18, b[52]+b[53]+b[54] == 1.0)
@constraint(m, e19, b[55]+b[56]+b[57] == 1.0)
@constraint(m, e20, b[58]+b[59]+b[60] == 1.0)
@NLconstraint(m, e21, b[1]*b[4]+2*b[1]*b[7]+3*b[1]*b[10]+4*b[1]*b[13]+5*b[1]*b[16]+6*b[1]*b[19]+7*b[1]*b[22]+8*b[1]*b[25]+9*b[1]*b[28]+10*b[1]*b[31]+11*b[1]*b[34]+12*b[1]*b[37]+13*b[1]*b[40]+14*b[1]*b[43]+15*b[1]*b[46]+16*b[1]*b[49]+17*b[1]*b[52]+18*b[1]*b[55]+19*b[1]*b[58]+b[2]*b[5]+2*b[2]*b[8]+3*b[2]*b[11]+4*b[2]*b[14]+5*b[2]*b[17]+6*b[2]*b[20]+7*b[2]*b[23]+8*b[2]*b[26]+9*b[2]*b[29]+10*b[2]*b[32]+11*b[2]*b[35]+12*b[2]*b[38]+13*b[2]*b[41]+14*b[2]*b[44]+15*b[2]*b[47]+16*b[2]*b[50]+17*b[2]*b[53]+18*b[2]*b[56]+19*b[2]*b[59]+b[3]*b[6]+2*b[3]*b[9]+3*b[3]*b[12]+4*b[3]*b[15]+5*b[3]*b[18]+6*b[3]*b[21]+7*b[3]*b[24]+8*b[3]*b[27]+9*b[3]*b[30]+10*b[3]*b[33]+11*b[3]*b[36]+12*b[3]*b[39]+13*b[3]*b[42]+14*b[3]*b[45]+15*b[3]*b[48]+16*b[3]*b[51]+17*b[3]*b[54]+18*b[3]*b[57]+19*b[3]*b[60]+b[4]*b[7]+2*b[4]*b[10]+3*b[4]*b[13]+4*b[4]*b[16]+5*b[4]*b[19]+6*b[4]*b[22]+7*b[4]*b[25]+8*b[4]*b[28]+9*b[4]*b[31]+10*b[4]*b[34]+11*b[4]*b[37]+12*b[4]*b[40]+13*b[4]*b[43]+14*b[4]*b[46]+15*b[4]*b[49]+16*b[4]*b[52]+17*b[4]*b[55]+18*b[4]*b[58]+b[5]*b[8]+2*b[5]*b[11]+3*b[5]*b[14]+4*b[5]*b[17]+5*b[5]*b[20]+6*b[5]*b[23]+7*b[5]*b[26]+8*b[5]*b[29]+9*b[5]*b[32]+10*b[5]*b[35]+11*b[5]*b[38]+12*b[5]*b[41]+13*b[5]*b[44]+14*b[5]*b[47]+15*b[5]*b[50]+16*b[5]*b[53]+17*b[5]*b[56]+18*b[5]*b[59]+b[6]*b[9]+2*b[6]*b[12]+3*b[6]*b[15]+4*b[6]*b[18]+5*b[6]*b[21]+6*b[6]*b[24]+7*b[6]*b[27]+8*b[6]*b[30]+9*b[6]*b[33]+10*b[6]*b[36]+11*b[6]*b[39]+12*b[6]*b[42]+13*b[6]*b[45]+14*b[6]*b[48]+15*b[6]*b[51]+16*b[6]*b[54]+17*b[6]*b[57]+18*b[6]*b[60]+b[7]*b[10]+2*b[7]*b[13]+3*b[7]*b[16]+4*b[7]*b[19]+5*b[7]*b[22]+6*b[7]*b[25]+7*b[7]*b[28]+8*b[7]*b[31]+9*b[7]*b[34]+10*b[7]*b[37]+11*b[7]*b[40]+12*b[7]*b[43]+13*b[7]*b[46]+14*b[7]*b[49]+15*b[7]*b[52]+16*b[7]*b[55]+17*b[7]*b[58]+b[8]*b[11]+2*b[8]*b[14]+3*b[8]*b[17]+4*b[8]*b[20]+5*b[8]*b[23]+6*b[8]*b[26]+7*b[8]*b[29]+8*b[8]*b[32]+9*b[8]*b[35]+10*b[8]*b[38]+11*b[8]*b[41]+12*b[8]*b[44]+13*b[8]*b[47]+14*b[8]*b[50]+15*b[8]*b[53]+16*b[8]*b[56]+17*b[8]*b[59]+b[9]*b[12]+2*b[9]*b[15]+3*b[9]*b[18]+4*b[9]*b[21]+5*b[9]*b[24]+6*b[9]*b[27]+7*b[9]*b[30]+8*b[9]*b[33]+9*b[9]*b[36]+10*b[9]*b[39]+11*b[9]*b[42]+12*b[9]*b[45]+13*b[9]*b[48]+14*b[9]*b[51]+15*b[9]*b[54]+16*b[9]*b[57]+17*b[9]*b[60]+b[10]*b[13]+2*b[10]*b[16]+3*b[10]*b[19]+4*b[10]*b[22]+5*b[10]*b[25]+6*b[10]*b[28]+7*b[10]*b[31]+8*b[10]*b[34]+9*b[10]*b[37]+10*b[10]*b[40]+11*b[10]*b[43]+12*b[10]*b[46]+13*b[10]*b[49]+14*b[10]*b[52]+15*b[10]*b[55]+16*b[10]*b[58]+b[11]*b[14]+2*b[11]*b[17]+3*b[11]*b[20]+4*b[11]*b[23]+5*b[11]*b[26]+6*b[11]*b[29]+7*b[11]*b[32]+8*b[11]*b[35]+9*b[11]*b[38]+10*b[11]*b[41]+11*b[11]*b[44]+12*b[11]*b[47]+13*b[11]*b[50]+14*b[11]*b[53]+15*b[11]*b[56]+16*b[11]*b[59]+b[12]*b[15]+2*b[12]*b[18]+3*b[12]*b[21]+4*b[12]*b[24]+5*b[12]*b[27]+6*b[12]*b[30]+7*b[12]*b[33]+8*b[12]*b[36]+9*b[12]*b[39]+10*b[12]*b[42]+11*b[12]*b[45]+12*b[12]*b[48]+13*b[12]*b[51]+14*b[12]*b[54]+15*b[12]*b[57]+16*b[12]*b[60]+b[13]*b[16]+2*b[13]*b[19]+3*b[13]*b[22]+4*b[13]*b[25]+5*b[13]*b[28]+6*b[13]*b[31]+7*b[13]*b[34]+8*b[13]*b[37]+9*b[13]*b[40]+10*b[13]*b[43]+11*b[13]*b[46]+12*b[13]*b[49]+13*b[13]*b[52]+14*b[13]*b[55]+15*b[13]*b[58]+b[14]*b[17]+2*b[14]*b[20]+3*b[14]*b[23]+4*b[14]*b[26]+5*b[14]*b[29]+6*b[14]*b[32]+7*b[14]*b[35]+8*b[14]*b[38]+9*b[14]*b[41]+10*b[14]*b[44]+11*b[14]*b[47]+12*b[14]*b[50]+13*b[14]*b[53]+14*b[14]*b[56]+15*b[14]*b[59]+b[15]*b[18]+2*b[15]*b[21]+3*b[15]*b[24]+4*b[15]*b[27]+5*b[15]*b[30]+6*b[15]*b[33]+7*b[15]*b[36]+8*b[15]*b[39]+9*b[15]*b[42]+10*b[15]*b[45]+11*b[15]*b[48]+12*b[15]*b[51]+13*b[15]*b[54]+14*b[15]*b[57]+15*b[15]*b[60]+b[16]*b[19]+2*b[16]*b[22]+3*b[16]*b[25]+4*b[16]*b[28]+5*b[16]*b[31]+6*b[16]*b[34]+7*b[16]*b[37]+8*b[16]*b[40]+9*b[16]*b[43]+10*b[16]*b[46]+11*b[16]*b[49]+12*b[16]*b[52]+13*b[16]*b[55]+14*b[16]*b[58]+b[17]*b[20]+2*b[17]*b[23]+3*b[17]*b[26]+4*b[17]*b[29]+5*b[17]*b[32]+6*b[17]*b[35]+7*b[17]*b[38]+8*b[17]*b[41]+9*b[17]*b[44]+10*b[17]*b[47]+11*b[17]*b[50]+12*b[17]*b[53]+13*b[17]*b[56]+14*b[17]*b[59]+b[18]*b[21]+2*b[18]*b[24]+3*b[18]*b[27]+4*b[18]*b[30]+5*b[18]*b[33]+6*b[18]*b[36]+7*b[18]*b[39]+8*b[18]*b[42]+9*b[18]*b[45]+10*b[18]*b[48]+11*b[18]*b[51]+12*b[18]*b[54]+13*b[18]*b[57]+14*b[18]*b[60]+b[19]*b[22]+2*b[19]*b[25]+3*b[19]*b[28]+4*b[19]*b[31]+5*b[19]*b[34]+6*b[19]*b[37]+7*b[19]*b[40]+8*b[19]*b[43]+9*b[19]*b[46]+10*b[19]*b[49]+11*b[19]*b[52]+12*b[19]*b[55]+13*b[19]*b[58]+b[20]*b[23]+2*b[20]*b[26]+3*b[20]*b[29]+4*b[20]*b[32]+5*b[20]*b[35]+6*b[20]*b[38]+7*b[20]*b[41]+8*b[20]*b[44]+9*b[20]*b[47]+10*b[20]*b[50]+11*b[20]*b[53]+12*b[20]*b[56]+13*b[20]*b[59]+b[21]*b[24]+2*b[21]*b[27]+3*b[21]*b[30]+4*b[21]*b[33]+5*b[21]*b[36]+6*b[21]*b[39]+7*b[21]*b[42]+8*b[21]*b[45]+9*b[21]*b[48]+10*b[21]*b[51]+11*b[21]*b[54]+12*b[21]*b[57]+13*b[21]*b[60]+b[22]*b[25]+2*b[22]*b[28]+3*b[22]*b[31]+4*b[22]*b[34]+5*b[22]*b[37]+6*b[22]*b[40]+7*b[22]*b[43]+8*b[22]*b[46]+9*b[22]*b[49]+10*b[22]*b[52]+11*b[22]*b[55]+12*b[22]*b[58]+b[23]*b[26]+2*b[23]*b[29]+3*b[23]*b[32]+4*b[23]*b[35]+5*b[23]*b[38]+6*b[23]*b[41]+7*b[23]*b[44]+8*b[23]*b[47]+9*b[23]*b[50]+10*b[23]*b[53]+11*b[23]*b[56]+12*b[23]*b[59]+b[24]*b[27]+2*b[24]*b[30]+3*b[24]*b[33]+4*b[24]*b[36]+5*b[24]*b[39]+6*b[24]*b[42]+7*b[24]*b[45]+8*b[24]*b[48]+9*b[24]*b[51]+10*b[24]*b[54]+11*b[24]*b[57]+12*b[24]*b[60]+b[25]*b[28]+2*b[25]*b[31]+3*b[25]*b[34]+4*b[25]*b[37]+5*b[25]*b[40]+6*b[25]*b[43]+7*b[25]*b[46]+8*b[25]*b[49]+9*b[25]*b[52]+10*b[25]*b[55]+11*b[25]*b[58]+b[26]*b[29]+2*b[26]*b[32]+3*b[26]*b[35]+4*b[26]*b[38]+5*b[26]*b[41]+6*b[26]*b[44]+7*b[26]*b[47]+8*b[26]*b[50]+9*b[26]*b[53]+10*b[26]*b[56]+11*b[26]*b[59]+b[27]*b[30]+2*b[27]*b[33]+3*b[27]*b[36]+4*b[27]*b[39]+5*b[27]*b[42]+6*b[27]*b[45]+7*b[27]*b[48]+8*b[27]*b[51]+9*b[27]*b[54]+10*b[27]*b[57]+11*b[27]*b[60]+b[28]*b[31]+2*b[28]*b[34]+3*b[28]*b[37]+4*b[28]*b[40]+5*b[28]*b[43]+6*b[28]*b[46]+7*b[28]*b[49]+8*b[28]*b[52]+9*b[28]*b[55]+10*b[28]*b[58]+b[29]*b[32]+2*b[29]*b[35]+3*b[29]*b[38]+4*b[29]*b[41]+5*b[29]*b[44]+6*b[29]*b[47]+7*b[29]*b[50]+8*b[29]*b[53]+9*b[29]*b[56]+10*b[29]*b[59]+b[30]*b[33]+2*b[30]*b[36]+3*b[30]*b[39]+4*b[30]*b[42]+5*b[30]*b[45]+6*b[30]*b[48]+7*b[30]*b[51]+8*b[30]*b[54]+9*b[30]*b[57]+10*b[30]*b[60]+b[31]*b[34]+2*b[31]*b[37]+3*b[31]*b[40]+4*b[31]*b[43]+5*b[31]*b[46]+6*b[31]*b[49]+7*b[31]*b[52]+8*b[31]*b[55]+9*b[31]*b[58]+b[32]*b[35]+2*b[32]*b[38]+3*b[32]*b[41]+4*b[32]*b[44]+5*b[32]*b[47]+6*b[32]*b[50]+7*b[32]*b[53]+8*b[32]*b[56]+9*b[32]*b[59]+b[33]*b[36]+2*b[33]*b[39]+3*b[33]*b[42]+4*b[33]*b[45]+5*b[33]*b[48]+6*b[33]*b[51]+7*b[33]*b[54]+8*b[33]*b[57]+9*b[33]*b[60]+b[34]*b[37]+2*b[34]*b[40]+3*b[34]*b[43]+4*b[34]*b[46]+5*b[34]*b[49]+6*b[34]*b[52]+7*b[34]*b[55]+8*b[34]*b[58]+b[35]*b[38]+2*b[35]*b[41]+3*b[35]*b[44]+4*b[35]*b[47]+5*b[35]*b[50]+6*b[35]*b[53]+7*b[35]*b[56]+8*b[35]*b[59]+b[36]*b[39]+2*b[36]*b[42]+3*b[36]*b[45]+4*b[36]*b[48]+5*b[36]*b[51]+6*b[36]*b[54]+7*b[36]*b[57]+8*b[36]*b[60]+b[37]*b[40]+2*b[37]*b[43]+3*b[37]*b[46]+4*b[37]*b[49]+5*b[37]*b[52]+6*b[37]*b[55]+7*b[37]*b[58]+b[38]*b[41]+2*b[38]*b[44]+3*b[38]*b[47]+4*b[38]*b[50]+5*b[38]*b[53]+6*b[38]*b[56]+7*b[38]*b[59]+b[39]*b[42]+2*b[39]*b[45]+3*b[39]*b[48]+4*b[39]*b[51]+5*b[39]*b[54]+6*b[39]*b[57]+7*b[39]*b[60]+b[40]*b[43]+2*b[40]*b[46]+3*b[40]*b[49]+4*b[40]*b[52]+5*b[40]*b[55]+6*b[40]*b[58]+b[41]*b[44]+2*b[41]*b[47]+3*b[41]*b[50]+4*b[41]*b[53]+5*b[41]*b[56]+6*b[41]*b[59]+b[42]*b[45]+2*b[42]*b[48]+3*b[42]*b[51]+4*b[42]*b[54]+5*b[42]*b[57]+6*b[42]*b[60]+b[43]*b[46]+2*b[43]*b[49]+3*b[43]*b[52]+4*b[43]*b[55]+5*b[43]*b[58]+b[44]*b[47]+2*b[44]*b[50]+3*b[44]*b[53]+4*b[44]*b[56]+5*b[44]*b[59]+b[45]*b[48]+2*b[45]*b[51]+3*b[45]*b[54]+4*b[45]*b[57]+5*b[45]*b[60]+b[46]*b[49]+2*b[46]*b[52]+3*b[46]*b[55]+4*b[46]*b[58]+b[47]*b[50]+2*b[47]*b[53]+3*b[47]*b[56]+4*b[47]*b[59]+b[48]*b[51]+2*b[48]*b[54]+3*b[48]*b[57]+4*b[48]*b[60]+b[49]*b[52]+2*b[49]*b[55]+3*b[49]*b[58]+b[50]*b[53]+2*b[50]*b[56]+3*b[50]*b[59]+b[51]*b[54]+2*b[51]*b[57]+3*b[51]*b[60]+b[52]*b[55]+2*b[52]*b[58]+b[53]*b[56]+2*b[53]*b[59]+b[54]*b[57]+2*b[54]*b[60]+b[55]*b[58]+b[56]*b[59]+b[57]*b[60]-objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.