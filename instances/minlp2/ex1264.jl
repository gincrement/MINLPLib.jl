using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 69, 70, 71, 72]
@variable(m, x[x_Idx])
b_Idx = Any[17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88]
@variable(m, b[b_Idx])
set_binary(b[35])
set_binary(b[38])
set_binary(b[44])
set_lower_bound(x[16], 0.0)
set_binary(b[78])
set_lower_bound(x[14], 0.0)
set_binary(b[75])
set_binary(b[66])
set_binary(b[85])
set_binary(b[80])
set_binary(b[82])
set_binary(b[42])
set_binary(b[49])
set_binary(b[45])
set_binary(b[81])
set_binary(b[41])
set_binary(b[48])
set_lower_bound(x[2], 0.0)
set_binary(b[23])
set_lower_bound(x[9], 0.0)
set_lower_bound(x[8], 0.0)
set_binary(b[64])
set_binary(b[54])
set_lower_bound(x[69], 0.0)
set_binary(b[21])
set_binary(b[28])
set_binary(b[36])
set_lower_bound(x[71], 0.0)
set_binary(b[22])
set_binary(b[87])
set_lower_bound(x[4], 0.0)
set_binary(b[77])
set_lower_bound(x[3], 0.0)
set_binary(b[84])
set_binary(b[46])
set_binary(b[53])
set_binary(b[33])
set_binary(b[56])
set_lower_bound(x[11], 0.0)
set_binary(b[30])
set_binary(b[79])
set_binary(b[29])
set_binary(b[40])
set_lower_bound(x[5], 0.0)
set_binary(b[61])
set_binary(b[58])
set_binary(b[74])
set_binary(b[32])
set_binary(b[34])
set_binary(b[57])
set_binary(b[86])
set_lower_bound(x[1], 0.0)
set_lower_bound(x[7], 0.0)
set_lower_bound(x[13], 0.0)
set_binary(b[60])
set_lower_bound(x[10], 0.0)
set_lower_bound(x[72], 0.0)
set_binary(b[51])
set_binary(b[68])
set_binary(b[20])
set_binary(b[43])
set_binary(b[47])
set_binary(b[19])
set_lower_bound(x[12], 0.0)
set_binary(b[25])
set_binary(b[65])
set_binary(b[83])
set_binary(b[59])
set_binary(b[17])
set_binary(b[39])
set_binary(b[76])
set_binary(b[67])
set_binary(b[37])
set_binary(b[88])
set_binary(b[50])
set_binary(b[27])
set_lower_bound(x[6], 0.0)
set_binary(b[18])
set_binary(b[31])
set_binary(b[62])
set_binary(b[52])
set_binary(b[24])
set_binary(b[55])
set_lower_bound(x[15], 0.0)
set_lower_bound(x[70], 0.0)
set_binary(b[63])
set_binary(b[26])
set_binary(b[73])
set_upper_bound(x[1], 5.0)
set_upper_bound(x[2], 5.0)
set_upper_bound(x[3], 5.0)
set_upper_bound(x[4], 5.0)
set_upper_bound(x[5], 5.0)
set_upper_bound(x[6], 5.0)
set_upper_bound(x[7], 5.0)
set_upper_bound(x[8], 5.0)
set_upper_bound(x[9], 5.0)
set_upper_bound(x[10], 5.0)
set_upper_bound(x[11], 5.0)
set_upper_bound(x[12], 5.0)
set_upper_bound(x[13], 5.0)
set_upper_bound(x[14], 5.0)
set_upper_bound(x[15], 5.0)
set_upper_bound(x[16], 5.0)
set_upper_bound(x[69], 15.0)
set_upper_bound(x[70], 12.0)
set_upper_bound(x[71], 9.0)
set_upper_bound(x[72], 6.0)


# ----- Constraints ----- #
@constraint(m, e1, -0.1*b[65]-0.2*b[66]-0.3*b[67]-0.4*b[68]-x[69]-x[70]-x[71]-x[72]+objvar == 0.0)
@NLconstraint(m, e2, x[69]*x[1]+x[70]*x[2]+x[71]*x[3]+x[72]*x[4] >= 9.0)
@NLconstraint(m, e3, x[69]*x[5]+x[70]*x[6]+x[71]*x[7]+x[72]*x[8] >= 7.0)
@NLconstraint(m, e4, x[69]*x[9]+x[70]*x[10]+x[71]*x[11]+x[72]*x[12] >= 12.0)
@NLconstraint(m, e5, x[69]*x[13]+x[70]*x[14]+x[71]*x[15]+x[72]*x[16] >= 11.0)
@constraint(m, e6, -330*x[1]-360*x[5]-385*x[9]-415*x[13]+1700*b[65] <= 0.0)
@constraint(m, e7, -330*x[2]-360*x[6]-385*x[10]-415*x[14]+1700*b[66] <= 0.0)
@constraint(m, e8, -330*x[3]-360*x[7]-385*x[11]-415*x[15]+1700*b[67] <= 0.0)
@constraint(m, e9, -330*x[4]-360*x[8]-385*x[12]-415*x[16]+1700*b[68] <= 0.0)
@constraint(m, e10, 330*x[1]+360*x[5]+385*x[9]+415*x[13]-1900*b[65] <= 0.0)
@constraint(m, e11, 330*x[2]+360*x[6]+385*x[10]+415*x[14]-1900*b[66] <= 0.0)
@constraint(m, e12, 330*x[3]+360*x[7]+385*x[11]+415*x[15]-1900*b[67] <= 0.0)
@constraint(m, e13, 330*x[4]+360*x[8]+385*x[12]+415*x[16]-1900*b[68] <= 0.0)
@constraint(m, e14, -x[1]-x[5]-x[9]-x[13]+b[65] <= 0.0)
@constraint(m, e15, -x[2]-x[6]-x[10]-x[14]+b[66] <= 0.0)
@constraint(m, e16, -x[3]-x[7]-x[11]-x[15]+b[67] <= 0.0)
@constraint(m, e17, -x[4]-x[8]-x[12]-x[16]+b[68] <= 0.0)
@constraint(m, e18, x[1]+x[5]+x[9]+x[13]-5*b[65] <= 0.0)
@constraint(m, e19, x[2]+x[6]+x[10]+x[14]-5*b[66] <= 0.0)
@constraint(m, e20, x[3]+x[7]+x[11]+x[15]-5*b[67] <= 0.0)
@constraint(m, e21, x[4]+x[8]+x[12]+x[16]-5*b[68] <= 0.0)
@constraint(m, e22, b[65]-x[69] <= 0.0)
@constraint(m, e23, b[66]-x[70] <= 0.0)
@constraint(m, e24, b[67]-x[71] <= 0.0)
@constraint(m, e25, b[68]-x[72] <= 0.0)
@constraint(m, e26, -15*b[65]+x[69] <= 0.0)
@constraint(m, e27, -12*b[66]+x[70] <= 0.0)
@constraint(m, e28, -9*b[67]+x[71] <= 0.0)
@constraint(m, e29, -6*b[68]+x[72] <= 0.0)
@constraint(m, e30, x[69]+x[70]+x[71]+x[72] >= 8.0)
@constraint(m, e31, -b[65]+b[66] <= 0.0)
@constraint(m, e32, -b[66]+b[67] <= 0.0)
@constraint(m, e33, -b[67]+b[68] <= 0.0)
@constraint(m, e34, -x[69]+x[70] <= 0.0)
@constraint(m, e35, -x[70]+x[71] <= 0.0)
@constraint(m, e36, -x[71]+x[72] <= 0.0)
@constraint(m, e37, x[1]-b[17]-2*b[18]-4*b[19] == 0.0)
@constraint(m, e38, x[2]-b[20]-2*b[21]-4*b[22] == 0.0)
@constraint(m, e39, x[3]-b[23]-2*b[24]-4*b[25] == 0.0)
@constraint(m, e40, x[4]-b[26]-2*b[27]-4*b[28] == 0.0)
@constraint(m, e41, x[5]-b[29]-2*b[30]-4*b[31] == 0.0)
@constraint(m, e42, x[6]-b[32]-2*b[33]-4*b[34] == 0.0)
@constraint(m, e43, x[7]-b[35]-2*b[36]-4*b[37] == 0.0)
@constraint(m, e44, x[8]-b[38]-2*b[39]-4*b[40] == 0.0)
@constraint(m, e45, x[9]-b[41]-2*b[42]-4*b[43] == 0.0)
@constraint(m, e46, x[10]-b[44]-2*b[45]-4*b[46] == 0.0)
@constraint(m, e47, x[11]-b[47]-2*b[48]-4*b[49] == 0.0)
@constraint(m, e48, x[12]-b[50]-2*b[51]-4*b[52] == 0.0)
@constraint(m, e49, x[13]-b[53]-2*b[54]-4*b[55] == 0.0)
@constraint(m, e50, x[14]-b[56]-2*b[57]-4*b[58] == 0.0)
@constraint(m, e51, x[15]-b[59]-2*b[60]-4*b[61] == 0.0)
@constraint(m, e52, x[16]-b[62]-2*b[63]-4*b[64] == 0.0)
@constraint(m, e53, x[69]-b[73]-2*b[74]-4*b[75]-8*b[76] == 0.0)
@constraint(m, e54, x[70]-b[77]-2*b[78]-4*b[79]-8*b[80] == 0.0)
@constraint(m, e55, x[71]-b[81]-2*b[82]-4*b[83]-8*b[84] == 0.0)
@constraint(m, e56, x[72]-b[85]-2*b[86]-4*b[87]-8*b[88] == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.