using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]
@variable(m, x[x_Idx])
set_lower_bound(x[36], 0.0)
set_lower_bound(x[4], 0.0)
set_lower_bound(x[32], 0.0)
set_lower_bound(x[6], 0.0)
set_lower_bound(x[38], 0.0)
set_lower_bound(x[42], 0.0)
set_lower_bound(x[34], 0.0)
set_lower_bound(x[5], 0.0)
set_lower_bound(x[37], 0.0)
set_lower_bound(x[40], 0.0)
set_lower_bound(x[41], 0.0)
set_lower_bound(x[39], 0.0)
set_lower_bound(x[31], 0.0)
set_lower_bound(x[33], 0.0)
set_lower_bound(x[9], 0.0)
set_lower_bound(x[8], 0.0)
set_lower_bound(x[7], 0.0)
set_lower_bound(x[35], 0.0)
set_lower_bound(x[1], 0.25)
set_upper_bound(x[1], 32.0)
set_lower_bound(x[2], -1.0)
set_upper_bound(x[2], 1.0)
set_lower_bound(x[3], -1.0)
set_upper_bound(x[3], 1.0)
set_upper_bound(x[4], 8.0)
set_upper_bound(x[5], 4.0)
set_upper_bound(x[6], 8.94427190999916)
set_upper_bound(x[7], 8.94427190999916)
set_upper_bound(x[8], 8.94427190999916)
set_upper_bound(x[9], 8.94427190999916)
set_lower_bound(x[10], -8.94427190999916)
set_upper_bound(x[10], 8.94427190999916)
set_lower_bound(x[11], -8.94427190999916)
set_upper_bound(x[11], 8.94427190999916)
set_lower_bound(x[12], -8.94427190999916)
set_upper_bound(x[12], 8.94427190999916)
set_lower_bound(x[13], -8.94427190999916)
set_upper_bound(x[13], 8.94427190999916)
set_lower_bound(x[14], -8.94427190999916)
set_upper_bound(x[14], 8.94427190999916)
set_lower_bound(x[15], -1.0)
set_upper_bound(x[15], 1.0)
set_lower_bound(x[16], -1.0)
set_upper_bound(x[16], 1.0)
set_lower_bound(x[17], -1.0)
set_upper_bound(x[17], 1.0)
set_lower_bound(x[18], -1.0)
set_upper_bound(x[18], 1.0)
set_lower_bound(x[19], -8.94427190999916)
set_upper_bound(x[19], 8.94427190999916)
set_lower_bound(x[20], -8.94427190999916)
set_upper_bound(x[20], 8.94427190999916)
set_lower_bound(x[21], -8.94427190999916)
set_upper_bound(x[21], 8.94427190999916)
set_lower_bound(x[22], -8.94427190999916)
set_upper_bound(x[22], 8.94427190999916)
set_lower_bound(x[23], -8.94427190999916)
set_upper_bound(x[23], 8.94427190999916)
set_lower_bound(x[24], -8.94427190999916)
set_upper_bound(x[24], 8.94427190999916)
set_lower_bound(x[25], -8.94427190999916)
set_upper_bound(x[25], 8.94427190999916)
set_lower_bound(x[26], -8.94427190999916)
set_upper_bound(x[26], 8.94427190999916)
set_lower_bound(x[27], -8.94427190999916)
set_upper_bound(x[27], 8.94427190999916)
set_lower_bound(x[28], -8.94427190999916)
set_upper_bound(x[28], 8.94427190999916)
set_lower_bound(x[29], 0.5)
set_upper_bound(x[29], 7.5)
set_lower_bound(x[30], 0.5)
set_upper_bound(x[30], 3.5)
set_upper_bound(x[31], 8.0)
set_upper_bound(x[32], 4.0)
set_upper_bound(x[33], 8.0)
set_upper_bound(x[34], 4.0)
set_upper_bound(x[35], 8.0)
set_upper_bound(x[36], 4.0)
set_upper_bound(x[37], 8.0)
set_upper_bound(x[38], 4.0)
set_upper_bound(x[39], 8.0)
set_upper_bound(x[40], 4.0)
set_upper_bound(x[41], 8.0)
set_upper_bound(x[42], 4.0)
set_lower_bound(objvar, 0.0)
set_upper_bound(objvar, 32.0)


# ----- Constraints ----- #
@constraint(m, e1, -x[1]+objvar == -1.16039816339745)
@NLconstraint(m, e2, -x[41]*x[42]+x[1] == 0.0)
@constraint(m, e3, x[29]-x[41] <= -0.5)
@constraint(m, e4, x[30]-x[42] <= -0.5)
@constraint(m, e5, -0.25*x[31]-0.25*x[33]-0.25*x[35]-0.25*x[37]+x[39] == 0.0)
@constraint(m, e6, -0.25*x[32]-0.25*x[34]-0.25*x[36]-0.25*x[38]+x[40] == 0.0)
@NLconstraint(m, e7, x[2]*x[2]+x[3]*x[3] == 1.0)
@constraint(m, e8, x[31]-x[41] <= 0.0)
@constraint(m, e9, x[32]-x[42] <= 0.0)
@constraint(m, e10, x[33]-x[41] <= 0.0)
@constraint(m, e11, x[34]-x[42] <= 0.0)
@constraint(m, e12, x[35]-x[41] <= 0.0)
@constraint(m, e13, x[36]-x[42] <= 0.0)
@constraint(m, e14, x[37]-x[41] <= 0.0)
@constraint(m, e15, x[38]-x[42] <= 0.0)
@constraint(m, e16, 0.25*x[2]+0.375*x[3]+x[31]-x[39] == 0.0)
@constraint(m, e17, -0.25*x[2]+0.375*x[3]+x[33]-x[39] == 0.0)
@constraint(m, e18, -0.25*x[2]-0.375*x[3]+x[35]-x[39] == 0.0)
@constraint(m, e19, 0.25*x[2]-0.375*x[3]+x[37]-x[39] == 0.0)
@constraint(m, e20, -0.375*x[2]+0.25*x[3]+x[32]-x[40] == 0.0)
@constraint(m, e21, -0.375*x[2]-0.25*x[3]+x[34]-x[40] == 0.0)
@constraint(m, e22, 0.375*x[2]-0.25*x[3]+x[36]-x[40] == 0.0)
@constraint(m, e23, 0.375*x[2]+0.25*x[3]+x[38]-x[40] == 0.0)
@NLconstraint(m, e24, x[15]*x[15]+x[16]*x[16] == 1.0)
@constraint(m, e25, -x[16]+x[17] == 0.0)
@constraint(m, e26, x[15]+x[18] == 0.0)
@NLconstraint(m, e27, x[15]*x[10]+x[4]+x[19]-x[31] == 0.0)
@NLconstraint(m, e28, x[16]*x[10]+x[5]+x[20]-x[32] == 0.0)
@NLconstraint(m, e29, x[15]*x[11]+x[4]+x[21]-x[33] == 0.0)
@NLconstraint(m, e30, x[16]*x[11]+x[5]+x[22]-x[34] == 0.0)
@NLconstraint(m, e31, x[15]*x[12]+x[4]+x[23]-x[35] == 0.0)
@NLconstraint(m, e32, x[16]*x[12]+x[5]+x[24]-x[36] == 0.0)
@NLconstraint(m, e33, x[15]*x[13]+x[4]+x[25]-x[37] == 0.0)
@NLconstraint(m, e34, x[16]*x[13]+x[5]+x[26]-x[38] == 0.0)
@NLconstraint(m, e35, x[15]*x[14]+x[4]+x[27]-x[29] == 0.0)
@NLconstraint(m, e36, x[16]*x[14]+x[5]+x[28]-x[30] == 0.0)
@NLconstraint(m, e37, -x[6]*x[17]+x[19] == 0.0)
@NLconstraint(m, e38, -x[6]*x[18]+x[20] == 0.0)
@NLconstraint(m, e39, -x[7]*x[17]+x[21] == 0.0)
@NLconstraint(m, e40, -x[7]*x[18]+x[22] == 0.0)
@NLconstraint(m, e41, -x[8]*x[17]+x[23] == 0.0)
@NLconstraint(m, e42, -x[8]*x[18]+x[24] == 0.0)
@NLconstraint(m, e43, -x[9]*x[17]+x[25] == 0.0)
@NLconstraint(m, e44, -x[9]*x[18]+x[26] == 0.0)
@constraint(m, e45, 0.5*x[17]+x[27] == 0.0)
@constraint(m, e46, 0.5*x[18]+x[28] == 0.0)
@constraint(m, e47, x[29] <= 4.0)
@constraint(m, e48, x[30] <= 2.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.