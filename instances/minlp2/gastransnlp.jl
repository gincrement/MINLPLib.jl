using JuMP

m = Model()

# ----- Variables ----- #
@variable(m, objvar)
x_Idx = Any[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
@variable(m, x[x_Idx])
set_upper_bound(x[36], 0.0)
set_lower_bound(x[54], 0.0)
set_upper_bound(x[32], 0.0)
set_upper_bound(x[27], 0.0)
set_lower_bound(x[62], 0.0)
set_lower_bound(x[25], 0.0)
set_lower_bound(x[38], 0.0)
set_upper_bound(x[30], 0.0)
set_upper_bound(x[26], 0.0)
set_lower_bound(x[45], 0.0)
set_lower_bound(x[58], 0.0)
set_lower_bound(x[42], 0.0)
set_lower_bound(x[34], 0.0)
set_lower_bound(x[11], 0.0)
set_lower_bound(x[51], 0.0)
set_upper_bound(x[29], 0.0)
set_lower_bound(x[22], 0.0)
set_lower_bound(x[56], 0.0)
set_lower_bound(x[59], 0.0)
set_upper_bound(x[37], 0.0)
set_lower_bound(x[48], 0.0)
set_lower_bound(x[63], 0.0)
set_lower_bound(x[55], 0.0)
set_lower_bound(x[44], 0.0)
set_lower_bound(x[41], 0.0)
set_lower_bound(x[39], 0.0)
set_lower_bound(x[61], 0.0)
set_upper_bound(x[33], 0.0)
set_lower_bound(x[31], 0.0)
set_lower_bound(x[47], 0.0)
set_lower_bound(x[28], 0.0)
set_upper_bound(x[35], 0.0)
set_lower_bound(x[10], 0.0)
set_lower_bound(x[64], 0.0)
set_upper_bound(x[25], 1.2)
set_upper_bound(x[26], -4.034)
set_upper_bound(x[27], -0.222)
set_lower_bound(x[28], 0.0)
set_upper_bound(x[28], 0.0)
set_upper_bound(x[29], -15.616)
set_upper_bound(x[30], -3.918)
set_upper_bound(x[31], 8.4)
set_upper_bound(x[32], -5.256)
set_upper_bound(x[33], -6.385)
set_upper_bound(x[34], 4.8)
set_upper_bound(x[35], -6.848)
set_upper_bound(x[36], -2.12)
set_upper_bound(x[37], -1.919)
set_upper_bound(x[38], 0.96)
set_lower_bound(x[39], 0.0)
set_upper_bound(x[39], 0.0)
set_lower_bound(x[40], 20.344)
set_upper_bound(x[40], 22.012)
set_lower_bound(x[41], 0.0)
set_upper_bound(x[41], 0.0)
set_lower_bound(x[42], 0.0)
set_upper_bound(x[42], 0.0)
set_lower_bound(x[43], 8.87)
set_upper_bound(x[43], 11.594)
set_lower_bound(x[44], 0.0)
set_upper_bound(x[44], 0.0)
set_upper_bound(x[45], 4382.44)
set_lower_bound(x[46], 900.0)
set_upper_bound(x[46], 6400.0)
set_upper_bound(x[47], 4382.44)
set_upper_bound(x[48], 4382.44)
set_lower_bound(x[49], 2500.0)
set_upper_bound(x[49], 4382.44)
set_lower_bound(x[50], 900.0)
set_upper_bound(x[50], 6400.0)
set_upper_bound(x[51], 5929.0)
set_lower_bound(x[52], 900.0)
set_upper_bound(x[52], 6400.0)
set_lower_bound(x[53], 900.0)
set_upper_bound(x[53], 4382.44)
set_upper_bound(x[54], 5929.0)
set_upper_bound(x[55], 4382.44)
set_upper_bound(x[56], 4382.44)
set_lower_bound(x[57], 625.0)
set_upper_bound(x[57], 4382.44)
set_upper_bound(x[58], 4382.44)
set_upper_bound(x[59], 3969.0)
set_lower_bound(x[60], 2500.0)
set_upper_bound(x[60], 4382.44)
set_upper_bound(x[61], 4382.44)
set_upper_bound(x[62], 4382.44)
set_upper_bound(x[63], 5929.0)
set_upper_bound(x[64], 6400.0)


# ----- Constraints ----- #
@constraint(m, e1, -x[17]+x[18]-x[25] == 0.0)
@constraint(m, e2, -x[6]+x[7]-x[26] == 0.0)
@constraint(m, e3, -x[23]+x[24]-x[27] == 0.0)
@constraint(m, e4, -x[10]-x[11]+x[12]+x[13]-x[28] == 0.0)
@constraint(m, e5, -x[20]-x[29] == 0.0)
@constraint(m, e6, -x[3]-x[4]+x[5]-x[30] == 0.0)
@constraint(m, e7, -x[1]-x[2]+x[3]+x[4]-x[31] == 0.0)
@constraint(m, e8, -x[7]+x[8]-x[32] == 0.0)
@constraint(m, e9, -x[12]-x[13]+x[14]+x[15]-x[33] == 0.0)
@constraint(m, e10, x[6]-x[34] == 0.0)
@constraint(m, e11, -x[19]+x[20]-x[35] == 0.0)
@constraint(m, e12, -x[16]+x[17]-x[36] == 0.0)
@constraint(m, e13, -x[24]-x[37] == 0.0)
@constraint(m, e14, -x[9]-x[18]+x[19]-x[38] == 0.0)
@constraint(m, e15, -x[22]+x[23]-x[39] == 0.0)
@constraint(m, e16, x[10]+x[11]-x[40] == 0.0)
@constraint(m, e17, -x[21]+x[22]-x[41] == 0.0)
@constraint(m, e18, -x[14]-x[15]+x[16]+x[21]-x[42] == 0.0)
@constraint(m, e19, x[1]+x[2]-x[43] == 0.0)
@constraint(m, e20, -x[5]-x[8]+x[9]-x[44] == 0.0)
@NLconstraint(m, e21, SignPower(x[1],2)+8.99076279639866*x[51]-8.99076279639866*x[63] == 0.0)
@NLconstraint(m, e22, SignPower(x[2],2)+8.99076279639866*x[51]-8.99076279639866*x[63] == 0.0)
@NLconstraint(m, e23, SignPower(x[3],2)+5.99384186426577*x[50]-5.99384186426577*x[51] == 0.0)
@NLconstraint(m, e24, SignPower(x[4],2)+5.99384186426577*x[50]-5.99384186426577*x[51] == 0.0)
@NLconstraint(m, e25, SignPower(x[5],2)-1.38319427636902*x[50]+1.38319427636902*x[64] == 0.0)
@NLconstraint(m, e26, SignPower(x[6],2)+0.0993769948466698*x[46]-0.0993769948466698*x[54] == 0.0)
@NLconstraint(m, e27, SignPower(x[7],2)-0.147352095807131*x[46]+0.147352095807131*x[52] == 0.0)
@NLconstraint(m, e28, SignPower(x[8],2)-0.224905830442463*x[52]+0.224905830442463*x[64] == 0.0)
@NLconstraint(m, e29, SignPower(x[9],2)+0.653873657919902*x[58]-0.653873657919902*x[64] == 0.0)
@NLconstraint(m, e30, SignPower(x[12],2)-1.79815255927973*x[48]+1.79815255927973*x[53] == 0.0)
@NLconstraint(m, e31, SignPower(x[13],2)-0.0265962529480588*x[48]+0.0265962529480588*x[53] == 0.0)
@NLconstraint(m, e32, SignPower(x[14],2)-1.43852204742379*x[53]+1.43852204742379*x[62] == 0.0)
@NLconstraint(m, e33, SignPower(x[15],2)-0.021277002358447*x[53]+0.021277002358447*x[62] == 0.0)
@NLconstraint(m, e34, SignPower(x[16],2)+0.856263123466539*x[56]-0.856263123466539*x[62] == 0.0)
@NLconstraint(m, e35, SignPower(x[17],2)+0.899076279639866*x[45]-0.899076279639866*x[56] == 0.0)
@NLconstraint(m, e36, SignPower(x[18],2)-7.19261023711893*x[45]+7.19261023711893*x[58] == 0.0)
@NLconstraint(m, e37, SignPower(x[19],2)+3.59630511855946*x[55]-3.59630511855946*x[58] == 0.0)
@NLconstraint(m, e38, SignPower(x[20],2)+1.43852204742379*x[49]-1.43852204742379*x[55] == 0.0)
@NLconstraint(m, e39, SignPower(x[21],2)+0.0509935163731392*x[61]-0.0509935163731392*x[62] == 0.0)
@NLconstraint(m, e40, SignPower(x[23],2)+0.0016882734118691*x[47]-0.0016882734118691*x[59] == 0.0)
@NLconstraint(m, e41, SignPower(x[24],2)-0.0275751323938619*x[47]+0.0275751323938619*x[57] == 0.0)
@NLconstraint(m, e42, - (x[10])^2+7.19261023711893*x[48]-7.19261023711893*x[60] >= 0.0)
@NLconstraint(m, e43, - (x[11])^2+0.106385011792235*x[48]-0.106385011792235*x[60] >= 0.0)
@NLconstraint(m, e44, - (x[22])^2+0.0063634920908912*x[59]-0.0063634920908912*x[61] >= 0.0)
@constraint(m, e45, -2.28*x[31]-2.28*x[34]-1.68*x[38]-1.68*x[40]-2.28*x[43]+objvar == 0.0)


# ----- Objective ----- #
@objective(m, Min, objvar)

m = m 		 # model get returned when including this script.